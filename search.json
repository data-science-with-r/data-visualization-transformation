[
  {
    "objectID": "exercises/bechdel-data-visualization.html",
    "href": "exercises/bechdel-data-visualization.html",
    "title": "Data visualization and transformation",
    "section": "",
    "text": "Important\n\n\n\nPlease reference the webR-intro programming exercise for information and instructions on how to interact with the programming exercise below."
  },
  {
    "objectID": "exercises/bechdel-data-visualization.html#getting-started",
    "href": "exercises/bechdel-data-visualization.html#getting-started",
    "title": "Data visualization and transformation",
    "section": "Getting started",
    "text": "Getting started\nPlease run the following code by clicking the green arrow just above the code chunk. When reading in the data, nothing will appear after you click the button. However, clicking the arrow ensures that your data can be used for the following programming exercise.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nIn this mini analysis we work with the data used in the FiveThirtyEight story titled “The Dollar-And-Cents Case Against Hollywood’s Exclusion of Women”.\nThis analysis is about the Bechdel test, a measure of the representation of women in fiction.\n\nPackages\nWe’ll use: tidyverse for majority of the analysis and scales for pretty plot labels later on. These are ready to use for you in this programming exercise!\n\nlibrary(tidyverse)\nlibrary(scales)\n\n\n\n\n\n\n\nNote\n\n\n\nThis a modified version of the bechdel dataset. It’s been modified to include some new variables derived from existing variables as well as to limit the scope of the data to movies released between 1990 and 2013. A link to the original dataset can be found here\n\n\n\n\nGet to know the data\nWe can use the glimpse() function to get an overview (or “glimpse”) of the data. Write the following code below to accomplish this task.\nWith your output, confirm that:\n\nThere are 1615 rows\nThere are 7 variables (columns) in the dataset\n\n\n\n\n\n\n\nWarning\n\n\n\nIf you receive the error Error: object ‘bechdel’ not found, go back and read in your data above.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nglimpse(bechdel)\n\nRows: 1,615\nColumns: 7\n$ title       &lt;chr&gt; \"21 & Over\", \"Dredd 3D\", \"12 Years a Slave\", \"2 Guns\", \"42…\n$ year        &lt;int&gt; 2013, 2012, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013…\n$ gross_2013  &lt;dbl&gt; 67878146, 55078343, 211714070, 208105475, 190040426, 18416…\n$ budget_2013 &lt;int&gt; 13000000, 45658735, 20000000, 61000000, 40000000, 22500000…\n$ roi         &lt;dbl&gt; 5.221396, 1.206305, 10.585703, 3.411565, 4.751011, 0.81851…\n$ binary      &lt;chr&gt; \"FAIL\", \"PASS\", \"FAIL\", \"FAIL\", \"FAIL\", \"FAIL\", \"FAIL\", \"P…\n$ clean_test  &lt;chr&gt; \"notalk\", \"ok\", \"notalk\", \"notalk\", \"men\", \"men\", \"notalk\"…\n\n\n\n\n\nWe can use slice() to look at rows of our data. Run the following code. Change the 5 to another number to print that many rows!\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nWhat does each observation (row) in the data set represent?\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nEach observation represents a movie."
  },
  {
    "objectID": "exercises/bechdel-data-visualization.html#variables-of-interest",
    "href": "exercises/bechdel-data-visualization.html#variables-of-interest",
    "title": "Data visualization and transformation",
    "section": "Variables of interest",
    "text": "Variables of interest\nThe variables we’ll focus on are the following:\n\nbudget_2013: Budget in 2013 inflation adjusted dollars.\ngross_2013: Gross (US and international combined) in 2013 inflation adjusted dollars.\nroi: Return on investment, calculated as the ratio of the gross to budget.\nclean_test: Bechdel test result:\n\nok = passes test\ndubious\nmen = women only talk about men\nnotalk = women don’t talk to each other\nnowomen = fewer than two women\n\nbinary: Bechdel Test PASS vs FAIL binary\n\nThere are a few other variables in the dataset, but we won’t be using them in this analysis."
  },
  {
    "objectID": "exercises/bechdel-data-visualization.html#visualizing-data-with-ggplot2",
    "href": "exercises/bechdel-data-visualization.html#visualizing-data-with-ggplot2",
    "title": "Data visualization and transformation",
    "section": "Visualizing data with ggplot2",
    "text": "Visualizing data with ggplot2\nggplot2 is the package and ggplot() is the function in this package that is used to create a plot. Interact with the code below by either running the code given, or adding code to achieve the expected solution when asked within the code chunk!\n\nggplot() creates the initial base coordinate system, and we will add layers to that base. We first specify the data set we will use with data = bechdel, and run the following to create our base.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nThe mapping argument is paired with an aesthetic (aes()), which tells us how the variables in our data set should be mapped to the visual properties of the graph.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nAs we previously mentioned, we often omit the names of the first two arguments in R functions. So you’ll often see this written as:\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nNote that the result is exactly the same.\nThe geom_xx() function specifies the type of plot we want to use to represent the data. In the code below, we want to use geom_point(), which creates a plot where each observation is represented by a point.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nggplot(bechdel, \n       aes(x = budget_2013, y = gross_2013)) +\n  geom_point()\n\nWarning: Removed 15 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\n\nNote that this results in a warning as well.\nThis warning represents the number of observations that were removed because there were missing data!"
  },
  {
    "objectID": "exercises/bechdel-data-visualization.html#gross-revenue-vs.-budget",
    "href": "exercises/bechdel-data-visualization.html#gross-revenue-vs.-budget",
    "title": "Data visualization and transformation",
    "section": "Gross revenue vs. budget",
    "text": "Gross revenue vs. budget\n\nStep 1\nThe following code changes the color of all points to coral. Explore different colors by changing “coral” to different colors!\n\n\n\n\n\n\nTip\n\n\n\nSee http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf for many color options you can use by name in R or use the hex code for a color of your choice.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nStep 2\nAdd labels for the title and x and y axes using labs(). Do this by modifying the existing code below.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nggplot(bechdel, \n       aes(x = budget_2013, y = gross_2013))+\n  geom_point(color = \"deepskyblue3\") + \n  labs(\n    x = \"Budget (in 2013 $)\", \n    y = \"Gross revenue (in 2013 $)\", \n    title = \"Gross revenue vs. budget\"\n    )\n\nWarning: Removed 15 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStep 3\nAn aesthetic is a visual property of one of the objects in your plot. Commonly used aesthetic options are:\n\ncolor\nfill\nshape\nsize\nalpha (transparency)\n\nModify the plot below, so the color of the points is based on the variable binary, and make the size of your points based on roi.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nggplot(bechdel, \n       aes(x = budget_2013, y = gross_2013,\n           color = binary, size = roi)) +\n  geom_point() + \n  labs(\n    x = \"Budget (in 2013 $)\", \n    y = \"Gross revenue (in 2013 $)\", \n    title = \"Gross revenue vs. budget, by Bechdel test result\"\n    )\n\nWarning: Removed 15 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStep 4\nalpha is used within geom_point() to change the transparency of the dots. alpha ranges between 0 and 1, with lower values equating to more transparent dots. Below, make the dots more transparent.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nStep 5\nExpand on your plot from the previous step by using [facet_wrap()](https://ggplot2.tidyverse.org/reference/facet_wrap.html) to display the association between budget and gross for different values of clean_test.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nggplot(bechdel, \n  aes(x = budget_2013, y = gross_2013,\n    color = binary, size = roi)) +\n  geom_point(alpha = 0.5) + \n  facet_wrap(~ clean_test) +\n  labs(\n    x = \"Budget (in 2013 $)\", \n    y = \"Gross revenue (in 2013 $)\", \n    title = \"Gross revenue vs. budget, by Bechdel test result\"\n    )\n\nWarning: Removed 15 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStep 6\nBelow is a demonstration on how to improve your plot from the previous step by making the x and y scales more legible.\n\n\n\n\n\n\nTip\n\n\n\nThis is done through the use of the scales package, specifically the [scale_x_continuous()](https://ggplot2.tidyverse.org/reference/scale_continuous.html) and [scale_y_continuous()](https://ggplot2.tidyverse.org/reference/scale_continuous.html) functions.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nStep 7\nExpand on your plot from the previous step by using [facet_grid()](https://ggplot2.tidyverse.org/reference/facet_grid.html) to display the association between budget and gross for different combinations of clean_test and binary.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nIs this type of facet useful? Why or why not?\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nThis was not a useful update as one of the levels of clean_test maps directly to one of the levels of binary."
  },
  {
    "objectID": "exercises/bechdel-data-visualization.html#reflection-questions",
    "href": "exercises/bechdel-data-visualization.html#reflection-questions",
    "title": "Data visualization and transformation",
    "section": "Reflection questions",
    "text": "Reflection questions\n\nWhy do you believe we are studying the content above?\n\n\n\n\n\nList three topics that you feel very confident about from the content above.\n\n\n\n\n\nList three topics that you feel could use more practice (or you are more curious about) from the content above."
  },
  {
    "objectID": "exercises/meet-programming-exercises.html",
    "href": "exercises/meet-programming-exercises.html",
    "title": "Components",
    "section": "",
    "text": "Programming exercises are designed to provide an opportunity for you to put what you learn in the videos and readings. These exercises feature interactive code chunks using a tool called WebR, which allow you to write, edit, and run R code without leaving your browser."
  },
  {
    "objectID": "exercises/meet-programming-exercises.html#code-chunks",
    "href": "exercises/meet-programming-exercises.html#code-chunks",
    "title": "Components",
    "section": "Code chunks",
    "text": "Code chunks\nInteractive code chunks look like the following:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nMajority of the code chunks in these documents will be interactive, like the one shown above. However, some code chunks will be static and include code that you can’t edit and you are just meant to read and review the output of. These will look like the following:\n\n1 + 1\n\n[1] 2\n\n\nFor example, we’ll use the tidyverse package in every programming exercise. Therefore, each exercise will start with a static code chunk that loads this package.\n\nlibrary(tidyverse)"
  },
  {
    "objectID": "exercises/meet-programming-exercises.html#questions",
    "href": "exercises/meet-programming-exercises.html#questions",
    "title": "Components",
    "section": "Questions",
    "text": "Questions\nMany of the questions in the programming exercises require you to actively do something – edit existing code, write code from scratch, write a narrative, etc. Code goes in interactive code chunks that have a Run Code button, narrative goes in text boxes.\nHowever, some questions come with complete code that you don’t need to edit, but still need to run to view the output. These questions will also often invite you to make modifications to explore alternatives.\nThe final question of each programming exercise will be a reflection questions. These questions are designed to help you think about and further engage with the concepts you just performed.\n\n\n\n\n\n\nSaving Your Work\n\n\n\nYour work does not automatically save.\nFor most browsers, the most efficient way to save your work is by using the Print feature. This may be useful if you want to come back and reference your work after you’ve completed it.\n\nRight click anywhere on this html page.\nSelect Print….\nUnder Destination drop-down menu, select Save as PDF.\nClick on Save and navigate to where you wish to save your work."
  },
  {
    "objectID": "exercises/meet-programming-exercises.html#calculator",
    "href": "exercises/meet-programming-exercises.html#calculator",
    "title": "Components",
    "section": "Calculator",
    "text": "Calculator\nFirst, let’s get started by using R as a calculator.\nIn the interactive code chunk below, perform the following calculations by typing the code and then clicking Run Code.\n\nRun code: Run the code below as is.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nModify code: Modify the code below to multiply 3 by 6 instead of 3 by 5.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nWrite code: Use the code chunk below to calculate 10 divided by 2 (10 / 2):\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\n2 + 2 \n\n[1] 4\n\n3 * 6\n\n[1] 18\n\n10 / 2\n\n[1] 5"
  },
  {
    "objectID": "exercises/meet-programming-exercises.html#functions",
    "href": "exercises/meet-programming-exercises.html#functions",
    "title": "Components",
    "section": "Functions",
    "text": "Functions\nR is a functional language. Functions act as the name of algorithmic details that are used to accomplish a specific task. For example, if I wanted to round the value 3.23, I could accomplish this with the function round() in R. The number 3.23 is an argument to the function round(). An argument is an input to a function. A value is produced as a result.\nex.\n\nround(3.22)\n\n[1] 3\n\n\nOften times, functions can take on multiple arguments. Previously, we saw round(3.225) produce the value 3. This is because round defaults to producing a value to the nearest whole number. However, we can override the default inputing a second argument. You are not expected to memorize all arguments of every function you learn during this course. If you have R locally installed, you can run a ? in front of the function name in your console to pull up a help file that will define the arguments of a function for you. These help files can also be found on line. For example, here is the help file for round here\nFrom the documentation, you can see the second argument of the function round is digits.\nYour Turn Change the 0 to another number, and take note on how this changes the corresponding output when you click Run Code.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nround(3.22, digits = 1)\n\n[1] 3.2\n\n\n\n\n\nAs you may notice, the first argument and second argument are separated by a ,. This is consistent across all functions in R.\n\n\n\n\n\n\nTip\n\n\n\nIf you provide the arguments in the exact same order as they are defined in the help file, you do not have to include the name of the argument\n\n\n\nround(3.225, 1)\n\n[1] 3.2"
  },
  {
    "objectID": "exercises/meet-programming-exercises.html#exploring-mtcars",
    "href": "exercises/meet-programming-exercises.html#exploring-mtcars",
    "title": "Components",
    "section": "Exploring mtcars",
    "text": "Exploring mtcars\nFor the remainder of this activity, we are going to practice using functions on the mtcars data set. These data were extracted from the 1974 Motor Trend US magazine, and comprises fuel consumption and 10 aspects of automobile design and performance for 32 automobiles (1973–74 models).\nDemo Run the following code to see the first six lines of data below\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nWhat is the name of the function used in the above code? What is the input?\nAnswer: \n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nThe function is named head\nThe argument is the dataset mtcars\n\n\n\nWe can also get a better sense of the data we are working with by using the glimpse() function. This allows us to see how many rows and columns we have in our data set, the type of data we are working with, and the data inputs. For now, we just want to practice writing the function to initially explore these data.\nYour Turn Use the glimpse() function on the mtcars data set below.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nHow many rows are in the mtcars data set? How many columns?\nAnswer: \n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nglimpse(mtcars)\n\nRows: 32\nColumns: 11\n$ mpg  &lt;dbl&gt; 21.0, 21.0, 22.8, 21.4, 18.7, 18.1, 14.3, 24.4, 22.8, 19.2, 17.8,…\n$ cyl  &lt;dbl&gt; 6, 6, 4, 6, 8, 6, 8, 4, 4, 6, 6, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4, 8,…\n$ disp &lt;dbl&gt; 160.0, 160.0, 108.0, 258.0, 360.0, 225.0, 360.0, 146.7, 140.8, 16…\n$ hp   &lt;dbl&gt; 110, 110, 93, 110, 175, 105, 245, 62, 95, 123, 123, 180, 180, 180…\n$ drat &lt;dbl&gt; 3.90, 3.90, 3.85, 3.08, 3.15, 2.76, 3.21, 3.69, 3.92, 3.92, 3.92,…\n$ wt   &lt;dbl&gt; 2.620, 2.875, 2.320, 3.215, 3.440, 3.460, 3.570, 3.190, 3.150, 3.…\n$ qsec &lt;dbl&gt; 16.46, 17.02, 18.61, 19.44, 17.02, 20.22, 15.84, 20.00, 22.90, 18…\n$ vs   &lt;dbl&gt; 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0,…\n$ am   &lt;dbl&gt; 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0,…\n$ gear &lt;dbl&gt; 4, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3,…\n$ carb &lt;dbl&gt; 4, 4, 1, 1, 2, 1, 4, 2, 2, 4, 4, 3, 3, 3, 4, 4, 4, 1, 2, 1, 1, 2,…\n\n\nThere are 32 rows in the mtcars data set\nThere are 11 columns in the mtcars data set\n\n\n\nYour Turn: There are many other functions we can use on data to explore it prior to making data visualizations. You are encouraged to explore the help files of the following:\n\ntail()\nslice()\n\nAfter doing so, try to answer answer the following questions!\nUse tail() to produce the last six lines of the mtcars data set.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\ntail(mtcars)\n\n                mpg cyl  disp  hp drat    wt qsec vs am gear carb\nPorsche 914-2  26.0   4 120.3  91 4.43 2.140 16.7  0  1    5    2\nLotus Europa   30.4   4  95.1 113 3.77 1.513 16.9  1  1    5    2\nFord Pantera L 15.8   8 351.0 264 4.22 3.170 14.5  0  1    5    4\nFerrari Dino   19.7   6 145.0 175 3.62 2.770 15.5  0  1    5    6\nMaserati Bora  15.0   8 301.0 335 3.54 3.570 14.6  0  1    5    8\nVolvo 142E     21.4   4 121.0 109 4.11 2.780 18.6  1  1    4    2\n\n\n\n\n\nNow, use slice to produce the first three lines of the mtcars data set.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nslice(mtcars, 1:3)\n\n               mpg cyl disp  hp drat    wt  qsec vs am gear carb\nMazda RX4     21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag 21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710    22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\n\n\n\n\n\nIn the subsequent lessons, we are going to learn how to manipulate, work with, and plot data using a variety of functions in R."
  },
  {
    "objectID": "exercises/meet-programming-exercises.html#reflection-questions",
    "href": "exercises/meet-programming-exercises.html#reflection-questions",
    "title": "Components",
    "section": "Reflection questions",
    "text": "Reflection questions\n\nWhy do you believe we are studying the content above?\n\n\n\n\n\nList three topics that you feel very confident about from the content above.\n\n\n\n\n\nList three topics that you feel could use more practice (or you are more curious about) from the content above."
  },
  {
    "objectID": "code-alongs/1-1-unvotes/1-1-unvotes-eov.html",
    "href": "code-alongs/1-1-unvotes/1-1-unvotes-eov.html",
    "title": "UN Votes  End of video",
    "section": "",
    "text": "How do various countries vote in the United Nations General Assembly, how have their voting patterns evolved throughout time, and how similarly or differently do they view certain issues? Answering these questions (at a high level) is the focus of this analysis.\n\n\nWe will use the tidyverse and scales packages for data wrangling and visualization, and the DT package for interactive display of tabular output, and the unvotes package for the data.\n\nlibrary(tidyverse)\nlibrary(scales)\nlibrary(DT)\nlibrary(unvotes)\n\n\n\n\nThe data we’re using originally come from the unvotes package. In the chunk below we modify the data by joining the various data frames provided in the package to help you get started with the analysis.\n\nunvotes &lt;- un_votes |&gt;\n  inner_join(un_roll_calls, by = \"rcid\") |&gt;\n  inner_join(un_roll_call_issues, by = \"rcid\", relationship =\n  \"many-to-many\")"
  },
  {
    "objectID": "code-alongs/1-1-unvotes/1-1-unvotes-eov.html#packages",
    "href": "code-alongs/1-1-unvotes/1-1-unvotes-eov.html#packages",
    "title": "UN Votes  End of video",
    "section": "",
    "text": "We will use the tidyverse and scales packages for data wrangling and visualization, and the DT package for interactive display of tabular output, and the unvotes package for the data.\n\nlibrary(tidyverse)\nlibrary(scales)\nlibrary(DT)\nlibrary(unvotes)"
  },
  {
    "objectID": "code-alongs/1-1-unvotes/1-1-unvotes-eov.html#data",
    "href": "code-alongs/1-1-unvotes/1-1-unvotes-eov.html#data",
    "title": "UN Votes  End of video",
    "section": "",
    "text": "The data we’re using originally come from the unvotes package. In the chunk below we modify the data by joining the various data frames provided in the package to help you get started with the analysis.\n\nunvotes &lt;- un_votes |&gt;\n  inner_join(un_roll_calls, by = \"rcid\") |&gt;\n  inner_join(un_roll_call_issues, by = \"rcid\", relationship =\n  \"many-to-many\")"
  },
  {
    "objectID": "code-alongs/3-2-starwars-characters/3-2-starwars-characters.html",
    "href": "code-alongs/3-2-starwars-characters/3-2-starwars-characters.html",
    "title": "Starwars characters",
    "section": "",
    "text": "You might not be a Star Wars fan, but you’ve probably heard of the movie franchise!\n\n\nWe will use the tidyverse packages for data wrangling and for the data.\n\n\n\nThe dataset we will explore is called starwars."
  },
  {
    "objectID": "code-alongs/3-2-starwars-characters/3-2-starwars-characters.html#packages",
    "href": "code-alongs/3-2-starwars-characters/3-2-starwars-characters.html#packages",
    "title": "Starwars characters",
    "section": "",
    "text": "We will use the tidyverse packages for data wrangling and for the data."
  },
  {
    "objectID": "code-alongs/3-2-starwars-characters/3-2-starwars-characters.html#data",
    "href": "code-alongs/3-2-starwars-characters/3-2-starwars-characters.html#data",
    "title": "Starwars characters",
    "section": "",
    "text": "The dataset we will explore is called starwars."
  },
  {
    "objectID": "code-alongs/3-2-starwars-characters/3-2-starwars-characters.html#exercise-1",
    "href": "code-alongs/3-2-starwars-characters/3-2-starwars-characters.html#exercise-1",
    "title": "Starwars characters",
    "section": "Exercise 1",
    "text": "Exercise 1\nGlimpse at the starwars data frame.\n\nglimpse(starwars)\n\nRows: 87\nColumns: 14\n$ name       &lt;chr&gt; \"Luke Skywalker\", \"C-3PO\", \"R2-D2\", \"Darth Vader\", \"Leia Or…\n$ height     &lt;int&gt; 172, 167, 96, 202, 150, 178, 165, 97, 183, 182, 188, 180, 2…\n$ mass       &lt;dbl&gt; 77.0, 75.0, 32.0, 136.0, 49.0, 120.0, 75.0, 32.0, 84.0, 77.…\n$ hair_color &lt;chr&gt; \"blond\", NA, NA, \"none\", \"brown\", \"brown, grey\", \"brown\", N…\n$ skin_color &lt;chr&gt; \"fair\", \"gold\", \"white, blue\", \"white\", \"light\", \"light\", \"…\n$ eye_color  &lt;chr&gt; \"blue\", \"yellow\", \"red\", \"yellow\", \"brown\", \"blue\", \"blue\",…\n$ birth_year &lt;dbl&gt; 19.0, 112.0, 33.0, 41.9, 19.0, 52.0, 47.0, NA, 24.0, 57.0, …\n$ sex        &lt;chr&gt; \"male\", \"none\", \"none\", \"male\", \"female\", \"male\", \"female\",…\n$ gender     &lt;chr&gt; \"masculine\", \"masculine\", \"masculine\", \"masculine\", \"femini…\n$ homeworld  &lt;chr&gt; \"Tatooine\", \"Tatooine\", \"Naboo\", \"Tatooine\", \"Alderaan\", \"T…\n$ species    &lt;chr&gt; \"Human\", \"Droid\", \"Droid\", \"Human\", \"Human\", \"Human\", \"Huma…\n$ films      &lt;list&gt; &lt;\"A New Hope\", \"The Empire Strikes Back\", \"Return of the J…\n$ vehicles   &lt;list&gt; &lt;\"Snowspeeder\", \"Imperial Speeder Bike\"&gt;, &lt;&gt;, &lt;&gt;, &lt;&gt;, \"Imp…\n$ starships  &lt;list&gt; &lt;\"X-wing\", \"Imperial shuttle\"&gt;, &lt;&gt;, &lt;&gt;, \"TIE Advanced x1\",…"
  },
  {
    "objectID": "code-alongs/3-2-starwars-characters/3-2-starwars-characters.html#exercise-2",
    "href": "code-alongs/3-2-starwars-characters/3-2-starwars-characters.html#exercise-2",
    "title": "Starwars characters",
    "section": "Exercise 2",
    "text": "Exercise 2\nModify the following plot to change color the points by gender.\n\nggplot(starwars, aes(x = height, y = mass)) +\n  geom_point()\n\nWarning: Removed 28 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "code-alongs/3-2-starwars-characters/3-2-starwars-characters.html#exercise-3",
    "href": "code-alongs/3-2-starwars-characters/3-2-starwars-characters.html#exercise-3",
    "title": "Starwars characters",
    "section": "Exercise 3",
    "text": "Exercise 3\nModify the following plot to change the color of all points to \"pink\".\n\nggplot(starwars, aes(x = height, y = mass)) +\n  geom_point()\n\nWarning: Removed 28 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "code-alongs/3-2-starwars-characters/3-2-starwars-characters.html#exercise-4",
    "href": "code-alongs/3-2-starwars-characters/3-2-starwars-characters.html#exercise-4",
    "title": "Starwars characters",
    "section": "Exercise 4",
    "text": "Exercise 4\nAdd labels for title, x and y axes, and color of points.\n\nggplot(starwars, aes(x = height, y = mass, color = gender)) +\n  geom_point()\n\nWarning: Removed 28 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "code-alongs/3-2-starwars-characters/3-2-starwars-characters.html#exercise-5",
    "href": "code-alongs/3-2-starwars-characters/3-2-starwars-characters.html#exercise-5",
    "title": "Starwars characters",
    "section": "Exercise 5",
    "text": "Exercise 5\nPick a single categorical variable from the data set and make a bar plot of its distribution. Describe what you see in the plot.\nAdd description here.\n\n# add code here"
  },
  {
    "objectID": "code-alongs/3-2-starwars-characters/3-2-starwars-characters.html#exercise-6",
    "href": "code-alongs/3-2-starwars-characters/3-2-starwars-characters.html#exercise-6",
    "title": "Starwars characters",
    "section": "Exercise 6",
    "text": "Exercise 6\nPick two categorical variables and make a visualization to visualize the relationship between the these variables. Along with your code and output, provide an interpretation of the visualization.\nAdd interpretation here.\n\n# add code here"
  },
  {
    "objectID": "code-alongs/3-2-starwars-characters/3-2-starwars-characters.html#exercise-7",
    "href": "code-alongs/3-2-starwars-characters/3-2-starwars-characters.html#exercise-7",
    "title": "Starwars characters",
    "section": "Exercise 7",
    "text": "Exercise 7\nPick three categorical variables and make a visualization to visualize the relationship between the these variables. Along with your code and output, provide an interpretation of the visualization.\nAdd interpretation here.\n\n# add code here"
  },
  {
    "objectID": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes-eov.html",
    "href": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes-eov.html",
    "title": "Flights and pipes  End of video",
    "section": "",
    "text": "Have you ever had a flight delayed? How common is that? Which airlines are delayed more than others?\n\n\nWe will use the tidyverse packages for data wrangling and visualization and the nycflights13 package for the data.\n\nlibrary(tidyverse)\nlibrary(nycflights13)\n\n\n\n\nThe dataset we will explore is called flights. Let’s glimpse() at it.\n\nglimpse(flights)\n\nRows: 336,776\nColumns: 19\n$ year           &lt;int&gt; 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2…\n$ month          &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ day            &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ dep_time       &lt;int&gt; 517, 533, 542, 544, 554, 554, 555, 557, 557, 558, 558, …\n$ sched_dep_time &lt;int&gt; 515, 529, 540, 545, 600, 558, 600, 600, 600, 600, 600, …\n$ dep_delay      &lt;dbl&gt; 2, 4, 2, -1, -6, -4, -5, -3, -3, -2, -2, -2, -2, -2, -1…\n$ arr_time       &lt;int&gt; 830, 850, 923, 1004, 812, 740, 913, 709, 838, 753, 849,…\n$ sched_arr_time &lt;int&gt; 819, 830, 850, 1022, 837, 728, 854, 723, 846, 745, 851,…\n$ arr_delay      &lt;dbl&gt; 11, 20, 33, -18, -25, 12, 19, -14, -8, 8, -2, -3, 7, -1…\n$ carrier        &lt;chr&gt; \"UA\", \"UA\", \"AA\", \"B6\", \"DL\", \"UA\", \"B6\", \"EV\", \"B6\", \"…\n$ flight         &lt;int&gt; 1545, 1714, 1141, 725, 461, 1696, 507, 5708, 79, 301, 4…\n$ tailnum        &lt;chr&gt; \"N14228\", \"N24211\", \"N619AA\", \"N804JB\", \"N668DN\", \"N394…\n$ origin         &lt;chr&gt; \"EWR\", \"LGA\", \"JFK\", \"JFK\", \"LGA\", \"EWR\", \"EWR\", \"LGA\",…\n$ dest           &lt;chr&gt; \"IAH\", \"IAH\", \"MIA\", \"BQN\", \"ATL\", \"ORD\", \"FLL\", \"IAD\",…\n$ air_time       &lt;dbl&gt; 227, 227, 160, 183, 116, 150, 158, 53, 140, 138, 149, 1…\n$ distance       &lt;dbl&gt; 1400, 1416, 1089, 1576, 762, 719, 1065, 229, 944, 733, …\n$ hour           &lt;dbl&gt; 5, 5, 5, 5, 6, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 6, 6, 6…\n$ minute         &lt;dbl&gt; 15, 29, 40, 45, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 0…\n$ time_hour      &lt;dttm&gt; 2013-01-01 05:00:00, 2013-01-01 05:00:00, 2013-01-01 0…"
  },
  {
    "objectID": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes-eov.html#packages",
    "href": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes-eov.html#packages",
    "title": "Flights and pipes  End of video",
    "section": "",
    "text": "We will use the tidyverse packages for data wrangling and visualization and the nycflights13 package for the data.\n\nlibrary(tidyverse)\nlibrary(nycflights13)"
  },
  {
    "objectID": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes-eov.html#data",
    "href": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes-eov.html#data",
    "title": "Flights and pipes  End of video",
    "section": "",
    "text": "The dataset we will explore is called flights. Let’s glimpse() at it.\n\nglimpse(flights)\n\nRows: 336,776\nColumns: 19\n$ year           &lt;int&gt; 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2…\n$ month          &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ day            &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ dep_time       &lt;int&gt; 517, 533, 542, 544, 554, 554, 555, 557, 557, 558, 558, …\n$ sched_dep_time &lt;int&gt; 515, 529, 540, 545, 600, 558, 600, 600, 600, 600, 600, …\n$ dep_delay      &lt;dbl&gt; 2, 4, 2, -1, -6, -4, -5, -3, -3, -2, -2, -2, -2, -2, -1…\n$ arr_time       &lt;int&gt; 830, 850, 923, 1004, 812, 740, 913, 709, 838, 753, 849,…\n$ sched_arr_time &lt;int&gt; 819, 830, 850, 1022, 837, 728, 854, 723, 846, 745, 851,…\n$ arr_delay      &lt;dbl&gt; 11, 20, 33, -18, -25, 12, 19, -14, -8, 8, -2, -3, 7, -1…\n$ carrier        &lt;chr&gt; \"UA\", \"UA\", \"AA\", \"B6\", \"DL\", \"UA\", \"B6\", \"EV\", \"B6\", \"…\n$ flight         &lt;int&gt; 1545, 1714, 1141, 725, 461, 1696, 507, 5708, 79, 301, 4…\n$ tailnum        &lt;chr&gt; \"N14228\", \"N24211\", \"N619AA\", \"N804JB\", \"N668DN\", \"N394…\n$ origin         &lt;chr&gt; \"EWR\", \"LGA\", \"JFK\", \"JFK\", \"LGA\", \"EWR\", \"EWR\", \"LGA\",…\n$ dest           &lt;chr&gt; \"IAH\", \"IAH\", \"MIA\", \"BQN\", \"ATL\", \"ORD\", \"FLL\", \"IAD\",…\n$ air_time       &lt;dbl&gt; 227, 227, 160, 183, 116, 150, 158, 53, 140, 138, 149, 1…\n$ distance       &lt;dbl&gt; 1400, 1416, 1089, 1576, 762, 719, 1065, 229, 944, 733, …\n$ hour           &lt;dbl&gt; 5, 5, 5, 5, 6, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 6, 6, 6…\n$ minute         &lt;dbl&gt; 15, 29, 40, 45, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 0…\n$ time_hour      &lt;dttm&gt; 2013-01-01 05:00:00, 2013-01-01 05:00:00, 2013-01-01 0…"
  },
  {
    "objectID": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes-eov.html#exercise-1",
    "href": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes-eov.html#exercise-1",
    "title": "Flights and pipes  End of video",
    "section": "Exercise 1",
    "text": "Exercise 1\nFill in the blanks:\nThe flights data frame has 336776 rows. Each row represents a flight out of one of three NYC airports in 2013."
  },
  {
    "objectID": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes-eov.html#exercise-2",
    "href": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes-eov.html#exercise-2",
    "title": "Flights and pipes  End of video",
    "section": "Exercise 2",
    "text": "Exercise 2\nWhat are the names of the variables in flights.\n\nnames(flights)\n\n [1] \"year\"           \"month\"          \"day\"            \"dep_time\"      \n [5] \"sched_dep_time\" \"dep_delay\"      \"arr_time\"       \"sched_arr_time\"\n [9] \"arr_delay\"      \"carrier\"        \"flight\"         \"tailnum\"       \n[13] \"origin\"         \"dest\"           \"air_time\"       \"distance\"      \n[17] \"hour\"           \"minute\"         \"time_hour\""
  },
  {
    "objectID": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes-eov.html#exercise-3---select",
    "href": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes-eov.html#exercise-3---select",
    "title": "Flights and pipes  End of video",
    "section": "Exercise 3 - select()",
    "text": "Exercise 3 - select()\n\nMake a data frame that only contains the variables dep_delay and arr_delay.\n\n\nflights |&gt;\n  select(dep_delay, arr_delay)\n\n# A tibble: 336,776 × 2\n   dep_delay arr_delay\n       &lt;dbl&gt;     &lt;dbl&gt;\n 1         2        11\n 2         4        20\n 3         2        33\n 4        -1       -18\n 5        -6       -25\n 6        -4        12\n 7        -5        19\n 8        -3       -14\n 9        -3        -8\n10        -2         8\n# ℹ 336,766 more rows\n\n\n\nMake a data frame that keeps every variable except dep_delay.\n\n\nflights |&gt;\n  select(!dep_delay)\n\n# A tibble: 336,776 × 18\n    year month   day dep_time sched_dep_time arr_time sched_arr_time arr_delay\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n 1  2013     1     1      517            515      830            819        11\n 2  2013     1     1      533            529      850            830        20\n 3  2013     1     1      542            540      923            850        33\n 4  2013     1     1      544            545     1004           1022       -18\n 5  2013     1     1      554            600      812            837       -25\n 6  2013     1     1      554            558      740            728        12\n 7  2013     1     1      555            600      913            854        19\n 8  2013     1     1      557            600      709            723       -14\n 9  2013     1     1      557            600      838            846        -8\n10  2013     1     1      558            600      753            745         8\n# ℹ 336,766 more rows\n# ℹ 10 more variables: carrier &lt;chr&gt;, flight &lt;int&gt;, tailnum &lt;chr&gt;,\n#   origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;,\n#   minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\nMake a data frame that includes all variables between year through dep_delay (inclusive). These are all variables that provide information about the departure of each flight.\n\n\nflights |&gt;\n  select(year:dep_delay)\n\n# A tibble: 336,776 × 6\n    year month   day dep_time sched_dep_time dep_delay\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n 1  2013     1     1      517            515         2\n 2  2013     1     1      533            529         4\n 3  2013     1     1      542            540         2\n 4  2013     1     1      544            545        -1\n 5  2013     1     1      554            600        -6\n 6  2013     1     1      554            558        -4\n 7  2013     1     1      555            600        -5\n 8  2013     1     1      557            600        -3\n 9  2013     1     1      557            600        -3\n10  2013     1     1      558            600        -2\n# ℹ 336,766 more rows\n\n\n\nUse the select helper contains() to make a data frame that includes the variables associated with the arrival, i.e., contains the string \"arr_\" in the name.\n\n\nflights |&gt;\n  select(contains(\"arr_\"))\n\n# A tibble: 336,776 × 3\n   arr_time sched_arr_time arr_delay\n      &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n 1      830            819        11\n 2      850            830        20\n 3      923            850        33\n 4     1004           1022       -18\n 5      812            837       -25\n 6      740            728        12\n 7      913            854        19\n 8      709            723       -14\n 9      838            846        -8\n10      753            745         8\n# ℹ 336,766 more rows"
  },
  {
    "objectID": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes-eov.html#exercise-4---slice",
    "href": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes-eov.html#exercise-4---slice",
    "title": "Flights and pipes  End of video",
    "section": "Exercise 4 - slice()",
    "text": "Exercise 4 - slice()\n\nDisplay the first five rows of the flights data frame.\n\n\nflights |&gt;\n  slice(1:5)\n\n# A tibble: 5 × 19\n   year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n1  2013     1     1      517            515         2      830            819\n2  2013     1     1      533            529         4      850            830\n3  2013     1     1      542            540         2      923            850\n4  2013     1     1      544            545        -1     1004           1022\n5  2013     1     1      554            600        -6      812            837\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\nDisplay the last two rows of the flights data frame.\n\n\nflights |&gt;\n  slice_tail(n = 2)\n\n# A tibble: 2 × 19\n   year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n1  2013     9    30       NA           1159        NA       NA           1344\n2  2013     9    30       NA            840        NA       NA           1020\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes-eov.html#exercise-5---arrange",
    "href": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes-eov.html#exercise-5---arrange",
    "title": "Flights and pipes  End of video",
    "section": "Exercise 5 - arrange()",
    "text": "Exercise 5 - arrange()\n\nLet’s arrange the data by departure delay, so the flights with the shortest departure delays will be at the top of the data frame.\n\n\nflights |&gt;\n  arrange(dep_delay)\n\n# A tibble: 336,776 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013    12     7     2040           2123       -43       40           2352\n 2  2013     2     3     2022           2055       -33     2240           2338\n 3  2013    11    10     1408           1440       -32     1549           1559\n 4  2013     1    11     1900           1930       -30     2233           2243\n 5  2013     1    29     1703           1730       -27     1947           1957\n 6  2013     8     9      729            755       -26     1002            955\n 7  2013    10    23     1907           1932       -25     2143           2143\n 8  2013     3    30     2030           2055       -25     2213           2250\n 9  2013     3     2     1431           1455       -24     1601           1631\n10  2013     5     5      934            958       -24     1225           1309\n# ℹ 336,766 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\nWhat does it mean for the dep_delay to have a negative value?\n\nFlight took off 43 minutes earlier than it was scheduled.\n\nArrange the data by descending departure delay, so the flights with the longest departure delays will be at the top.\n\n\nflights |&gt;\n  arrange(desc(dep_delay))\n\n# A tibble: 336,776 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     9      641            900      1301     1242           1530\n 2  2013     6    15     1432           1935      1137     1607           2120\n 3  2013     1    10     1121           1635      1126     1239           1810\n 4  2013     9    20     1139           1845      1014     1457           2210\n 5  2013     7    22      845           1600      1005     1044           1815\n 6  2013     4    10     1100           1900       960     1342           2211\n 7  2013     3    17     2321            810       911      135           1020\n 8  2013     6    27      959           1900       899     1236           2226\n 9  2013     7    22     2257            759       898      121           1026\n10  2013    12     5      756           1700       896     1058           2020\n# ℹ 336,766 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\nCreate a data frame that only includes the plane tail number (tailnum), carrier (carrier), and departure delay for the flight with the longest departure delay. What is the plane tail number (tailnum) for this flight?\n\n\nflights |&gt;\n  arrange(desc(dep_delay)) |&gt;\n  slice_head(n = 1) |&gt;\n  select(tailnum, carrier, dep_delay)\n\n# A tibble: 1 × 3\n  tailnum carrier dep_delay\n  &lt;chr&gt;   &lt;chr&gt;       &lt;dbl&gt;\n1 N384HA  HA           1301"
  },
  {
    "objectID": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes-eov.html#exercise-6---filter",
    "href": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes-eov.html#exercise-6---filter",
    "title": "Flights and pipes  End of video",
    "section": "Exercise 6 - filter()",
    "text": "Exercise 6 - filter()\n\nFilter for all rows where the destination airport is RDU.\n\n\nflights |&gt;\n  filter(dest == \"RDU\")\n\n# A tibble: 8,163 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      800            810       -10      949            955\n 2  2013     1     1      832            840        -8     1006           1030\n 3  2013     1     1      851            851         0     1032           1036\n 4  2013     1     1      917            920        -3     1052           1108\n 5  2013     1     1     1024           1030        -6     1204           1215\n 6  2013     1     1     1127           1129        -2     1303           1309\n 7  2013     1     1     1157           1205        -8     1342           1345\n 8  2013     1     1     1240           1235         5     1415           1415\n 9  2013     1     1     1317           1325        -8     1454           1505\n10  2013     1     1     1449           1450        -1     1651           1640\n# ℹ 8,153 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\nFilter for all rows where the destination airport is RDU and the arrival delay is less than 0.\n\n\nflights |&gt;\n  filter(dest == \"RDU\" & arr_delay &lt; 0)\n\n# A tibble: 4,232 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      800            810       -10      949            955\n 2  2013     1     1      832            840        -8     1006           1030\n 3  2013     1     1      851            851         0     1032           1036\n 4  2013     1     1      917            920        -3     1052           1108\n 5  2013     1     1     1024           1030        -6     1204           1215\n 6  2013     1     1     1127           1129        -2     1303           1309\n 7  2013     1     1     1157           1205        -8     1342           1345\n 8  2013     1     1     1317           1325        -8     1454           1505\n 9  2013     1     1     1505           1510        -5     1654           1655\n10  2013     1     1     1800           1800         0     1945           1951\n# ℹ 4,222 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\nDescribe what the code is doing in words.\n\nStart with the flights data frame, and then filter for rows where destination is RDU or GSO and arrival delay or departure delay is less than 0.\n\nflights |&gt;\n  filter(\n    dest %in% c(\"RDU\", \"GSO\"),\n    arr_delay &lt; 0 | dep_delay &lt; 0\n  )\n\n# A tibble: 6,203 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      800            810       -10      949            955\n 2  2013     1     1      832            840        -8     1006           1030\n 3  2013     1     1      851            851         0     1032           1036\n 4  2013     1     1      917            920        -3     1052           1108\n 5  2013     1     1     1024           1030        -6     1204           1215\n 6  2013     1     1     1127           1129        -2     1303           1309\n 7  2013     1     1     1157           1205        -8     1342           1345\n 8  2013     1     1     1317           1325        -8     1454           1505\n 9  2013     1     1     1449           1450        -1     1651           1640\n10  2013     1     1     1505           1510        -5     1654           1655\n# ℹ 6,193 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\nHint: Logical operators in R:\n\n\n\n\n\n\n\noperator\ndefinition\n\n\n\n\n&lt;\nis less than?\n\n\n&lt;=\nis less than or equal to?\n\n\n&gt;\nis greater than?\n\n\n&gt;=\nis greater than or equal to?\n\n\n==\nis exactly equal to?\n\n\n!=\nis not equal to?\n\n\nx & y\nis x AND y?\n\n\nx | y\nis x OR y?\n\n\nis.na(x)\nis x NA?\n\n\n!is.na(x)\nis x not NA?\n\n\nx %in% y\nis x in y?\n\n\n!(x %in% y)\nis x not in y?\n\n\n!x\nis not x? (only makes sense if x is TRUE or FALSE)"
  },
  {
    "objectID": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes-eov.html#exercise-7---count",
    "href": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes-eov.html#exercise-7---count",
    "title": "Flights and pipes  End of video",
    "section": "Exercise 7 - count()",
    "text": "Exercise 7 - count()\n\nCreate a frequency table of the destination locations for flights from New York.\n\n\nflights |&gt;\n  count(dest, sort = TRUE)\n\n# A tibble: 105 × 2\n   dest      n\n   &lt;chr&gt; &lt;int&gt;\n 1 ORD   17283\n 2 ATL   17215\n 3 LAX   16174\n 4 BOS   15508\n 5 MCO   14082\n 6 CLT   14064\n 7 SFO   13331\n 8 FLL   12055\n 9 MIA   11728\n10 DCA    9705\n# ℹ 95 more rows\n\n\n\nIn which month was there the fewest number of flights? How many flights were there in that month?\n\n\nflights |&gt;\n  count(month) |&gt;\n  arrange(n)\n\n# A tibble: 12 × 2\n   month     n\n   &lt;int&gt; &lt;int&gt;\n 1     2 24951\n 2     1 27004\n 3    11 27268\n 4     9 27574\n 5    12 28135\n 6     6 28243\n 7     4 28330\n 8     5 28796\n 9     3 28834\n10    10 28889\n11     8 29327\n12     7 29425\n\n\n\nOn which date (month + day) was there the largest number of flights? How many flights were there on that day?\n\n\nflights |&gt;\n  count(month, day, sort = TRUE)\n\n# A tibble: 365 × 3\n   month   day     n\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1    11    27  1014\n 2     7    11  1006\n 3     7     8  1004\n 4     7    10  1004\n 5    12     2  1004\n 6     7    18  1003\n 7     7    25  1003\n 8     7    12  1002\n 9     7     9  1001\n10     7    17  1001\n# ℹ 355 more rows"
  },
  {
    "objectID": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes-eov.html#exercise-8---mutate",
    "href": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes-eov.html#exercise-8---mutate",
    "title": "Flights and pipes  End of video",
    "section": "Exercise 8 - mutate()",
    "text": "Exercise 8 - mutate()\n\nConvert air_time (minutes in the air) to hours and then create a new variable, mph, the miles per hour of the flight.\n\n\nflights |&gt;\n  mutate(\n    air_time_hr = air_time / 60,\n    mph = distance / air_time_hr\n  )\n\n# A tibble: 336,776 × 21\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 336,766 more rows\n# ℹ 13 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;, air_time_hr &lt;dbl&gt;, mph &lt;dbl&gt;\n\n\n\nFirst, count the number of flights each month, and then calculate the proportion of flights in each month. What proportion of flights take place in July?\n\n\nflights |&gt;\n  count(month) |&gt;\n  mutate(prop = n / sum(n)) |&gt;\n  filter(month == 7)\n\n# A tibble: 1 × 3\n  month     n   prop\n  &lt;int&gt; &lt;int&gt;  &lt;dbl&gt;\n1     7 29425 0.0874"
  },
  {
    "objectID": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes-eov.html#exercise-9---summarize",
    "href": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes-eov.html#exercise-9---summarize",
    "title": "Flights and pipes  End of video",
    "section": "Exercise 9 - summarize()",
    "text": "Exercise 9 - summarize()\n\nFind mean arrival delay for all flights.\n\n\nflights |&gt;\n  summarize(mean_arr_delay = mean(arr_delay, na.rm = TRUE))\n\n# A tibble: 1 × 1\n  mean_arr_delay\n           &lt;dbl&gt;\n1           6.90"
  },
  {
    "objectID": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes-eov.html#exercise-10---group_by",
    "href": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes-eov.html#exercise-10---group_by",
    "title": "Flights and pipes  End of video",
    "section": "Exercise 10 - group_by()",
    "text": "Exercise 10 - group_by()\n\nFind mean arrival delay for for each month.\n\n\nflights |&gt;\n  group_by(month) |&gt;\n  summarize(mean_arr_delay = mean(arr_delay, na.rm = TRUE))\n\n# A tibble: 12 × 2\n   month mean_arr_delay\n   &lt;int&gt;          &lt;dbl&gt;\n 1     1          6.13 \n 2     2          5.61 \n 3     3          5.81 \n 4     4         11.2  \n 5     5          3.52 \n 6     6         16.5  \n 7     7         16.7  \n 8     8          6.04 \n 9     9         -4.02 \n10    10         -0.167\n11    11          0.461\n12    12         14.9  \n\n\n\nWhat is the median departure delay for each airports around NYC (origin)? Which airport has the shortest median departure delay?\n\n\nflights |&gt;\n  group_by(origin) |&gt;\n  summarize(median_dep_delay = median(dep_delay, na.rm = TRUE))\n\n# A tibble: 3 × 2\n  origin median_dep_delay\n  &lt;chr&gt;             &lt;dbl&gt;\n1 EWR                  -1\n2 JFK                  -1\n3 LGA                  -3"
  },
  {
    "objectID": "code-alongs/2-1-first-look-palmer-penguins/2-1-first-look-palmer-penguins-eov.html",
    "href": "code-alongs/2-1-first-look-palmer-penguins/2-1-first-look-palmer-penguins-eov.html",
    "title": "First look at Palmer Penguins  End of video",
    "section": "",
    "text": "How do bill sizes of penguins vary across species? And what happens if we don’t take species into consideration?\n\n\nWe will use the tidyverse packages for data wrangling and visualization and the palmerpenguins package for the data.\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\n\n\n\nThe dataset we will visualize is called penguins. Let’s glimpse() at it.\n\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male…\n$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…"
  },
  {
    "objectID": "code-alongs/2-1-first-look-palmer-penguins/2-1-first-look-palmer-penguins-eov.html#packages",
    "href": "code-alongs/2-1-first-look-palmer-penguins/2-1-first-look-palmer-penguins-eov.html#packages",
    "title": "First look at Palmer Penguins  End of video",
    "section": "",
    "text": "We will use the tidyverse packages for data wrangling and visualization and the palmerpenguins package for the data.\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)"
  },
  {
    "objectID": "code-alongs/2-1-first-look-palmer-penguins/2-1-first-look-palmer-penguins-eov.html#data",
    "href": "code-alongs/2-1-first-look-palmer-penguins/2-1-first-look-palmer-penguins-eov.html#data",
    "title": "First look at Palmer Penguins  End of video",
    "section": "",
    "text": "The dataset we will visualize is called penguins. Let’s glimpse() at it.\n\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male…\n$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…"
  },
  {
    "objectID": "code-alongs/3-3-diving-deeper-palmer-penguins/3-3-diving-deeper-palmer-penguins.html",
    "href": "code-alongs/3-3-diving-deeper-palmer-penguins/3-3-diving-deeper-palmer-penguins.html",
    "title": "Diving deeper with Palmer Penguins",
    "section": "",
    "text": "How do sizes of penguins vary across species, islands, and sexes? What about other characteristics?\n\n\nWe will use the tidyverse and ggbeeswarm packages for data wrangling and visualization and the palmerpenguins package for the data.\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\nlibrary(ggbeeswarm)\n\n\n\n\nThe dataset we will visualize is called penguins. Let’s glimpse() at it.\n\n# add code here"
  },
  {
    "objectID": "code-alongs/3-3-diving-deeper-palmer-penguins/3-3-diving-deeper-palmer-penguins.html#packages",
    "href": "code-alongs/3-3-diving-deeper-palmer-penguins/3-3-diving-deeper-palmer-penguins.html#packages",
    "title": "Diving deeper with Palmer Penguins",
    "section": "",
    "text": "We will use the tidyverse and ggbeeswarm packages for data wrangling and visualization and the palmerpenguins package for the data.\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\nlibrary(ggbeeswarm)"
  },
  {
    "objectID": "code-alongs/3-3-diving-deeper-palmer-penguins/3-3-diving-deeper-palmer-penguins.html#data",
    "href": "code-alongs/3-3-diving-deeper-palmer-penguins/3-3-diving-deeper-palmer-penguins.html#data",
    "title": "Diving deeper with Palmer Penguins",
    "section": "",
    "text": "The dataset we will visualize is called penguins. Let’s glimpse() at it.\n\n# add code here"
  },
  {
    "objectID": "code-alongs/3-3-diving-deeper-palmer-penguins/3-3-diving-deeper-palmer-penguins.html#single-variable",
    "href": "code-alongs/3-3-diving-deeper-palmer-penguins/3-3-diving-deeper-palmer-penguins.html#single-variable",
    "title": "Diving deeper with Palmer Penguins",
    "section": "Single variable",
    "text": "Single variable\n\n\n\n\n\n\nNote\n\n\n\nAnalyzing the a single variable is called univariate analysis.\n\n\nCreate visualizations of the distribution of weights of penguins.\n\nExercise 1\nMake a histogram. Set an appropriate binwidth.\n\n# add code here\n\n\n\nExercise 2\nMake a boxplot.\n\n# add code here\n\n\n\nExercise 3\nBased on these, determine if each of the following statements about the shape of the distribution is true or false.\n\nThe distribution of penguin weights in this sample is left skewed.\nThe distribution of penguin weights in this sample is unimodal."
  },
  {
    "objectID": "code-alongs/3-3-diving-deeper-palmer-penguins/3-3-diving-deeper-palmer-penguins.html#two-variables",
    "href": "code-alongs/3-3-diving-deeper-palmer-penguins/3-3-diving-deeper-palmer-penguins.html#two-variables",
    "title": "Diving deeper with Palmer Penguins",
    "section": "Two variables",
    "text": "Two variables\n\n\n\n\n\n\nNote\n\n\n\nAnalyzing the relationship between two variables is called bivariate analysis.\n\n\nCreate visualizations of the distribution of weights of penguins by species.\n\nExercise 4\nMake a single histogram. Set an appropriate binwidth.\n\n# add code here\n\n\n\nExercise 5\nUse multiple histograms via faceting, one for each species. Set an appropriate binwidth, add color as you see fit, and turn off legends if not needed.\n\n# add code here\n\n\n\nExercise 6\nUse side-by-side box plots. Add color as you see fit and turn off legends if not needed.\n\n# add code here\n\n\n\nExercise 7\nUse density plots. Add color as you see fit.\n\n# add code here\n\n\n\nExercise 8\nUse violin plots. Add color as you see fit and turn off legends if not needed.\n\n# add code here\n\n\n\nExercise 9\nMake a jittered scatter plot. Add color as you see fit and turn off legends if not needed.\n\n# add code here\n\n\n\nExercise 10\nUse beeswarm plots. Add color as you see fit and turn off legends if not needed.\n\n# add code here\n\n\n\nExercise 11\nUse multiple geoms on a single plot. Be deliberate about the order of plotting. Change the theme and the color scale of the plot. Finally, add informative labels.\n\n# add code here"
  },
  {
    "objectID": "code-alongs/3-3-diving-deeper-palmer-penguins/3-3-diving-deeper-palmer-penguins.html#multiple-variables",
    "href": "code-alongs/3-3-diving-deeper-palmer-penguins/3-3-diving-deeper-palmer-penguins.html#multiple-variables",
    "title": "Diving deeper with Palmer Penguins",
    "section": "Multiple variables",
    "text": "Multiple variables\n\n\n\n\n\n\nNote\n\n\n\nAnalyzing the relationship between three or more variables is called multivariate analysis.\n\n\n\nExercise 12\nFacet the plot you created in the previous exercise by island. Adjust labels accordingly.\n\n# add code here\n\nBefore you continue, let’s turn off all warnings the code chunks generate and resize all figures. We’ll do this by editing the YAML."
  },
  {
    "objectID": "slides/1-2-1-meet-the-toolkit-r-rstudio/1-2-1-meet-the-toolkit-r-rstudio.html#by-the-end-of-the-course-you-will-be-able-to",
    "href": "slides/1-2-1-meet-the-toolkit-r-rstudio/1-2-1-meet-the-toolkit-r-rstudio.html#by-the-end-of-the-course-you-will-be-able-to",
    "title": "Meet the toolkit: R and RStudio",
    "section": "By the end of the course, you will be able to…",
    "text": "By the end of the course, you will be able to…\n\n\ngain insights from data\ngain insights from data, using modern programming tools and techniques\ngain insights from data, using modern programming tools and techniques, reproducibly with literate programming\ngain insights from data, using modern programming tools and techniques, reproducibly with literate programming and version control"
  },
  {
    "objectID": "slides/1-2-1-meet-the-toolkit-r-rstudio/1-2-1-meet-the-toolkit-r-rstudio.html#by-the-end-of-the-course-you-will-be-able-to-1",
    "href": "slides/1-2-1-meet-the-toolkit-r-rstudio/1-2-1-meet-the-toolkit-r-rstudio.html#by-the-end-of-the-course-you-will-be-able-to-1",
    "title": "Meet the toolkit: R and RStudio",
    "section": "By the end of the course, you will be able to…",
    "text": "By the end of the course, you will be able to…\n\ngain insights from data\ngain insights from data, using modern programming tools and techniques\ngain insights from data, using modern programming tools and techniques, reproducibly with literate programming\ngain insights from data, using modern programming tools and techniques, reproducibly with literate programming and version control"
  },
  {
    "objectID": "slides/1-2-1-meet-the-toolkit-r-rstudio/1-2-1-meet-the-toolkit-r-rstudio.html#section",
    "href": "slides/1-2-1-meet-the-toolkit-r-rstudio/1-2-1-meet-the-toolkit-r-rstudio.html#section",
    "title": "Meet the toolkit: R and RStudio",
    "section": "",
    "text": "Open-source statistical programming language\nAlso an environment for statistical computing and graphics"
  },
  {
    "objectID": "slides/1-2-1-meet-the-toolkit-r-rstudio/1-2-1-meet-the-toolkit-r-rstudio.html#section-1",
    "href": "slides/1-2-1-meet-the-toolkit-r-rstudio/1-2-1-meet-the-toolkit-r-rstudio.html#section-1",
    "title": "Meet the toolkit: R and RStudio",
    "section": "",
    "text": "Convenient interface for R called an IDE (integrated development environment), e.g. “I write R code in the RStudio IDE”\nNot a requirement for programming with R, but it’s very commonly used by R programmers and data scientists"
  },
  {
    "objectID": "slides/1-2-1-meet-the-toolkit-r-rstudio/1-2-1-meet-the-toolkit-r-rstudio.html#r-vs.-rstudio",
    "href": "slides/1-2-1-meet-the-toolkit-r-rstudio/1-2-1-meet-the-toolkit-r-rstudio.html#r-vs.-rstudio",
    "title": "Meet the toolkit: R and RStudio",
    "section": "R vs. RStudio",
    "text": "R vs. RStudio\n\n\n\n\n\n\n\n\n“engine”\n\n\n\n\n\n\n\n\n\n\n\n\n\n“dashboard”"
  },
  {
    "objectID": "slides/1-2-1-meet-the-toolkit-r-rstudio/1-2-1-meet-the-toolkit-r-rstudio.html#r-packages",
    "href": "slides/1-2-1-meet-the-toolkit-r-rstudio/1-2-1-meet-the-toolkit-r-rstudio.html#r-packages",
    "title": "Meet the toolkit: R and RStudio",
    "section": "R packages",
    "text": "R packages\n\n\nPackages are the fundamental units of reproducible R code – they include reusable R functions, documentation of these functions, and sample data\nPackages are how the community extends R\nAs of April 2024, there are over 20,000 R packages available on CRAN (the Comprehensive R Archive Network)\nWe’re going to work with a small (but important) subset of these!"
  },
  {
    "objectID": "slides/1-2-1-meet-the-toolkit-r-rstudio/1-2-1-meet-the-toolkit-r-rstudio.html#section-2",
    "href": "slides/1-2-1-meet-the-toolkit-r-rstudio/1-2-1-meet-the-toolkit-r-rstudio.html#section-2",
    "title": "Meet the toolkit: R and RStudio",
    "section": "",
    "text": "Let’s take a tour of\n     and"
  },
  {
    "objectID": "slides/1-2-1-meet-the-toolkit-r-rstudio/1-2-1-meet-the-toolkit-r-rstudio.html#tour-recap-r-and-rstudio",
    "href": "slides/1-2-1-meet-the-toolkit-r-rstudio/1-2-1-meet-the-toolkit-r-rstudio.html#tour-recap-r-and-rstudio",
    "title": "Meet the toolkit: R and RStudio",
    "section": "Tour recap: R and RStudio",
    "text": "Tour recap: R and RStudio"
  },
  {
    "objectID": "slides/1-2-1-meet-the-toolkit-r-rstudio/1-2-1-meet-the-toolkit-r-rstudio.html#a-short-list-for-now-of-r-essentials",
    "href": "slides/1-2-1-meet-the-toolkit-r-rstudio/1-2-1-meet-the-toolkit-r-rstudio.html#a-short-list-for-now-of-r-essentials",
    "title": "Meet the toolkit: R and RStudio",
    "section": "A short list (for now) of R essentials",
    "text": "A short list (for now) of R essentials\n\nFunctions are (most often) verbs, followed by what they will be applied to in parentheses:\n\n\ndo_this(to_this)\ndo_that(to_this, to_that, with_those)\n\n\n\nPackages are installed with the install.packages() function and loaded with the library function, once per session:\n\n\ninstall.packages(\"package_name\")\nlibrary(package_name)"
  },
  {
    "objectID": "slides/1-2-1-meet-the-toolkit-r-rstudio/1-2-1-meet-the-toolkit-r-rstudio.html#r-essentials-continued",
    "href": "slides/1-2-1-meet-the-toolkit-r-rstudio/1-2-1-meet-the-toolkit-r-rstudio.html#r-essentials-continued",
    "title": "Meet the toolkit: R and RStudio",
    "section": "R essentials (continued)",
    "text": "R essentials (continued)\n\nColumns (variables) in data frames are accessed with $:\n\n\ndataframe$var_name\n\n\n\nObject documentation can be accessed with ?\n\n\n?mean"
  },
  {
    "objectID": "slides/1-2-1-meet-the-toolkit-r-rstudio/1-2-1-meet-the-toolkit-r-rstudio.html#tidyverse",
    "href": "slides/1-2-1-meet-the-toolkit-r-rstudio/1-2-1-meet-the-toolkit-r-rstudio.html#tidyverse",
    "title": "Meet the toolkit: R and RStudio",
    "section": "tidyverse",
    "text": "tidyverse\n\n\n\n\n\ntidyverse.org\n\n\n\nThe tidyverse is an opinionated collection of R packages designed for data science\nAll packages share an underlying philosophy and a common grammar"
  },
  {
    "objectID": "slides/1-2-1-meet-the-toolkit-r-rstudio/1-2-1-meet-the-toolkit-r-rstudio.html#acknowledgements",
    "href": "slides/1-2-1-meet-the-toolkit-r-rstudio/1-2-1-meet-the-toolkit-r-rstudio.html#acknowledgements",
    "title": "Meet the toolkit: R and RStudio",
    "section": "Acknowledgements",
    "text": "Acknowledgements\n\nPhoto of car engine: Image by Davgood Kirshot from Pixabay\nPhoto of car dashboard: Image by VariousPhotography from Pixabay\nNumber of R packages: CRAN contributed packages"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#packages",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#packages",
    "title": "Visualizing and summarizing relationships",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse) # for data wrangling and visualization\nlibrary(openintro) # for data\nlibrary(scales)    # for pretty axis labels"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#data-houses-in-duke-forest",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#data-houses-in-duke-forest",
    "title": "Visualizing and summarizing relationships",
    "section": "Data: Houses in Duke Forest",
    "text": "Data: Houses in Duke Forest\n\nglimpse(duke_forest)\n\nRows: 98\nColumns: 13\n$ address    &lt;chr&gt; \"1 Learned Pl, Durham, NC 27705\", \"1616…\n$ price      &lt;dbl&gt; 1520000, 1030000, 420000, 680000, 42850…\n$ bed        &lt;dbl&gt; 3, 5, 2, 4, 4, 3, 5, 4, 4, 3, 4, 4, 3, …\n$ bath       &lt;dbl&gt; 4.0, 4.0, 3.0, 3.0, 3.0, 3.0, 5.0, 3.0,…\n$ area       &lt;dbl&gt; 6040, 4475, 1745, 2091, 1772, 1950, 390…\n$ type       &lt;chr&gt; \"Single Family\", \"Single Family\", \"Sing…\n$ year_built &lt;dbl&gt; 1972, 1969, 1959, 1961, 2020, 2014, 196…\n$ heating    &lt;chr&gt; \"Other, Gas\", \"Forced air, Gas\", \"Force…\n$ cooling    &lt;fct&gt; central, central, central, central, cen…\n$ parking    &lt;chr&gt; \"0 spaces\", \"Carport, Covered\", \"Garage…\n$ lot        &lt;dbl&gt; 0.97, 1.38, 0.51, 0.84, 0.16, 0.45, 0.9…\n$ hoa        &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ url        &lt;chr&gt; \"https://www.zillow.com/homedetails/1-L…"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area",
    "title": "Visualizing and summarizing relationships",
    "section": "Price vs. area",
    "text": "Price vs. area"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#scatterplot",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#scatterplot",
    "title": "Visualizing and summarizing relationships",
    "section": "Scatterplot",
    "text": "Scatterplot\n\nggplot(duke_forest, aes(x = area, y = price)) +\n  geom_point()"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#correlation-coefficient",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#correlation-coefficient",
    "title": "Visualizing and summarizing relationships",
    "section": "Correlation coefficient",
    "text": "Correlation coefficient\n\nduke_forest |&gt;\n  summarize(r = cor(area, price))\n\n# A tibble: 1 × 1\n      r\n  &lt;dbl&gt;\n1 0.667"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#characteristics-of-a-relationship",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#characteristics-of-a-relationship",
    "title": "Visualizing and summarizing relationships",
    "section": "Characteristics of a relationship",
    "text": "Characteristics of a relationship\nbetween two numerical variables\n\n\n\nDirection: Positive\nStrength: Moderately strong\nForm: Linear"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#distribution-of-house-prices",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#distribution-of-house-prices",
    "title": "Visualizing and summarizing relationships",
    "section": "Distribution of house prices",
    "text": "Distribution of house prices\n\nggplot(duke_forest, aes(x = price)) +\n  geom_histogram(binwidth = 100000)"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#filled-histograms",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#filled-histograms",
    "title": "Visualizing and summarizing relationships",
    "section": "Filled histograms",
    "text": "Filled histograms\n\nggplot(duke_forest, aes(x = price, fill = cooling)) +\n  geom_histogram(binwidth = 100000)"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#side-by-side-box-plots",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#side-by-side-box-plots",
    "title": "Visualizing and summarizing relationships",
    "section": "Side-by-side box plots",
    "text": "Side-by-side box plots\n\nggplot(duke_forest, aes(x = price, y = cooling)) +\n  geom_boxplot()"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#filled-density-plots",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#filled-density-plots",
    "title": "Visualizing and summarizing relationships",
    "section": "Filled density plots",
    "text": "Filled density plots\n\nggplot(\n  duke_forest, \n  aes(x = price, color = cooling, fill = cooling)\n  ) +\n  geom_density(alpha = 0.5)"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#violin-plots",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#violin-plots",
    "title": "Visualizing and summarizing relationships",
    "section": "Violin plots",
    "text": "Violin plots\n\nggplot(duke_forest, aes(x = price, y = cooling)) +\n  geom_violin()"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#grouped-summaries",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#grouped-summaries",
    "title": "Visualizing and summarizing relationships",
    "section": "Grouped summaries",
    "text": "Grouped summaries\n\nduke_forest |&gt;\n  group_by(cooling) |&gt;\n  summarize(median_price = median(price))\n\n# A tibble: 2 × 2\n  cooling median_price\n  &lt;fct&gt;          &lt;dbl&gt;\n1 other         525000\n2 central       550000"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#multiple-summary-statistics",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#multiple-summary-statistics",
    "title": "Visualizing and summarizing relationships",
    "section": "Multiple summary statistics",
    "text": "Multiple summary statistics\n\nduke_forest |&gt;\n  group_by(cooling) |&gt;\n  summarize(\n    min_price = min(price),\n    median_price = median(price), \n    iqr_price = IQR(price),\n    max_price = max(price)\n  )\n\n# A tibble: 2 × 5\n  cooling min_price median_price iqr_price max_price\n  &lt;fct&gt;       &lt;dbl&gt;        &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n1 other       95000       525000    156500   1020000\n2 central    265000       550000    221500   1520000"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#year-built",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#year-built",
    "title": "Visualizing and summarizing relationships",
    "section": "Year built",
    "text": "Year built\n\nCreate a new variable called year_built_cat that takes on the value \"1970 or later\" if the house is built in 1970 or later, and \"1969 or earlier\" otherwise.\n\n\n\nduke_forest &lt;- duke_forest |&gt;\n  mutate(\n    year_built_cat = if_else(\n      year_built &gt;= 1970, \n      \"1970 or later\", \n      \"1969 or earlier\"\n    )\n   )"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#year-built-1",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#year-built-1",
    "title": "Visualizing and summarizing relationships",
    "section": "Year built",
    "text": "Year built\n\nduke_forest |&gt;\n  select(contains(\"year_built\"))\n\n# A tibble: 98 × 2\n   year_built year_built_cat \n        &lt;dbl&gt; &lt;chr&gt;          \n 1       1972 1970 or later  \n 2       1969 1969 or earlier\n 3       1959 1969 or earlier\n 4       1961 1969 or earlier\n 5       2020 1970 or later  \n 6       2014 1970 or later  \n 7       1968 1969 or earlier\n 8       1973 1970 or later  \n 9       1972 1970 or later  \n10       1964 1969 or earlier\n# ℹ 88 more rows"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#stacked-bar-plot-frequencies",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#stacked-bar-plot-frequencies",
    "title": "Visualizing and summarizing relationships",
    "section": "Stacked bar plot – frequencies",
    "text": "Stacked bar plot – frequencies\n\nggplot(duke_forest, aes(x = year_built_cat, fill = cooling)) +\n  geom_bar()"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#stacked-bar-plot-proportions",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#stacked-bar-plot-proportions",
    "title": "Visualizing and summarizing relationships",
    "section": "Stacked bar plot – proportions",
    "text": "Stacked bar plot – proportions\n\nggplot(duke_forest, aes(x = year_built_cat, fill = cooling)) +\n  geom_bar(position = \"fill\")"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#frequencies",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#frequencies",
    "title": "Visualizing and summarizing relationships",
    "section": "Frequencies",
    "text": "Frequencies\n\nduke_forest |&gt;\n  count(year_built_cat, cooling)\n\n# A tibble: 4 × 3\n  year_built_cat  cooling     n\n  &lt;chr&gt;           &lt;fct&gt;   &lt;int&gt;\n1 1969 or earlier other      39\n2 1969 or earlier central    27\n3 1970 or later   other      14\n4 1970 or later   central    18"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#proportions",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#proportions",
    "title": "Visualizing and summarizing relationships",
    "section": "Proportions",
    "text": "Proportions\n\nduke_forest |&gt;\n  count(year_built_cat, cooling) |&gt;\n  group_by(year_built_cat) |&gt;\n  mutate(prop = n / sum(n))\n\n# A tibble: 4 × 4\n# Groups:   year_built_cat [2]\n  year_built_cat  cooling     n  prop\n  &lt;chr&gt;           &lt;fct&gt;   &lt;int&gt; &lt;dbl&gt;\n1 1969 or earlier other      39 0.591\n2 1969 or earlier central    27 0.409\n3 1970 or later   other      14 0.438\n4 1970 or later   central    18 0.562"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling---1",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling---1",
    "title": "Visualizing and summarizing relationships",
    "section": "Price vs. area and cooling - 1",
    "text": "Price vs. area and cooling - 1\n\n\nggplot(\n  duke_forest, \n  aes(\n    x = area, y = price, \n    color = cooling, shape = cooling\n    )\n  ) +\n  geom_point()"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling---2",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling---2",
    "title": "Visualizing and summarizing relationships",
    "section": "Price vs. area and cooling - 2",
    "text": "Price vs. area and cooling - 2\n\n\nggplot(\n  duke_forest, \n  aes(\n    x = area, y = price, \n    color = cooling, shape = cooling\n    )\n  ) +\n  geom_point(alpha = 0.7, size = 4)"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling---3",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling---3",
    "title": "Visualizing and summarizing relationships",
    "section": "Price vs. area and cooling - 3",
    "text": "Price vs. area and cooling - 3\n\n\nggplot(\n  duke_forest, \n  aes(\n    x = area, y = price, \n    color = cooling, shape = cooling\n    )\n  ) +\n  geom_point(alpha = 0.7, size = 4) +\n  labs(\n    title = \"Houses in Duke Forest\",\n    subtitle = \"Durham, NC\",\n    color = \"Cooling\", shape = \"Cooling\",\n    x = \"Area (square feet)\",\n    y = \"Price (USD)\",\n    caption = \"Source: Zillow, November 2020\"\n  )"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling---4",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling---4",
    "title": "Visualizing and summarizing relationships",
    "section": "Price vs. area and cooling - 4",
    "text": "Price vs. area and cooling - 4\n\n\nggplot(\n  duke_forest, \n  aes(\n    x = area, y = price, \n    color = cooling, shape = cooling\n    )\n  ) +\n  geom_point(alpha = 0.7, size = 4) +\n  scale_color_manual(\n    values = c(\"central\" = \"darkblue\", \"other\" = \"lightsalmon3\")\n    ) +\n  labs(\n    title = \"Houses in Duke Forest\",\n    subtitle = \"Durham, NC\",\n    color = \"Cooling\", shape = \"Cooling\",\n    x = \"Area (square feet)\",\n    y = \"Price (USD)\",\n    caption = \"Source: Zillow, November 2020\"\n  )"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling---5",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling---5",
    "title": "Visualizing and summarizing relationships",
    "section": "Price vs. area and cooling - 5",
    "text": "Price vs. area and cooling - 5\n\n\nggplot(\n  duke_forest, \n  aes(\n    x = area, y = price, \n    color = cooling, shape = cooling\n    )\n  ) +\n  geom_point(alpha = 0.7, size = 4) +\n  scale_x_continuous(labels = label_number(big.mark = \",\")) +\n  scale_color_manual(\n    values = c(\"central\" = \"darkblue\", \"other\" = \"lightsalmon3\")\n    ) +\n  labs(\n    title = \"Houses in Duke Forest\",\n    subtitle = \"Durham, NC\",\n    color = \"Cooling\", shape = \"Cooling\",\n    x = \"Area (square feet)\",\n    y = \"Price (USD)\",\n    caption = \"Source: Zillow, November 2020\"\n  )"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling---6",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling---6",
    "title": "Visualizing and summarizing relationships",
    "section": "Price vs. area and cooling - 6",
    "text": "Price vs. area and cooling - 6\n\n\nggplot(\n  duke_forest, \n  aes(\n    x = area, y = price, \n    color = cooling, shape = cooling\n    )\n  ) +\n  geom_point(alpha = 0.7, size = 4) +\n  scale_x_continuous(labels = label_number(big.mark = \",\")) +\n  scale_y_continuous(labels = label_dollar()) +\n  scale_color_manual(\n    values = c(\"central\" = \"darkblue\", \"other\" = \"lightsalmon3\")\n    ) +\n  labs(\n    title = \"Houses in Duke Forest\",\n    subtitle = \"Durham, NC\",\n    color = \"Cooling\", shape = \"Cooling\",\n    x = \"Area (square feet)\",\n    y = \"Price (USD)\",\n    caption = \"Source: Zillow, November 2020\"\n  )"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling---7",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling---7",
    "title": "Visualizing and summarizing relationships",
    "section": "Price vs. area and cooling - 7",
    "text": "Price vs. area and cooling - 7\n\nduke_forest |&gt;\n  group_by(cooling) |&gt;\n  summarize(r = cor(price, area))\n\n# A tibble: 2 × 2\n  cooling     r\n  &lt;fct&gt;   &lt;dbl&gt;\n1 other   0.459\n2 central 0.854"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling---8",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling---8",
    "title": "Visualizing and summarizing relationships",
    "section": "Price vs. area and cooling - 8",
    "text": "Price vs. area and cooling - 8\n\n\nggplot(\n  duke_forest, \n  aes(\n    x = area, y = price, \n    color = cooling, shape = cooling\n    )\n  ) +\n  geom_point(alpha = 0.7, size = 4) +\n  scale_x_continuous(labels = label_number(big.mark = \",\")) +\n  scale_y_continuous(labels = label_dollar()) +\n  scale_color_manual(\n    values = c(\"central\" = \"darkblue\", \"other\" = \"lightsalmon3\")\n    ) +\n  labs(\n    title = \"Houses in Duke Forest\",\n    subtitle = \"Durham, NC\",\n    color = \"Cooling\", shape = \"Cooling\",\n    x = \"Area (square feet)\",\n    y = \"Price (USD)\",\n    caption = \"Source: Zillow, November 2020\"\n  ) +\n  facet_wrap(~cooling, ncol = 1)"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling---9",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling---9",
    "title": "Visualizing and summarizing relationships",
    "section": "Price vs. area and cooling - 9",
    "text": "Price vs. area and cooling - 9\n\n\nggplot(\n  duke_forest, \n  aes(\n    x = area, y = price, \n    color = cooling, shape = cooling\n    )\n  ) +\n  geom_point(alpha = 0.7, size = 4, show.legend = FALSE) +\n  scale_x_continuous(labels = label_number(big.mark = \",\")) +\n  scale_y_continuous(labels = label_dollar()) +\n  scale_color_manual(\n    values = c(\"central\" = \"darkblue\", \"other\" = \"lightsalmon3\")\n    ) +\n  labs(\n    title = \"Houses in Duke Forest, by cooling type\",\n    subtitle = \"Durham, NC\",\n    color = \"Cooling\", shape = \"Cooling\",\n    x = \"Area (square feet)\",\n    y = \"Price (USD)\",\n    caption = \"Source: Zillow, November 2020\"\n  ) +\n  facet_wrap(~cooling, ncol = 1)"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling",
    "title": "Visualizing and summarizing relationships",
    "section": "Price vs. area and cooling",
    "text": "Price vs. area and cooling\n\n\n\n\nThe relationship between area and price of homes in Duke Forest is positive and relatively strong, regardless of cooling type.\nThe relationship appears to be stronger, with a larger correlation coefficient (0.854 vs. 0.459), for homes cooled with central air.\nHowever the large difference in correlation coefficients for these two groups might be due to the three potential outliers in the other group with high areas and low price."
  },
  {
    "objectID": "slides/1-1-welcome/1-1-welcome.html#data-science",
    "href": "slides/1-1-welcome/1-1-welcome.html#data-science",
    "title": "Welcome",
    "section": "Data science",
    "text": "Data science\n\n\nData science is an exciting discipline that allows you to turn raw data into understanding, insight, and knowledge.\nYou’re going to learn to do this the tidy way – more on that later!\nThis is a course on introduction to data science, with an emphasis on statistical thinking."
  },
  {
    "objectID": "slides/1-1-welcome/1-1-welcome.html#course-faq",
    "href": "slides/1-1-welcome/1-1-welcome.html#course-faq",
    "title": "Welcome",
    "section": "Course FAQ",
    "text": "Course FAQ\nQ: What data science background does this course assume?\nA: None. But it does require a willingness to learn and a motivation to work with data.\n\nQ: Will we be doing computing?\nA: Yes.\n\n\nQ: What computing language will we learn?\nA: R.\n\n\nQ: Why not language X?\nA: A great discussion for the course forum!"
  },
  {
    "objectID": "slides/1-1-welcome/1-1-welcome.html#excel-not",
    "href": "slides/1-1-welcome/1-1-welcome.html#excel-not",
    "title": "Welcome",
    "section": "Excel, not…",
    "text": "Excel, not…"
  },
  {
    "objectID": "slides/1-1-welcome/1-1-welcome.html#r",
    "href": "slides/1-1-welcome/1-1-welcome.html#r",
    "title": "Welcome",
    "section": "R",
    "text": "R"
  },
  {
    "objectID": "slides/1-1-welcome/1-1-welcome.html#rstudio",
    "href": "slides/1-1-welcome/1-1-welcome.html#rstudio",
    "title": "Welcome",
    "section": "RStudio",
    "text": "RStudio"
  },
  {
    "objectID": "slides/1-1-welcome/1-1-welcome.html#data-science-life-cycle-1",
    "href": "slides/1-1-welcome/1-1-welcome.html#data-science-life-cycle-1",
    "title": "Welcome",
    "section": "Data science life cycle",
    "text": "Data science life cycle\n\n\n\n\n\n\n\nWickham, Hadley, Mine Çetinkaya-Rundel, and Garrett Grolemund. “R for Data Science.” O’Reilly Media, Inc.”, 2023."
  },
  {
    "objectID": "slides/1-1-welcome/1-1-welcome.html#import",
    "href": "slides/1-1-welcome/1-1-welcome.html#import",
    "title": "Welcome",
    "section": "Import",
    "text": "Import"
  },
  {
    "objectID": "slides/1-1-welcome/1-1-welcome.html#tidy---transform",
    "href": "slides/1-1-welcome/1-1-welcome.html#tidy---transform",
    "title": "Welcome",
    "section": "Tidy -> transform",
    "text": "Tidy -&gt; transform"
  },
  {
    "objectID": "slides/1-1-welcome/1-1-welcome.html#visualize",
    "href": "slides/1-1-welcome/1-1-welcome.html#visualize",
    "title": "Welcome",
    "section": "Visualize",
    "text": "Visualize"
  },
  {
    "objectID": "slides/1-1-welcome/1-1-welcome.html#model",
    "href": "slides/1-1-welcome/1-1-welcome.html#model",
    "title": "Welcome",
    "section": "Model",
    "text": "Model"
  },
  {
    "objectID": "slides/1-1-welcome/1-1-welcome.html#understand",
    "href": "slides/1-1-welcome/1-1-welcome.html#understand",
    "title": "Welcome",
    "section": "Understand",
    "text": "Understand"
  },
  {
    "objectID": "slides/1-1-welcome/1-1-welcome.html#communicate",
    "href": "slides/1-1-welcome/1-1-welcome.html#communicate",
    "title": "Welcome",
    "section": "Communicate",
    "text": "Communicate"
  },
  {
    "objectID": "slides/1-1-welcome/1-1-welcome.html#understand-1",
    "href": "slides/1-1-welcome/1-1-welcome.html#understand-1",
    "title": "Welcome",
    "section": "Understand",
    "text": "Understand\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# A tibble: 5 × 2\n  date             season\n  &lt;chr&gt;            &lt;chr&gt; \n1 23 January 2017  winter\n2 4 March 2017     spring\n3 14 June 2017     summer\n4 1 September 2017 fall  \n5 ...              ..."
  },
  {
    "objectID": "slides/1-1-welcome/1-1-welcome.html#understand-communicate",
    "href": "slides/1-1-welcome/1-1-welcome.html#understand-communicate",
    "title": "Welcome",
    "section": "Understand + communicate",
    "text": "Understand + communicate"
  },
  {
    "objectID": "slides/1-1-welcome/1-1-welcome.html#program",
    "href": "slides/1-1-welcome/1-1-welcome.html#program",
    "title": "Welcome",
    "section": "Program",
    "text": "Program"
  },
  {
    "objectID": "slides/1-1-welcome/1-1-welcome.html#data-visualization-and-transformation",
    "href": "slides/1-1-welcome/1-1-welcome.html#data-visualization-and-transformation",
    "title": "Welcome",
    "section": "Data visualization and transformation",
    "text": "Data visualization and transformation"
  },
  {
    "objectID": "slides/3-4-meet-the-toolkit-git-github/3-4-meet-the-toolkit-git-github.html#by-the-end-of-the-course-you-will",
    "href": "slides/3-4-meet-the-toolkit-git-github/3-4-meet-the-toolkit-git-github.html#by-the-end-of-the-course-you-will",
    "title": "Meet the toolkit: Git and GitHub",
    "section": "By the end of the course, you will …",
    "text": "By the end of the course, you will …\n\n\nunderstand the importance of version control\nunderstand how we use Git & GitHub for version control\nset up and configure a personal access token\nunderstand how to clone your course project"
  },
  {
    "objectID": "slides/3-4-meet-the-toolkit-git-github/3-4-meet-the-toolkit-git-github.html#versioning---done-badly",
    "href": "slides/3-4-meet-the-toolkit-git-github/3-4-meet-the-toolkit-git-github.html#versioning---done-badly",
    "title": "Meet the toolkit: Git and GitHub",
    "section": "Versioning - done badly",
    "text": "Versioning - done badly"
  },
  {
    "objectID": "slides/3-4-meet-the-toolkit-git-github/3-4-meet-the-toolkit-git-github.html#versioning---done-better",
    "href": "slides/3-4-meet-the-toolkit-git-github/3-4-meet-the-toolkit-git-github.html#versioning---done-better",
    "title": "Meet the toolkit: Git and GitHub",
    "section": "Versioning - done better",
    "text": "Versioning - done better"
  },
  {
    "objectID": "slides/3-4-meet-the-toolkit-git-github/3-4-meet-the-toolkit-git-github.html#versioning---done-even-better",
    "href": "slides/3-4-meet-the-toolkit-git-github/3-4-meet-the-toolkit-git-github.html#versioning---done-even-better",
    "title": "Meet the toolkit: Git and GitHub",
    "section": "Versioning - done even better",
    "text": "Versioning - done even better\nwith human readable messages"
  },
  {
    "objectID": "slides/3-4-meet-the-toolkit-git-github/3-4-meet-the-toolkit-git-github.html#git-and-github",
    "href": "slides/3-4-meet-the-toolkit-git-github/3-4-meet-the-toolkit-git-github.html#git-and-github",
    "title": "Meet the toolkit: Git and GitHub",
    "section": "Git and GitHub",
    "text": "Git and GitHub\n\n\n\n\n\n\n\n\nIt’s not the only version control system, but it’s a very popular one\nGit is a version control system – like “Track Changes” features from Microsoft Word, on steroids\n\n\n\n\n\n\n\n\nGitHub is the home for your Git-based projects on the internet – like DropBox but much, much better\nWe will use GitHub as a platform for your course projects"
  },
  {
    "objectID": "slides/3-4-meet-the-toolkit-git-github/3-4-meet-the-toolkit-git-github.html#section",
    "href": "slides/3-4-meet-the-toolkit-git-github/3-4-meet-the-toolkit-git-github.html#section",
    "title": "Meet the toolkit: Git and GitHub",
    "section": "",
    "text": "Let’s take a tour of\n\n\n\n\n\n\nProject Repo"
  },
  {
    "objectID": "slides/3-4-meet-the-toolkit-git-github/3-4-meet-the-toolkit-git-github.html#tour-recap",
    "href": "slides/3-4-meet-the-toolkit-git-github/3-4-meet-the-toolkit-git-github.html#tour-recap",
    "title": "Meet the toolkit: Git and GitHub",
    "section": "Tour recap",
    "text": "Tour recap\nCreate a GitHub account\n\nGo to Github and walk through the steps for creating an account.\nYou’ll need to choose a user name. I recommend reviewing the user name advice here before choosing a username."
  },
  {
    "objectID": "slides/3-4-meet-the-toolkit-git-github/3-4-meet-the-toolkit-git-github.html#creating-a-new-repository",
    "href": "slides/3-4-meet-the-toolkit-git-github/3-4-meet-the-toolkit-git-github.html#creating-a-new-repository",
    "title": "Meet the toolkit: Git and GitHub",
    "section": "Creating a new repository",
    "text": "Creating a new repository\n\nProject Repo\n\n\n\n\n\n\n\nMake sure you are the owner\nWe recommend naming your repo the same name as the origional"
  },
  {
    "objectID": "slides/3-4-meet-the-toolkit-git-github/3-4-meet-the-toolkit-git-github.html#personal-access-token",
    "href": "slides/3-4-meet-the-toolkit-git-github/3-4-meet-the-toolkit-git-github.html#personal-access-token",
    "title": "Meet the toolkit: Git and GitHub",
    "section": "Personal access token",
    "text": "Personal access token\n\nGet a personal access token (PAT): usethis::create_github_token()\nCopy your PAT\nInsert PAT to configure Git, GitHub and R gitcreds::gitcreds_set()\n\n&gt; gitcreds::gitcreds_set()\n\n? Enter password or token: ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n-&gt; Adding new credentials...\n-&gt; Removing credentials from cache...\n-&gt; Done."
  },
  {
    "objectID": "slides/3-4-meet-the-toolkit-git-github/3-4-meet-the-toolkit-git-github.html#clone-repository",
    "href": "slides/3-4-meet-the-toolkit-git-github/3-4-meet-the-toolkit-git-github.html#clone-repository",
    "title": "Meet the toolkit: Git and GitHub",
    "section": "Clone repository",
    "text": "Clone repository"
  },
  {
    "objectID": "slides/3-4-meet-the-toolkit-git-github/3-4-meet-the-toolkit-git-github.html#clone-repository-1",
    "href": "slides/3-4-meet-the-toolkit-git-github/3-4-meet-the-toolkit-git-github.html#clone-repository-1",
    "title": "Meet the toolkit: Git and GitHub",
    "section": "Clone repository",
    "text": "Clone repository"
  },
  {
    "objectID": "slides/3-4-meet-the-toolkit-git-github/3-4-meet-the-toolkit-git-github.html#clone-repository-2",
    "href": "slides/3-4-meet-the-toolkit-git-github/3-4-meet-the-toolkit-git-github.html#clone-repository-2",
    "title": "Meet the toolkit: Git and GitHub",
    "section": "Clone repository",
    "text": "Clone repository"
  },
  {
    "objectID": "slides/3-4-meet-the-toolkit-git-github/3-4-meet-the-toolkit-git-github.html#project",
    "href": "slides/3-4-meet-the-toolkit-git-github/3-4-meet-the-toolkit-git-github.html#project",
    "title": "Meet the toolkit: Git and GitHub",
    "section": "Project",
    "text": "Project\n\nFile -&gt; New Project\nVersion control -&gt; Git\nPaste -&gt; Create project"
  },
  {
    "objectID": "slides/3-4-meet-the-toolkit-git-github/3-4-meet-the-toolkit-git-github.html#version-control-workflow",
    "href": "slides/3-4-meet-the-toolkit-git-github/3-4-meet-the-toolkit-git-github.html#version-control-workflow",
    "title": "Meet the toolkit: Git and GitHub",
    "section": "Version control workflow",
    "text": "Version control workflow"
  },
  {
    "objectID": "slides/3-4-meet-the-toolkit-git-github/3-4-meet-the-toolkit-git-github.html#environments-window",
    "href": "slides/3-4-meet-the-toolkit-git-github/3-4-meet-the-toolkit-git-github.html#environments-window",
    "title": "Meet the toolkit: Git and GitHub",
    "section": "Environments window",
    "text": "Environments window"
  },
  {
    "objectID": "slides/3-4-meet-the-toolkit-git-github/3-4-meet-the-toolkit-git-github.html#environments-window-1",
    "href": "slides/3-4-meet-the-toolkit-git-github/3-4-meet-the-toolkit-git-github.html#environments-window-1",
    "title": "Meet the toolkit: Git and GitHub",
    "section": "Environments window",
    "text": "Environments window"
  },
  {
    "objectID": "slides/3-4-meet-the-toolkit-git-github/3-4-meet-the-toolkit-git-github.html#git-and-github-tips",
    "href": "slides/3-4-meet-the-toolkit-git-github/3-4-meet-the-toolkit-git-github.html#git-and-github-tips",
    "title": "Meet the toolkit: Git and GitHub",
    "section": "Git and GitHub tips",
    "text": "Git and GitHub tips\n\n\nThere are many many git commands … but very few people know them all. 99% of the time you will use git to push, commit, and pull\nIf you are looking for additional resources for working with git and R, continue reading: happygitwithr.com."
  },
  {
    "objectID": "slides/1-2-2-meet-the-toolkit-quarto/1-2-2-meet-the-toolkit-quarto.html#by-the-end-of-the-course-you-will-be-able-to",
    "href": "slides/1-2-2-meet-the-toolkit-quarto/1-2-2-meet-the-toolkit-quarto.html#by-the-end-of-the-course-you-will-be-able-to",
    "title": "Meet the toolkit: Quarto",
    "section": "By the end of the course, you will be able to…",
    "text": "By the end of the course, you will be able to…\n\ngain insights from data\ngain insights from data, using modern programming tools and techniques\ngain insights from data, using modern programming tools and techniques, reproducibly with literate programming\ngain insights from data, using modern programming tools and techniques, reproducibly with literate programming and version control"
  },
  {
    "objectID": "slides/1-2-2-meet-the-toolkit-quarto/1-2-2-meet-the-toolkit-quarto.html#reproducibility-checklist",
    "href": "slides/1-2-2-meet-the-toolkit-quarto/1-2-2-meet-the-toolkit-quarto.html#reproducibility-checklist",
    "title": "Meet the toolkit: Quarto",
    "section": "Reproducibility checklist",
    "text": "Reproducibility checklist\n\nWhat does it mean for a data analysis to be “reproducible”?\n\n\n\nShort-term goals:\n\nTables and figures must be reproducible from the code and data\nThe code should actually do what you think it does\nIn addition to what was done, it should be clear why it was done\n\n\n\nLong-term goals:\n\nThe code should be usable for other data\nThe code should be extendable to do other things"
  },
  {
    "objectID": "slides/1-2-2-meet-the-toolkit-quarto/1-2-2-meet-the-toolkit-quarto.html#toolkit-for-reproducibility",
    "href": "slides/1-2-2-meet-the-toolkit-quarto/1-2-2-meet-the-toolkit-quarto.html#toolkit-for-reproducibility",
    "title": "Meet the toolkit: Quarto",
    "section": "Toolkit for reproducibility",
    "text": "Toolkit for reproducibility\n\nScriptability → R\nLiterate programming (code, narrative, output in one place) → Quarto\nVersion control → Git / GitHub"
  },
  {
    "objectID": "slides/1-2-2-meet-the-toolkit-quarto/1-2-2-meet-the-toolkit-quarto.html#section",
    "href": "slides/1-2-2-meet-the-toolkit-quarto/1-2-2-meet-the-toolkit-quarto.html#section",
    "title": "Meet the toolkit: Quarto",
    "section": "",
    "text": "Open-source scientific and technical publishing system\nFully reproducible reports – each time you render the analysis is ran from the beginning\nCode goes in chunks narrative goes outside of chunks\nA visual editor for a familiar, Google Docs/MS Word-like editing experience"
  },
  {
    "objectID": "slides/1-2-2-meet-the-toolkit-quarto/1-2-2-meet-the-toolkit-quarto.html#section-1",
    "href": "slides/1-2-2-meet-the-toolkit-quarto/1-2-2-meet-the-toolkit-quarto.html#section-1",
    "title": "Meet the toolkit: Quarto",
    "section": "",
    "text": "Let’s take a tour of"
  },
  {
    "objectID": "slides/1-2-2-meet-the-toolkit-quarto/1-2-2-meet-the-toolkit-quarto.html#tour-recap-quarto",
    "href": "slides/1-2-2-meet-the-toolkit-quarto/1-2-2-meet-the-toolkit-quarto.html#tour-recap-quarto",
    "title": "Meet the toolkit: Quarto",
    "section": "Tour recap: Quarto",
    "text": "Tour recap: Quarto"
  },
  {
    "objectID": "slides/1-2-2-meet-the-toolkit-quarto/1-2-2-meet-the-toolkit-quarto.html#environments",
    "href": "slides/1-2-2-meet-the-toolkit-quarto/1-2-2-meet-the-toolkit-quarto.html#environments",
    "title": "Meet the toolkit: Quarto",
    "section": "Environments",
    "text": "Environments\n\n\n\n\n\n\nImportant\n\n\nThe environment of your Quarto document is separate from the Console!\n\n\n\nRemember this, and expect it to bite you a few times as you’re learning to work with Quarto!"
  },
  {
    "objectID": "slides/1-2-2-meet-the-toolkit-quarto/1-2-2-meet-the-toolkit-quarto.html#how-will-we-use-quarto",
    "href": "slides/1-2-2-meet-the-toolkit-quarto/1-2-2-meet-the-toolkit-quarto.html#how-will-we-use-quarto",
    "title": "Meet the toolkit: Quarto",
    "section": "How will we use Quarto?",
    "text": "How will we use Quarto?\n\n\nEvery code along is a Quarto document\nYou’ll always have a template Quarto document to start with\nThe amount of scaffolding in the template will decrease over the semester"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": " Data visualization and transformation",
    "section": "",
    "text": "Title\n\n\n\n\n\n\nWelcome\n\n\n\n\nMeet the toolkit: R and RStudio\n\n\n\n\nMeet the toolkit: Quarto\n\n\n\n\nVisualizing data\n\n\n\n\nBuilding a plotstep-by-step with ggplot2\n\n\n\n\nGrammar of graphics\n\n\n\n\nGrammar of data transformation\n\n\n\n\nVisualizing and summarizing categorical data\n\n\n\n\nVisualizing and summarizing numerical data\n\n\n\n\nVisualizing and summarizing relationships\n\n\n\n\nMeet the toolkit: Git and GitHub\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html#slides",
    "href": "index.html#slides",
    "title": " Data visualization and transformation",
    "section": "",
    "text": "Title\n\n\n\n\n\n\nWelcome\n\n\n\n\nMeet the toolkit: R and RStudio\n\n\n\n\nMeet the toolkit: Quarto\n\n\n\n\nVisualizing data\n\n\n\n\nBuilding a plotstep-by-step with ggplot2\n\n\n\n\nGrammar of graphics\n\n\n\n\nGrammar of data transformation\n\n\n\n\nVisualizing and summarizing categorical data\n\n\n\n\nVisualizing and summarizing numerical data\n\n\n\n\nVisualizing and summarizing relationships\n\n\n\n\nMeet the toolkit: Git and GitHub\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html#code-alongs",
    "href": "index.html#code-alongs",
    "title": " Data visualization and transformation",
    "section": "Code alongs",
    "text": "Code alongs\n\n\n\n\n\nTitle\n\n\n\n\n\n\nUN Votes  End of video\n\n\n\n\nUN Votes\n\n\n\n\nFirst look at Palmer Penguins  End of video\n\n\n\n\nFirst look at Palmer Penguins\n\n\n\n\nFlights and pipes  End of video\n\n\n\n\nFlights and pipes\n\n\n\n\nStarwars characters  End of video\n\n\n\n\nStarwars characters\n\n\n\n\nDiving deeper with Palmer Penguins  End of video\n\n\n\n\nDiving deeper with Palmer Penguins\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html#exercises",
    "href": "index.html#exercises",
    "title": " Data visualization and transformation",
    "section": "Exercises",
    "text": "Exercises\n\n\n\n\n\nTitle\n\n\n\n\n\n\nMeet the toolkit: Programming exercises\n\n\n\n\nBechdel + data visualization test for 3-21\n\n\n\n\nMario games + data visualization\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#number-of-variables-involved",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#number-of-variables-involved",
    "title": "Visualizing and summarizing categorical data",
    "section": "Number of variables involved",
    "text": "Number of variables involved\n\n\nUnivariate data analysis - distribution of single variable\nBivariate data analysis - relationship between two variables\nMultivariate data analysis - relationship between many variables at once, usually focusing on the relationship between two while conditioning for others"
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#types-of-variables",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#types-of-variables",
    "title": "Visualizing and summarizing categorical data",
    "section": "Types of variables",
    "text": "Types of variables\n\n\nNumerical variables can be classified as continuous or discrete based on whether or not the variable can take on an infinite number of values or only non-negative whole numbers, respectively.\nIf the variable is categorical, we can determine if it is ordinal based on whether or not the levels have a natural ordering."
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#data-lending-club",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#data-lending-club",
    "title": "Visualizing and summarizing categorical data",
    "section": "Data: Lending Club",
    "text": "Data: Lending Club\n\n\n\nThousands of loans made through the Lending Club, which is a platform that allows individuals to lend to other individuals\n\n\n\n\n\n\n\nNot all loans are created equal – ease of getting a loan depends on (apparent) ability to pay back the loan\nData includes loans made, these are not loan applications"
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#take-a-peek-at-data",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#take-a-peek-at-data",
    "title": "Visualizing and summarizing categorical data",
    "section": "Take a peek at data",
    "text": "Take a peek at data\n\nlibrary(tidyverse)\nlibrary(openintro)\nglimpse(loans_full_schema)\n\nRows: 10,000\nColumns: 55\n$ emp_title                        &lt;chr&gt; \"global config en…\n$ emp_length                       &lt;dbl&gt; 3, 10, 3, 1, 10, …\n$ state                            &lt;fct&gt; NJ, HI, WI, PA, C…\n$ homeownership                    &lt;fct&gt; MORTGAGE, RENT, R…\n$ annual_income                    &lt;dbl&gt; 90000, 40000, 400…\n$ verified_income                  &lt;fct&gt; Verified, Not Ver…\n$ debt_to_income                   &lt;dbl&gt; 18.01, 5.04, 21.1…\n$ annual_income_joint              &lt;dbl&gt; NA, NA, NA, NA, 5…\n$ verification_income_joint        &lt;fct&gt; , , , , Verified,…\n$ debt_to_income_joint             &lt;dbl&gt; NA, NA, NA, NA, 3…\n$ delinq_2y                        &lt;int&gt; 0, 0, 0, 0, 0, 1,…\n$ months_since_last_delinq         &lt;int&gt; 38, NA, 28, NA, N…\n$ earliest_credit_line             &lt;dbl&gt; 2001, 1996, 2006,…\n$ inquiries_last_12m               &lt;int&gt; 6, 1, 4, 0, 7, 6,…\n$ total_credit_lines               &lt;int&gt; 28, 30, 31, 4, 22…\n$ open_credit_lines                &lt;int&gt; 10, 14, 10, 4, 16…\n$ total_credit_limit               &lt;int&gt; 70795, 28800, 241…\n$ total_credit_utilized            &lt;int&gt; 38767, 4321, 1600…\n$ num_collections_last_12m         &lt;int&gt; 0, 0, 0, 0, 0, 0,…\n$ num_historical_failed_to_pay     &lt;int&gt; 0, 1, 0, 1, 0, 0,…\n$ months_since_90d_late            &lt;int&gt; 38, NA, 28, NA, N…\n$ current_accounts_delinq          &lt;int&gt; 0, 0, 0, 0, 0, 0,…\n$ total_collection_amount_ever     &lt;int&gt; 1250, 0, 432, 0, …\n$ current_installment_accounts     &lt;int&gt; 2, 0, 1, 1, 1, 0,…\n$ accounts_opened_24m              &lt;int&gt; 5, 11, 13, 1, 6, …\n$ months_since_last_credit_inquiry &lt;int&gt; 5, 8, 7, 15, 4, 5…\n$ num_satisfactory_accounts        &lt;int&gt; 10, 14, 10, 4, 16…\n$ num_accounts_120d_past_due       &lt;int&gt; 0, 0, 0, 0, 0, 0,…\n$ num_accounts_30d_past_due        &lt;int&gt; 0, 0, 0, 0, 0, 0,…\n$ num_active_debit_accounts        &lt;int&gt; 2, 3, 3, 2, 10, 1…\n$ total_debit_limit                &lt;int&gt; 11100, 16500, 430…\n$ num_total_cc_accounts            &lt;int&gt; 14, 24, 14, 3, 20…\n$ num_open_cc_accounts             &lt;int&gt; 8, 14, 8, 3, 15, …\n$ num_cc_carrying_balance          &lt;int&gt; 6, 4, 6, 2, 13, 5…\n$ num_mort_accounts                &lt;int&gt; 1, 0, 0, 0, 0, 3,…\n$ account_never_delinq_percent     &lt;dbl&gt; 92.9, 100.0, 93.5…\n$ tax_liens                        &lt;int&gt; 0, 0, 0, 1, 0, 0,…\n$ public_record_bankrupt           &lt;int&gt; 0, 1, 0, 0, 0, 0,…\n$ loan_purpose                     &lt;fct&gt; moving, debt_cons…\n$ application_type                 &lt;fct&gt; individual, indiv…\n$ loan_amount                      &lt;int&gt; 28000, 5000, 2000…\n$ term                             &lt;dbl&gt; 60, 36, 36, 36, 3…\n$ interest_rate                    &lt;dbl&gt; 14.07, 12.61, 17.…\n$ installment                      &lt;dbl&gt; 652.53, 167.54, 7…\n$ grade                            &lt;fct&gt; C, C, D, A, C, A,…\n$ sub_grade                        &lt;fct&gt; C3, C1, D1, A3, C…\n$ issue_month                      &lt;fct&gt; Mar-2018, Feb-201…\n$ loan_status                      &lt;fct&gt; Current, Current,…\n$ initial_listing_status           &lt;fct&gt; whole, whole, fra…\n$ disbursement_method              &lt;fct&gt; Cash, Cash, Cash,…\n$ balance                          &lt;dbl&gt; 27015.86, 4651.37…\n$ paid_total                       &lt;dbl&gt; 1999.330, 499.120…\n$ paid_principal                   &lt;dbl&gt; 984.14, 348.63, 1…\n$ paid_interest                    &lt;dbl&gt; 1015.19, 150.49, …\n$ paid_late_fees                   &lt;dbl&gt; 0, 0, 0, 0, 0, 0,…"
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#selected-variables",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#selected-variables",
    "title": "Visualizing and summarizing categorical data",
    "section": "Selected variables",
    "text": "Selected variables\n\nloans &lt;- loans_full_schema |&gt;\n  select(\n    loan_amount, interest_rate, term, grade, \n    state, annual_income, homeownership, debt_to_income\n  )\nglimpse(loans)\n\nRows: 10,000\nColumns: 8\n$ loan_amount    &lt;int&gt; 28000, 5000, 2000, 21600, 23000, 50…\n$ interest_rate  &lt;dbl&gt; 14.07, 12.61, 17.09, 6.72, 14.07, 6…\n$ term           &lt;dbl&gt; 60, 36, 36, 36, 36, 36, 60, 60, 36,…\n$ grade          &lt;fct&gt; C, C, D, A, C, A, C, B, C, A, C, B,…\n$ state          &lt;fct&gt; NJ, HI, WI, PA, CA, KY, MI, AZ, NV,…\n$ annual_income  &lt;dbl&gt; 90000, 40000, 40000, 30000, 35000, …\n$ homeownership  &lt;fct&gt; MORTGAGE, RENT, RENT, RENT, RENT, O…\n$ debt_to_income &lt;dbl&gt; 18.01, 5.04, 21.15, 10.16, 57.96, 6…"
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#selected-variables-1",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#selected-variables-1",
    "title": "Visualizing and summarizing categorical data",
    "section": "Selected variables",
    "text": "Selected variables\n\n\n\n\n\n\n\nvariable\ndescription\n\n\n\n\nloan_amount\nAmount of the loan received, in US dollars\n\n\ninterest_rate\nInterest rate on the loan, in an annual percentage\n\n\nterm\nThe length of the loan, which is always set as a whole number of months\n\n\ngrade\nLoan grade, which takes a values A through G and represents the quality of the loan and its likelihood of being repaid\n\n\nstate\nUS state where the borrower resides\n\n\nannual_income\nBorrower’s annual income, including any second income, in US dollars\n\n\nhomeownership\nIndicates whether the person owns, owns but has a mortgage, or rents\n\n\ndebt_to_income\nDebt-to-income ratio"
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#variable-types",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#variable-types",
    "title": "Visualizing and summarizing categorical data",
    "section": "Variable types",
    "text": "Variable types\n\n\n\nvariable\ntype\n\n\n\n\nloan_amount\nnumerical, continuous\n\n\ninterest_rate\nnumerical, continuous\n\n\nterm\nnumerical, discrete\n\n\ngrade\ncategorical, ordinal\n\n\nstate\ncategorical, not ordinal\n\n\nannual_income\nnumerical, continuous\n\n\nhomeownership\ncategorical, not ordinal\n\n\ndebt_to_income\nnumerical, continuous"
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#bar-plot",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#bar-plot",
    "title": "Visualizing and summarizing categorical data",
    "section": "Bar plot",
    "text": "Bar plot\n\nggplot(loans, aes(x = homeownership)) +\n  geom_bar()"
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#segmented-bar-plot",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#segmented-bar-plot",
    "title": "Visualizing and summarizing categorical data",
    "section": "Segmented bar plot",
    "text": "Segmented bar plot\n\nggplot(loans, aes(x = homeownership, fill = grade)) +\n  geom_bar()"
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#segmented-bar-plot-1",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#segmented-bar-plot-1",
    "title": "Visualizing and summarizing categorical data",
    "section": "Segmented bar plot",
    "text": "Segmented bar plot\n\nggplot(loans, aes(x = homeownership, fill = term)) +\n  geom_bar()\n\n\n\nWarning: The following aesthetics were dropped during statistical\ntransformation: fill\nℹ This can happen when ggplot fails to infer the correct\n  grouping structure in the data.\nℹ Did you forget to specify a `group` aesthetic or to\n  convert a numerical variable into a factor?"
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#numerical-to-categorical",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#numerical-to-categorical",
    "title": "Visualizing and summarizing categorical data",
    "section": "Numerical to categorical",
    "text": "Numerical to categorical\n\nloans |&gt;\n  mutate(term = as.factor(term)) |&gt;\n  ggplot(aes(x = homeownership, fill = term)) +\n  geom_bar()"
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#segmented-bar-plot---proportions",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#segmented-bar-plot---proportions",
    "title": "Visualizing and summarizing categorical data",
    "section": "Segmented bar plot - proportions",
    "text": "Segmented bar plot - proportions\n\nloans |&gt;\n  mutate(term = as.factor(term)) |&gt;\n  ggplot(aes(x = homeownership, fill = term)) +\n  geom_bar(position = \"fill\")"
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#frequencies-vs.-proportions",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#frequencies-vs.-proportions",
    "title": "Visualizing and summarizing categorical data",
    "section": "Frequencies vs. proportions",
    "text": "Frequencies vs. proportions\n\nWhich bar plot is a more useful representation for visualizing the relationship between homeownership and term?"
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#customizing-bar-plots",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#customizing-bar-plots",
    "title": "Visualizing and summarizing categorical data",
    "section": "Customizing bar plots",
    "text": "Customizing bar plots\n\nloans |&gt;\n  mutate(term = as.factor(term)) |&gt;\n  ggplot(aes(y = homeownership, fill = term)) +\n  geom_bar(position = \"fill\") +\n  labs(\n    x = \"Proportion\", y = \"Homeownership\", fill = \"Term\",\n    title = \"Terms of Lending Club loans\",\n    subtitle = \"and homeownership of borrowers\"\n  ) +\n  scale_fill_manual(values = c(\"lightblue\", \"darkgreen\"))"
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#frequency-table",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#frequency-table",
    "title": "Visualizing and summarizing categorical data",
    "section": "Frequency table",
    "text": "Frequency table\n\nloans |&gt;\n  count(homeownership)\n\n# A tibble: 3 × 2\n  homeownership     n\n  &lt;fct&gt;         &lt;int&gt;\n1 MORTGAGE       4789\n2 OWN            1353\n3 RENT           3858"
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#relative-frequency-table",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#relative-frequency-table",
    "title": "Visualizing and summarizing categorical data",
    "section": "Relative frequency table",
    "text": "Relative frequency table\n\nloans |&gt;\n  count(homeownership) |&gt;\n  mutate(proportion = n / sum(n))\n\n# A tibble: 3 × 3\n  homeownership     n proportion\n  &lt;fct&gt;         &lt;int&gt;      &lt;dbl&gt;\n1 MORTGAGE       4789      0.479\n2 OWN            1353      0.135\n3 RENT           3858      0.386"
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#frequency-table-with-multiple-variables",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#frequency-table-with-multiple-variables",
    "title": "Visualizing and summarizing categorical data",
    "section": "Frequency table with multiple variables",
    "text": "Frequency table with multiple variables\n\nloans |&gt;\n  count(homeownership, term)\n\n# A tibble: 6 × 3\n  homeownership  term     n\n  &lt;fct&gt;         &lt;dbl&gt; &lt;int&gt;\n1 MORTGAGE         36  3071\n2 MORTGAGE         60  1718\n3 OWN              36   998\n4 OWN              60   355\n5 RENT             36  2901\n6 RENT             60   957"
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#relative-frequency-table-with-multiple-variables",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#relative-frequency-table-with-multiple-variables",
    "title": "Visualizing and summarizing categorical data",
    "section": "Relative frequency table with multiple variables",
    "text": "Relative frequency table with multiple variables\n\nloans |&gt;\n  count(homeownership, term) |&gt;\n  group_by(homeownership) |&gt;\n  mutate(proportion = n / sum(n))\n\n# A tibble: 6 × 4\n# Groups:   homeownership [3]\n  homeownership  term     n proportion\n  &lt;fct&gt;         &lt;dbl&gt; &lt;int&gt;      &lt;dbl&gt;\n1 MORTGAGE         36  3071      0.641\n2 MORTGAGE         60  1718      0.359\n3 OWN              36   998      0.738\n4 OWN              60   355      0.262\n5 RENT             36  2901      0.752\n6 RENT             60   957      0.248"
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#ggplot2-in-tidyverse",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#ggplot2-in-tidyverse",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "ggplot2 \\(\\in\\) tidyverse",
    "text": "ggplot2 \\(\\in\\) tidyverse\n\n\n\n\nggplot2 is tidyverse’s data visualization package\n\nlibrary(tidyverse)\n\ngg in ggplot2 stands for Grammar of Graphics, inspired by the book Grammar of Graphics by Leland Wilkinson\n\n\n\n\n\n\n\n\n\n\n\n\nPackage website: ggplot2.tidyverse.org\nStructure of the code for plots can be summarized as\n\nggplot(\n  data = [dataset], \n  mapping = aes(x = [x-variable], y = [y-variable])\n  ) +\n  geom_xxx() +\n  other options"
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#mass-vs.-height",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#mass-vs.-height",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Mass vs. height",
    "text": "Mass vs. height\n\nggplot(starwars, aes(x = height, y = mass)) +\n  geom_point() +\n  labs(\n    title = \"Mass vs. height of Starwars characters\",\n    x = \"Height (cm)\", \n    y = \"Weight (kg)\"\n  )\n\nWarning: Removed 28 rows containing missing values or values outside\nthe scale range (`geom_point()`)."
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#data-palmer-penguins",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#data-palmer-penguins",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Data: Palmer Penguins",
    "text": "Data: Palmer Penguins\nMeasurements for penguin species, island in Palmer Archipelago, size (flipper length, body mass, bill dimensions), and sex."
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#data",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#data",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Data",
    "text": "Data\n\nlibrary(palmerpenguins)\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, …\n$ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen,…\n$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3…\n$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6…\n$ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181…\n$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650…\n$ sex               &lt;fct&gt; male, female, female, NA, female…\n$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 20…"
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#plot",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#plot",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Plot",
    "text": "Plot"
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#code",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#code",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Code",
    "text": "Code\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_depth_mm, y = bill_length_mm,\n    color = species\n  )\n) +\n  geom_point() +\n  labs(\n    title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", \n    y = \"Bill length (mm)\",\n    color = \"Species\",\n    caption = \"Source: Palmer Station LTER / palmerpenguins package\"\n  )\n\nWarning: Removed 2 rows containing missing values or values outside\nthe scale range (`geom_point()`)."
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-1",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-1",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Step 1",
    "text": "Step 1\nStart with the penguins data frame\n\n\nggplot(\n  data = penguins\n  )"
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-2",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-2",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Step 2",
    "text": "Step 2\nStart with the penguins data frame, map bill depth to the x-axis\n\n\nggplot(\n  data = penguins,\n  mapping = aes(x = bill_depth_mm)\n  )"
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-3",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-3",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Step 3",
    "text": "Step 3\nStart with the penguins data frame, map bill depth to the x-axis and map bill length to the y-axis.\n\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_depth_mm,\n    y = bill_length_mm\n    )\n  )"
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-4",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-4",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Step 4",
    "text": "Step 4\nStart with the penguins data frame, map bill depth to the x-axis and map bill length to the y-axis. Represent each observation with a point\n\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_depth_mm,\n    y = bill_length_mm\n    )\n  ) +\n  geom_point()"
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-5",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-5",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Step 5",
    "text": "Step 5\nStart with the penguins data frame, map bill depth to the x-axis and map bill length to the y-axis. Represent each observation with a point and map species to the color of each point.\n\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_depth_mm,\n    y = bill_length_mm,\n    color = species\n    )\n  ) +\n  geom_point()"
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-6",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-6",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Step 6",
    "text": "Step 6\nStart with the penguins data frame, map bill depth to the x-axis and map bill length to the y-axis. Represent each observation with a point and map species to the color of each point. Title the plot “Bill depth and length”\n\n\nggplot(\n  data = penguins,\n  mapping = aes(x = bill_depth_mm, y = bill_length_mm, color = species)\n  ) +\n  geom_point() +\n  labs(\n    title = \"Bill depth and length\"\n  )"
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-7",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-7",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Step 7",
    "text": "Step 7\nStart with the penguins data frame, map bill depth to the x-axis and map bill length to the y-axis. Represent each observation with a point and map species to the color of each point. Title the plot “Bill depth and length”, add the subtitle “Dimensions for Adelie, Chinstrap, and Gentoo Penguins”\n\n\nggplot(\n  data = penguins,\n  mapping = aes(x = bill_depth_mm, y = bill_length_mm, color = species)\n  ) +\n  geom_point() +\n  labs(\n    title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\"\n  )"
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-8",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-8",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Step 8",
    "text": "Step 8\nStart with the penguins data frame, map bill depth to the x-axis and map bill length to the y-axis. Represent each observation with a point and map species to the color of each point. Title the plot “Bill depth and length”, add the subtitle “Dimensions for Adelie, Chinstrap, and Gentoo Penguins”, label the x and y axes as “Bill depth (mm)” and “Bill length (mm)”, respectively\n\n\nggplot(\n  data = penguins,\n  mapping = aes(x = bill_depth_mm, y = bill_length_mm, color = species)\n  ) +\n  geom_point() +\n  labs(\n    title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", \n    y = \"Bill length (mm)\"\n  )"
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-9",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-9",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Step 9",
    "text": "Step 9\nStart with the penguins data frame, map bill depth to the x-axis and map bill length to the y-axis. Represent each observation with a point and map species to the color of each point. Title the plot “Bill depth and length”, add the subtitle “Dimensions for Adelie, Chinstrap, and Gentoo Penguins”, label the x and y axes as “Bill depth (mm)” and “Bill length (mm)”, respectively, label the legend “Species”\n\n\nggplot(\n  data = penguins,\n  mapping = aes(x = bill_depth_mm, y = bill_length_mm, color = species)\n  ) +\n  geom_point() +\n  labs(\n    title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", y = \"Bill length (mm)\",\n    color = \"Species\"\n  )"
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-10",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-10",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Step 10",
    "text": "Step 10\nStart with the penguins data frame, map bill depth to the x-axis and map bill length to the y-axis. Represent each observation with a point and map species to the color of each point. Title the plot “Bill depth and length”, add the subtitle “Dimensions for Adelie, Chinstrap, and Gentoo Penguins”, label the x and y axes as “Bill depth (mm)” and “Bill length (mm)”, respectively, label the legend “Species”, and add a caption for the data source.\n\n\nggplot(\n  data = penguins,\n  mapping = aes(x = bill_depth_mm, y = bill_length_mm, color = species)\n  ) +\n  geom_point() +\n  labs(\n    title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", y = \"Bill length (mm)\",\n    color = \"Species\",\n    caption = \"Source: Palmer Station LTER / palmerpenguins package\"\n  )"
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-11",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-11",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Step 11",
    "text": "Step 11\nStart with the penguins data frame, map bill depth to the x-axis and map bill length to the y-axis. Represent each observation with a point and map species to the color of each point. Title the plot “Bill depth and length”, add the subtitle “Dimensions for Adelie, Chinstrap, and Gentoo Penguins”, label the x and y axes as “Bill depth (mm)” and “Bill length (mm)”, respectively, label the legend “Species”, and add a caption for the data source. Finally, use a discrete color scale that is designed to be perceived by viewers with common forms of color blindness.\n\n\nggplot(\n  data = penguins,\n  mapping = aes(x = bill_depth_mm, y = bill_length_mm, color = species)\n  ) +\n  geom_point() +\n  labs(\n    title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", y = \"Bill length (mm)\",\n    color = \"Species\",\n    caption = \"Source: Palmer Station LTER / palmerpenguins package\"\n  ) +\n  scale_color_viridis_d()"
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#plot-1",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#plot-1",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Plot",
    "text": "Plot\n\n\nWarning: Removed 2 rows containing missing values or values outside\nthe scale range (`geom_point()`)."
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#code-1",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#code-1",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Code",
    "text": "Code\n\nggplot(\n  data = penguins,\n  mapping = aes(x = bill_depth_mm, y = bill_length_mm, color = species)\n  ) +\n  geom_point() +\n  labs(\n    title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", y = \"Bill length (mm)\",\n    color = \"Species\",\n    caption = \"Source: Palmer Station LTER / palmerpenguins package\"\n  ) +\n  scale_color_viridis_d()"
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#narrative",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#narrative",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Narrative",
    "text": "Narrative\nStart with the penguins data frame, map bill depth to the x-axis and map bill length to the y-axis.\nRepresent each observation with a point and map species to the color of each point.\nTitle the plot “Bill depth and length”, add the subtitle “Dimensions for Adelie, Chinstrap, and Gentoo Penguins”, label the x and y axes as “Bill depth (mm)” and “Bill length (mm)”, respectively, label the legend “Species”, and add a caption for the data source.\nFinally, use a discrete color scale that is designed to be perceived by viewers with common forms of color blindness."
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#argument-names",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#argument-names",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Argument names",
    "text": "Argument names\nYou can omit the names of first two arguments when building plots with ggplot().\n\n\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_depth_mm,\n    y = bill_length_mm\n    )\n  ) +\n  geom_point()\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = bill_depth_mm,\n    y = bill_length_mm\n    )\n  ) +\n  geom_point()"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#nyc-flights",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#nyc-flights",
    "title": "Grammar of data transformation",
    "section": "NYC Flights",
    "text": "NYC Flights\n\nTo demonstrate data transformation we will use flights, a tibble in the nycflights13 R package.\nThe data set includes characteristics of all flights departing from New York City (JFK, LGA, EWR) in 2013.\n\n\nlibrary(tidyverse)\nlibrary(nycflights13)"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#flights-dimensions",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#flights-dimensions",
    "title": "Grammar of data transformation",
    "section": "flights – dimensions",
    "text": "flights – dimensions\n\nNumber of rows:\n\n\nnrow(flights)\n\n[1] 336776\n\n\n\n\nNumber of columns:\n\n\nncol(flights)\n\n[1] 19"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#flights-first-look-with-glimpse",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#flights-first-look-with-glimpse",
    "title": "Grammar of data transformation",
    "section": "flights – first look with glimpse()",
    "text": "flights – first look with glimpse()\n\nglimpse(flights)\n\nRows: 336,776\nColumns: 19\n$ year           &lt;int&gt; 2013, 2013, 2013, 2013, 2013, 2013,…\n$ month          &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ day            &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ dep_time       &lt;int&gt; 517, 533, 542, 544, 554, 554, 555, …\n$ sched_dep_time &lt;int&gt; 515, 529, 540, 545, 600, 558, 600, …\n$ dep_delay      &lt;dbl&gt; 2, 4, 2, -1, -6, -4, -5, -3, -3, -2…\n$ arr_time       &lt;int&gt; 830, 850, 923, 1004, 812, 740, 913,…\n$ sched_arr_time &lt;int&gt; 819, 830, 850, 1022, 837, 728, 854,…\n$ arr_delay      &lt;dbl&gt; 11, 20, 33, -18, -25, 12, 19, -14, …\n$ carrier        &lt;chr&gt; \"UA\", \"UA\", \"AA\", \"B6\", \"DL\", \"UA\",…\n$ flight         &lt;int&gt; 1545, 1714, 1141, 725, 461, 1696, 5…\n$ tailnum        &lt;chr&gt; \"N14228\", \"N24211\", \"N619AA\", \"N804…\n$ origin         &lt;chr&gt; \"EWR\", \"LGA\", \"JFK\", \"JFK\", \"LGA\", …\n$ dest           &lt;chr&gt; \"IAH\", \"IAH\", \"MIA\", \"BQN\", \"ATL\", …\n$ air_time       &lt;dbl&gt; 227, 227, 160, 183, 116, 150, 158, …\n$ distance       &lt;dbl&gt; 1400, 1416, 1089, 1576, 762, 719, 1…\n$ hour           &lt;dbl&gt; 5, 5, 5, 5, 6, 5, 6, 6, 6, 6, 6, 6,…\n$ minute         &lt;dbl&gt; 15, 29, 40, 45, 0, 58, 0, 0, 0, 0, …\n$ time_hour      &lt;dttm&gt; 2013-01-01 05:00:00, 2013-01-01 05…"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#flights-first-look-with-names",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#flights-first-look-with-names",
    "title": "Grammar of data transformation",
    "section": "flights – first look with names()",
    "text": "flights – first look with names()\n\nnames(flights)\n\n [1] \"year\"           \"month\"          \"day\"           \n [4] \"dep_time\"       \"sched_dep_time\" \"dep_delay\"     \n [7] \"arr_time\"       \"sched_arr_time\" \"arr_delay\"     \n[10] \"carrier\"        \"flight\"         \"tailnum\"       \n[13] \"origin\"         \"dest\"           \"air_time\"      \n[16] \"distance\"       \"hour\"           \"minute\"        \n[19] \"time_hour\""
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#flights-first-look-with-head",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#flights-first-look-with-head",
    "title": "Grammar of data transformation",
    "section": "flights – first look with head()",
    "text": "flights – first look with head()\n\nhead(flights)\n\n# A tibble: 6 × 19\n   year month   day dep_time sched_dep_time dep_delay\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n1  2013     1     1      517            515         2\n2  2013     1     1      533            529         4\n3  2013     1     1      542            540         2\n4  2013     1     1      544            545        -1\n5  2013     1     1      554            600        -6\n6  2013     1     1      554            558        -4\n# ℹ 13 more variables: arr_time &lt;int&gt;,\n#   sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;,\n#   air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;,\n#   minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#tibble-vs.-data-frame",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#tibble-vs.-data-frame",
    "title": "Grammar of data transformation",
    "section": "tibble vs. data frame",
    "text": "tibble vs. data frame\n\n\ntibble: an opinionated version of the R data frame\nAll tibbles are data frames, but not all data frames are tibbles!\nTwo main differences between a tibble and a data frame:\n\nPrinting\nStricter subsetting"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#printing---tibbles",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#printing---tibbles",
    "title": "Grammar of data transformation",
    "section": "Printing - tibbles",
    "text": "Printing - tibbles\nDisplay first 10 rows and all of the columns that fit on the screen will display, along with the type of each column.\n\nflights\n\n# A tibble: 336,776 × 19\n    year month   day dep_time sched_dep_time dep_delay\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n 1  2013     1     1      517            515         2\n 2  2013     1     1      533            529         4\n 3  2013     1     1      542            540         2\n 4  2013     1     1      544            545        -1\n 5  2013     1     1      554            600        -6\n 6  2013     1     1      554            558        -4\n 7  2013     1     1      555            600        -5\n 8  2013     1     1      557            600        -3\n 9  2013     1     1      557            600        -3\n10  2013     1     1      558            600        -2\n# ℹ 336,766 more rows\n# ℹ 13 more variables: arr_time &lt;int&gt;,\n#   sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;,\n#   air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;,\n#   minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#printing---data.frames",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#printing---data.frames",
    "title": "Grammar of data transformation",
    "section": "Printing - data.frames",
    "text": "Printing - data.frames\n(Attempt to) display all of the data, or die (crash) trying (if the dataset is too large)!\n\ncars\n\n   speed dist\n1      4    2\n2      4   10\n3      7    4\n4      7   22\n5      8   16\n6      9   10\n7     10   18\n8     10   26\n9     10   34\n10    11   17\n11    11   28\n12    12   14\n13    12   20\n14    12   24\n15    12   28\n16    13   26\n17    13   34\n18    13   34\n19    13   46\n20    14   26\n21    14   36\n22    14   60\n23    14   80\n24    15   20\n25    15   26\n26    15   54\n27    16   32\n28    16   40\n29    17   32\n30    17   40\n31    17   50\n32    18   42\n33    18   56\n34    18   76\n35    18   84\n36    19   36\n37    19   46\n38    19   68\n39    20   32\n40    20   48\n41    20   52\n42    20   56\n43    20   64\n44    22   66\n45    23   54\n46    24   70\n47    24   92\n48    24   93\n49    24  120\n50    25   85"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#stricter-subsetting-tibbles",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#stricter-subsetting-tibbles",
    "title": "Grammar of data transformation",
    "section": "Stricter subsetting – tibbles",
    "text": "Stricter subsetting – tibbles\nWarning + NULL if variable not found.\n\nflights$apple\n\nWarning: Unknown or uninitialised column: `apple`.\n\n\nNULL"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#stricter-subsetting-data.frames",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#stricter-subsetting-data.frames",
    "title": "Grammar of data transformation",
    "section": "Stricter subsetting – data.frames",
    "text": "Stricter subsetting – data.frames\nOnly NULL if variable not found.\n\ncars$apple\n\nNULL"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#dplyr-in-tidyverse",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#dplyr-in-tidyverse",
    "title": "Grammar of data transformation",
    "section": "dplyr \\(\\in\\) tidyverse",
    "text": "dplyr \\(\\in\\) tidyverse\n\n\n\n\ndplyr is tidyverse’s primary package for data transformation\nPackage website: dplyr.tidyverse.org"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#row-operations",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#row-operations",
    "title": "Grammar of data transformation",
    "section": "Row operations",
    "text": "Row operations\n\n\nslice(): chooses rows based on location\nfilter(): chooses rows based on column values\narrange(): changes the order of the rows\nsample_n(): take a random subset of the rows"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#slice",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#slice",
    "title": "Grammar of data transformation",
    "section": "slice()",
    "text": "slice()\nDisplay the first five rows of flights:\n\n1flights |&gt;\n2  slice(1:5)\n\n\n1\n\nTake the flights data frame, and then,\n\n2\n\nSlice its first five rows\n\n\n\n\n# A tibble: 5 × 19\n   year month   day dep_time sched_dep_time dep_delay\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n1  2013     1     1      517            515         2\n2  2013     1     1      533            529         4\n3  2013     1     1      542            540         2\n4  2013     1     1      544            545        -1\n5  2013     1     1      554            600        -6\n# ℹ 13 more variables: arr_time &lt;int&gt;,\n#   sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;,\n#   air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;,\n#   minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#filter",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#filter",
    "title": "Grammar of data transformation",
    "section": "filter()",
    "text": "filter()\nFilter for flights to RDU in flights:\n\n1flights |&gt;\n2  filter(dest == \"RDU\")\n\n\n1\n\nTake the flights data frame, and then,\n\n2\n\nFilter for rows where dest is equal to RDU\n\n\n\n\n# A tibble: 8,163 × 19\n    year month   day dep_time sched_dep_time dep_delay\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n 1  2013     1     1      800            810       -10\n 2  2013     1     1      832            840        -8\n 3  2013     1     1      851            851         0\n 4  2013     1     1      917            920        -3\n 5  2013     1     1     1024           1030        -6\n 6  2013     1     1     1127           1129        -2\n 7  2013     1     1     1157           1205        -8\n 8  2013     1     1     1240           1235         5\n 9  2013     1     1     1317           1325        -8\n10  2013     1     1     1449           1450        -1\n# ℹ 8,153 more rows\n# ℹ 13 more variables: arr_time &lt;int&gt;,\n#   sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;,\n#   air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;,\n#   minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#the-pipe-operator",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#the-pipe-operator",
    "title": "Grammar of data transformation",
    "section": "The pipe operator",
    "text": "The pipe operator\n\n\nThe pipe, |&gt;, is an operator (a tool) for passing information from one process to another.\nUse |&gt; mainly in data pipelines to pass the output of the previous line of code as the first input of the next line of code.\nWhen reading code “in English”, say “and then” whenever you see a pipe."
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#delayed-flights-to-rdu",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#delayed-flights-to-rdu",
    "title": "Grammar of data transformation",
    "section": "Delayed flights to RDU",
    "text": "Delayed flights to RDU\n\nWhich airline is the most delayed, on average, arriving in RDU from a New York City airport?\n\n\nGoal:\n\n\n# A tibble: 5 × 2\n  carrier mean_arr_delay\n  &lt;chr&gt;            &lt;dbl&gt;\n1 UA               56   \n2 B6               13.3 \n3 EV               12.2 \n4 9E                9.67\n5 MQ                8.82"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#the-pipe-in-action",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#the-pipe-in-action",
    "title": "Grammar of data transformation",
    "section": "The pipe, in action",
    "text": "The pipe, in action\n\n1flights\n\n\n1\n\nTake the flights data frame\n\n\n\n\n# A tibble: 336,776 × 19\n    year month   day dep_time sched_dep_time dep_delay\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n 1  2013     1     1      517            515         2\n 2  2013     1     1      533            529         4\n 3  2013     1     1      542            540         2\n 4  2013     1     1      544            545        -1\n 5  2013     1     1      554            600        -6\n 6  2013     1     1      554            558        -4\n 7  2013     1     1      555            600        -5\n 8  2013     1     1      557            600        -3\n 9  2013     1     1      557            600        -3\n10  2013     1     1      558            600        -2\n# ℹ 336,766 more rows\n# ℹ 13 more variables: arr_time &lt;int&gt;,\n#   sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;,\n#   air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;,\n#   minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#the-pipe-in-action-1",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#the-pipe-in-action-1",
    "title": "Grammar of data transformation",
    "section": "The pipe, in action",
    "text": "The pipe, in action\n\n1flights |&gt;\n2  filter(dest == \"RDU\")\n\n\n1\n\nTake the flights data frame,\n\n2\n\nand then filter for flights going to RDU\n\n\n\n\n# A tibble: 8,163 × 19\n    year month   day dep_time sched_dep_time dep_delay\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n 1  2013     1     1      800            810       -10\n 2  2013     1     1      832            840        -8\n 3  2013     1     1      851            851         0\n 4  2013     1     1      917            920        -3\n 5  2013     1     1     1024           1030        -6\n 6  2013     1     1     1127           1129        -2\n 7  2013     1     1     1157           1205        -8\n 8  2013     1     1     1240           1235         5\n 9  2013     1     1     1317           1325        -8\n10  2013     1     1     1449           1450        -1\n# ℹ 8,153 more rows\n# ℹ 13 more variables: arr_time &lt;int&gt;,\n#   sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;,\n#   air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;,\n#   minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#the-pipe-in-action-2",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#the-pipe-in-action-2",
    "title": "Grammar of data transformation",
    "section": "The pipe, in action",
    "text": "The pipe, in action\n\n1flights |&gt;\n2  filter(dest == \"RDU\") |&gt;\n3  group_by(carrier)\n\n\n1\n\nTake the flights data frame,\n\n2\n\nand then filter for flights going to RDU,\n\n3\n\nand then group by carrier\n\n\n\n\n# A tibble: 8,163 × 19\n# Groups:   carrier [5]\n    year month   day dep_time sched_dep_time dep_delay\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n 1  2013     1     1      800            810       -10\n 2  2013     1     1      832            840        -8\n 3  2013     1     1      851            851         0\n 4  2013     1     1      917            920        -3\n 5  2013     1     1     1024           1030        -6\n 6  2013     1     1     1127           1129        -2\n 7  2013     1     1     1157           1205        -8\n 8  2013     1     1     1240           1235         5\n 9  2013     1     1     1317           1325        -8\n10  2013     1     1     1449           1450        -1\n# ℹ 8,153 more rows\n# ℹ 13 more variables: arr_time &lt;int&gt;,\n#   sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;,\n#   air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;,\n#   minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#the-pipe-in-action-3",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#the-pipe-in-action-3",
    "title": "Grammar of data transformation",
    "section": "The pipe, in action",
    "text": "The pipe, in action\n\n1flights |&gt;\n2  filter(dest == \"RDU\") |&gt;\n3  group_by(carrier) |&gt;\n4  summarize(mean_arr_delay = mean(arr_delay, na.rm = TRUE))\n\n\n1\n\nTake the flights data frame,\n\n2\n\nand then filter for flights going to RDU,\n\n3\n\nand then group by carrier,\n\n4\n\nand then calculate the mean arrival delay for each carrier\n\n\n\n\n# A tibble: 5 × 2\n  carrier mean_arr_delay\n  &lt;chr&gt;            &lt;dbl&gt;\n1 9E                9.67\n2 B6               13.3 \n3 EV               12.2 \n4 MQ                8.82\n5 UA               56"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#the-pipe-in-action-4",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#the-pipe-in-action-4",
    "title": "Grammar of data transformation",
    "section": "The pipe, in action",
    "text": "The pipe, in action\n\n1flights |&gt;\n2  filter(dest == \"RDU\") |&gt;\n3  group_by(carrier) |&gt;\n4  summarize(mean_arr_delay = mean(arr_delay, na.rm = TRUE)) |&gt;\n5  arrange(desc(mean_arr_delay))\n\n\n1\n\nTake the flights data frame,\n\n2\n\nand then filter for flights going to RDU,\n\n3\n\nand then group by carrier,\n\n4\n\nand then calculate the mean arrival delay for each carrier,\n\n5\n\nand then arrange in descending order of mean arrival delay.\n\n\n\n\n# A tibble: 5 × 2\n  carrier mean_arr_delay\n  &lt;chr&gt;            &lt;dbl&gt;\n1 UA               56   \n2 B6               13.3 \n3 EV               12.2 \n4 9E                9.67\n5 MQ                8.82"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#column-operations",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#column-operations",
    "title": "Grammar of data transformation",
    "section": "Column operations",
    "text": "Column operations\n\n\nselect(): changes whether or not a column is included\nrename(): changes the names of columns\nmutate(): changes the values of columns or creates new columns"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#groups-of-rows",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#groups-of-rows",
    "title": "Grammar of data transformation",
    "section": "Groups of rows",
    "text": "Groups of rows\n\n\ngroup_by(): perform calculations separately for each value of a variable\nsummarize(): collapses a group into a single row\ncount(): count unique values of one or more variables"
  },
  {
    "objectID": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#packages",
    "href": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#packages",
    "title": "Visualizing and summarizing numerical data",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse) # for data wrangling and visualization\nlibrary(openintro) # for data\nlibrary(scales)    # for pretty axis labels"
  },
  {
    "objectID": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#data-lending-club",
    "href": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#data-lending-club",
    "title": "Visualizing and summarizing numerical data",
    "section": "Data: Lending Club",
    "text": "Data: Lending Club\n\nloans &lt;- loans_full_schema |&gt;\n  select(\n    loan_amount, interest_rate, term, grade, \n    state, annual_income, homeownership, debt_to_income\n  )\nglimpse(loans)\n\nRows: 10,000\nColumns: 8\n$ loan_amount    &lt;int&gt; 28000, 5000, 2000, 21600, 23000, 50…\n$ interest_rate  &lt;dbl&gt; 14.07, 12.61, 17.09, 6.72, 14.07, 6…\n$ term           &lt;dbl&gt; 60, 36, 36, 36, 36, 36, 60, 60, 36,…\n$ grade          &lt;fct&gt; C, C, D, A, C, A, C, B, C, A, C, B,…\n$ state          &lt;fct&gt; NJ, HI, WI, PA, CA, KY, MI, AZ, NV,…\n$ annual_income  &lt;dbl&gt; 90000, 40000, 40000, 30000, 35000, …\n$ homeownership  &lt;fct&gt; MORTGAGE, RENT, RENT, RENT, RENT, O…\n$ debt_to_income &lt;dbl&gt; 18.01, 5.04, 21.15, 10.16, 57.96, 6…"
  },
  {
    "objectID": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#loan-amount",
    "href": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#loan-amount",
    "title": "Visualizing and summarizing numerical data",
    "section": "Loan amount",
    "text": "Loan amount"
  },
  {
    "objectID": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#characteristics-of-a-distribution",
    "href": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#characteristics-of-a-distribution",
    "title": "Visualizing and summarizing numerical data",
    "section": "Characteristics of a distribution",
    "text": "Characteristics of a distribution\n\n\nShape: Modality and skewness\nCenter: Generally mean or median depending on whether the distribution is symmetric or skewed, respectively\nSpread: Generally standard deviation or inter-quartile range (IQR) depending on whether the distribution is symmetric or skewed, respectively\nOutliers: Whether there are any, where they are located, and if feasible to identify, which observations"
  },
  {
    "objectID": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#shape",
    "href": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#shape",
    "title": "Visualizing and summarizing numerical data",
    "section": "Shape",
    "text": "Shape\nThe distribution of loan amounts in this sample is unimodal and right-skewed distribution."
  },
  {
    "objectID": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#center",
    "href": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#center",
    "title": "Visualizing and summarizing numerical data",
    "section": "Center",
    "text": "Center\nMedian loan amount in this sample is $14,500."
  },
  {
    "objectID": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#spread",
    "href": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#spread",
    "title": "Visualizing and summarizing numerical data",
    "section": "Spread",
    "text": "Spread\nIn this sample, the middle 50% of the loan amounts are between $8,000 and $24,000."
  },
  {
    "objectID": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#outliers",
    "href": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#outliers",
    "title": "Visualizing and summarizing numerical data",
    "section": "Outliers",
    "text": "Outliers\nThere are no clear outliers in the loan amounts in this sample."
  },
  {
    "objectID": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#histogram",
    "href": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#histogram",
    "title": "Visualizing and summarizing numerical data",
    "section": "Histogram",
    "text": "Histogram\n\nHelpful for identifying shape (modality and skewness)\nRequires a careful selection of binwidth\n\n\nggplot(loans, aes(x = loan_amount)) +\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with\n`binwidth`."
  },
  {
    "objectID": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#histograms-and-binwidth",
    "href": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#histograms-and-binwidth",
    "title": "Visualizing and summarizing numerical data",
    "section": "Histograms and binwidth",
    "text": "Histograms and binwidth\n\np_loans &lt;- ggplot(loans, aes(x = loan_amount))\n\n\n\n\n\np_loans +\n  geom_histogram(\n    binwidth = 1000\n  )\n\n\n\n\n\n\n\n\n\n\np_loans +\n  geom_histogram(\n    binwidth = 5000\n  )\n\n\n\n\n\n\n\n\n\n\np_loans +\n  geom_histogram(\n    binwidth = 20000\n  )"
  },
  {
    "objectID": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#histogram-customization",
    "href": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#histogram-customization",
    "title": "Visualizing and summarizing numerical data",
    "section": "Histogram customization",
    "text": "Histogram customization\n\n\nggplot(loans, aes(x = loan_amount)) +\n  geom_histogram(binwidth = 5000) +\n  labs(\n    x = \"Loan amount ($)\",\n    y = \"Frequency\",\n    title = \"Amounts of Lending Club loans\"\n  ) +\n  scale_x_continuous(\n    labels = label_dollar()\n  ) +\n  scale_y_continuous(\n    labels = label_number(big.mark = \",\")\n  )"
  },
  {
    "objectID": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#density-plot",
    "href": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#density-plot",
    "title": "Visualizing and summarizing numerical data",
    "section": "Density plot",
    "text": "Density plot\n\nHelpful for identifying shape (modality and skewness)\nSmoothness can be adjusted\n\n\n\n\np_loans+\n  geom_density()\n\n\n\n\n\n\n\n\n\n\np_loans +\n  geom_density(adjust = 2)"
  },
  {
    "objectID": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#box-plot",
    "href": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#box-plot",
    "title": "Visualizing and summarizing numerical data",
    "section": "Box plot",
    "text": "Box plot\n\nHelpful for identifying min, max, 25th percentile, median (50th percentile), 75th percentile\nHelpful for identifying shape (skewness, but not modality)\nMakes outliers very clear (according to a strict definition of an outlier)\n\n\np_loans +\n  geom_boxplot()"
  },
  {
    "objectID": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#box-plot-and-outliers",
    "href": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#box-plot-and-outliers",
    "title": "Visualizing and summarizing numerical data",
    "section": "Box plot and outliers",
    "text": "Box plot and outliers\n\nggplot(loans, aes(x = interest_rate)) +\n  geom_boxplot()"
  },
  {
    "objectID": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#box-plot-customization",
    "href": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#box-plot-customization",
    "title": "Visualizing and summarizing numerical data",
    "section": "Box plot customization",
    "text": "Box plot customization\n\n\nggplot(loans, aes(x = interest_rate)) +\n  geom_boxplot() +\n  labs(\n    x = \"Interest rate\", \n    y = NULL,\n    title = \"Interest rates of Lending Club loans\"\n  ) +\n  theme(\n    axis.ticks.y = element_blank(),\n    axis.text.y = element_blank()\n  )"
  },
  {
    "objectID": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#summarize",
    "href": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#summarize",
    "title": "Visualizing and summarizing numerical data",
    "section": "summarize()",
    "text": "summarize()\n\nsummarize() returns for a summary statistic for all observations in the data:\n\n\nloans |&gt;\n  summarize(mean_loan_amt = mean(loan_amount))\n\n# A tibble: 1 × 1\n  mean_loan_amt\n          &lt;dbl&gt;\n1        16362.\n\n\n\n\nsummarize() can be used to calculate multiple summary statistics as well:\n\n\nloans |&gt;\n  summarize(\n    q25 = quantile(loan_amount, 0.25),\n    q75 = quantile(loan_amount, 0.75)\n  )\n\n# A tibble: 1 × 2\n    q25   q75\n  &lt;dbl&gt; &lt;dbl&gt;\n1  8000 24000"
  },
  {
    "objectID": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#sloppy-summarize",
    "href": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#sloppy-summarize",
    "title": "Visualizing and summarizing numerical data",
    "section": "Sloppy summarize()",
    "text": "Sloppy summarize()\nsummarize() will work even if you don’t name your summary statistic, or give it a non-informative/bad name, but I don’t recommend it!\n\n\n\n# good\nloans |&gt;\n  summarize(\n    mean_loan_amt = mean(loan_amount)\n  )\n\n# A tibble: 1 × 1\n  mean_loan_amt\n          &lt;dbl&gt;\n1        16362.\n\n\n\n\n# bad\nloans |&gt;\n  summarize(\n    mean(loan_amount)\n  )\n\n# A tibble: 1 × 1\n  `mean(loan_amount)`\n                &lt;dbl&gt;\n1              16362.\n\n\n\n\n# bad\nloans |&gt;\n  summarize(\n    temp = mean(loan_amount)\n  )\n\n# A tibble: 1 × 1\n    temp\n   &lt;dbl&gt;\n1 16362."
  },
  {
    "objectID": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#dataset-terminology",
    "href": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#dataset-terminology",
    "title": "Visualizing data",
    "section": "Dataset terminology",
    "text": "Dataset terminology\n\n\nEach row is an observation\nEach column is a variable\n\n\n\n\nstarwars\n\n# A tibble: 87 × 14\n   name         height  mass hair_color skin_color eye_color\n   &lt;chr&gt;         &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;    \n 1 Luke Skywal…    172    77 blond      fair       blue     \n 2 C-3PO           167    75 &lt;NA&gt;       gold       yellow   \n 3 R2-D2            96    32 &lt;NA&gt;       white, bl… red      \n 4 Darth Vader     202   136 none       white      yellow   \n 5 Leia Organa     150    49 brown      light      brown    \n 6 Owen Lars       178   120 brown, gr… light      blue     \n 7 Beru Whites…    165    75 brown      light      blue     \n 8 R5-D4            97    32 &lt;NA&gt;       white, red red      \n 9 Biggs Darkl…    183    84 black      light      brown    \n10 Obi-Wan Ken…    182    77 auburn, w… fair       blue-gray\n# ℹ 77 more rows\n# ℹ 8 more variables: birth_year &lt;dbl&gt;, sex &lt;chr&gt;,\n#   gender &lt;chr&gt;, homeworld &lt;chr&gt;, species &lt;chr&gt;,\n#   films &lt;list&gt;, vehicles &lt;list&gt;, starships &lt;list&gt;"
  },
  {
    "objectID": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#luke-skywalker",
    "href": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#luke-skywalker",
    "title": "Visualizing data",
    "section": "Luke Skywalker",
    "text": "Luke Skywalker"
  },
  {
    "objectID": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#whats-in-the-star-wars-data",
    "href": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#whats-in-the-star-wars-data",
    "title": "Visualizing data",
    "section": "What’s in the Star Wars data?",
    "text": "What’s in the Star Wars data?\nTake a glimpse() at the data:\n\nglimpse(starwars)\n\nRows: 87\nColumns: 14\n$ name       &lt;chr&gt; \"Luke Skywalker\", \"C-3PO\", \"R2-D2\", \"Da…\n$ height     &lt;int&gt; 172, 167, 96, 202, 150, 178, 165, 97, 1…\n$ mass       &lt;dbl&gt; 77, 75, 32, 136, 49, 120, 75, 32, 84, 7…\n$ hair_color &lt;chr&gt; \"blond\", NA, NA, \"none\", \"brown\", \"brow…\n$ skin_color &lt;chr&gt; \"fair\", \"gold\", \"white, blue\", \"white\",…\n$ eye_color  &lt;chr&gt; \"blue\", \"yellow\", \"red\", \"yellow\", \"bro…\n$ birth_year &lt;dbl&gt; 19.0, 112.0, 33.0, 41.9, 19.0, 52.0, 47…\n$ sex        &lt;chr&gt; \"male\", \"none\", \"none\", \"male\", \"female…\n$ gender     &lt;chr&gt; \"masculine\", \"masculine\", \"masculine\", …\n$ homeworld  &lt;chr&gt; \"Tatooine\", \"Tatooine\", \"Naboo\", \"Tatoo…\n$ species    &lt;chr&gt; \"Human\", \"Droid\", \"Droid\", \"Human\", \"Hu…\n$ films      &lt;list&gt; &lt;\"A New Hope\", \"The Empire Strikes Bac…\n$ vehicles   &lt;list&gt; &lt;\"Snowspeeder\", \"Imperial Speeder Bike…\n$ starships  &lt;list&gt; &lt;\"X-wing\", \"Imperial shuttle\"&gt;, &lt;&gt;, &lt;&gt;…"
  },
  {
    "objectID": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#get-to-know-the-data",
    "href": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#get-to-know-the-data",
    "title": "Visualizing data",
    "section": "Get to know the data",
    "text": "Get to know the data\n\nHow many rows and columns does this dataset have? What does each row represent? What does each column represent?\n\n\n\n?starwars"
  },
  {
    "objectID": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#dimensions-of-the-data",
    "href": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#dimensions-of-the-data",
    "title": "Visualizing data",
    "section": "Dimensions of the data",
    "text": "Dimensions of the data\n\nHow many rows and columns does this dataset have?\n\n\n\nnrow(starwars) # number of rows\n\n[1] 87\n\nncol(starwars) # number of columns\n\n[1] 14\n\ndim(starwars)  # dimensions (row column)\n\n[1] 87 14"
  },
  {
    "objectID": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#what-is-eda",
    "href": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#what-is-eda",
    "title": "Visualizing data",
    "section": "What is EDA?",
    "text": "What is EDA?\nExploratory data analysis (EDA) is an approach for analyzing data sets to summarize their main characteristics:\n\n\nVisualize – this is what we’ll focus on first\nSummarize - this is what we’ll focus on next\nBoth of these may require data wrangling, manipulation, transformation at (or before) this stage of the analysis"
  },
  {
    "objectID": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#mass-vs.-height",
    "href": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#mass-vs.-height",
    "title": "Visualizing data",
    "section": "Mass vs. height",
    "text": "Mass vs. height\n\nHow would you describe the relationship between mass and height of Star Wars characters? What other variables would help us understand data points that don’t follow the overall trend? Who is the not so tall but really chubby character?"
  },
  {
    "objectID": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#jabba",
    "href": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#jabba",
    "title": "Visualizing data",
    "section": "Jabba!",
    "text": "Jabba!"
  },
  {
    "objectID": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#data-visualization",
    "href": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#data-visualization",
    "title": "Visualizing data",
    "section": "Data visualization",
    "text": "Data visualization\n\n“The simple graph has brought more information to the data analyst’s mind than any other device.” — John Tukey\n\n\n\nData visualization, an important part of exploratory data analysis, is the creation and study of the visual representation of data\nMany tools for visualizing data – R is one of them\nMany approaches/systems within R for making data visualizations – ggplot2 is one of them, and that’s what we’re going to use"
  },
  {
    "objectID": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#anscombes-quartet",
    "href": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#anscombes-quartet",
    "title": "Visualizing data",
    "section": "Anscombe’s quartet",
    "text": "Anscombe’s quartet\n\nlibrary(Tmisc)\nquartet\n\n   set  x     y\n1    I 10  8.04\n2    I  8  6.95\n3    I 13  7.58\n4    I  9  8.81\n5    I 11  8.33\n6    I 14  9.96\n7    I  6  7.24\n8    I  4  4.26\n9    I 12 10.84\n10   I  7  4.82\n11   I  5  5.68\n12  II 10  9.14\n13  II  8  8.14\n14  II 13  8.74\n15  II  9  8.77\n16  II 11  9.26\n17  II 14  8.10\n18  II  6  6.13\n19  II  4  3.10\n20  II 12  9.13\n21  II  7  7.26\n22  II  5  4.74\n23 III 10  7.46\n24 III  8  6.77\n25 III 13 12.74\n26 III  9  7.11\n27 III 11  7.81\n28 III 14  8.84\n29 III  6  6.08\n30 III  4  5.39\n31 III 12  8.15\n32 III  7  6.42\n33 III  5  5.73\n34  IV  8  6.58\n35  IV  8  5.76\n36  IV  8  7.71\n37  IV  8  8.84\n38  IV  8  8.47\n39  IV  8  7.04\n40  IV  8  5.25\n41  IV 19 12.50\n42  IV  8  5.56\n43  IV  8  7.91\n44  IV  8  6.89"
  },
  {
    "objectID": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#summarizing-anscombes-quartet",
    "href": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#summarizing-anscombes-quartet",
    "title": "Visualizing data",
    "section": "Summarizing Anscombe’s quartet",
    "text": "Summarizing Anscombe’s quartet\n\nquartet |&gt;\n  group_by(set) |&gt;\n  summarise(\n    mean_x = mean(x), \n    mean_y = mean(y),\n    sd_x = sd(x),\n    sd_y = sd(y),\n    r = cor(x, y)\n  )\n\n# A tibble: 4 × 6\n  set   mean_x mean_y  sd_x  sd_y     r\n  &lt;fct&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 I          9   7.50  3.32  2.03 0.816\n2 II         9   7.50  3.32  2.03 0.816\n3 III        9   7.5   3.32  2.03 0.816\n4 IV         9   7.50  3.32  2.03 0.817"
  },
  {
    "objectID": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#visualizing-anscombes-quartet",
    "href": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#visualizing-anscombes-quartet",
    "title": "Visualizing data",
    "section": "Visualizing Anscombe’s quartet",
    "text": "Visualizing Anscombe’s quartet\n\nggplot(quartet, aes(x = x, y = y)) +\n  geom_point() +\n  facet_wrap(~ set, ncol = 4)"
  },
  {
    "objectID": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#age-at-first-kiss",
    "href": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#age-at-first-kiss",
    "title": "Visualizing data",
    "section": "Age at first kiss",
    "text": "Age at first kiss\n\nA group of college students were asked “How old were you when you had your first kiss?” on a survey. First, think about how you might expect the distribution of their responses to look.\nThen, examine the plot below. Do you see anything out of the ordinary?"
  },
  {
    "objectID": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#facebook-visits",
    "href": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#facebook-visits",
    "title": "Visualizing data",
    "section": "Facebook visits",
    "text": "Facebook visits\n\nSame group of college students were also asked “How many times do you go on Facebook per day?” First, think about how you might expect the distribution of their responses to look.\nThen, examine the plot below. How are people reporting lower vs. higher values of FB visits?"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#grammar-of-graphics-1",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#grammar-of-graphics-1",
    "title": "Grammar of graphics",
    "section": "Grammar of Graphics",
    "text": "Grammar of Graphics\n\n\n\n\nThe grammar of graphics is a tool that enables us to concisely describe the components of a graphic\nThe ggplot2 package, which is part of tidyverse, implements the grammar of graphics in R"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#layers",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#layers",
    "title": "Grammar of graphics",
    "section": "Layers",
    "text": "Layers\nWith ggplot2, you can create a wide variety of plots layer-by-layer:"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#data",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#data",
    "title": "Grammar of graphics",
    "section": "Data",
    "text": "Data\nFoundation of the plot that gives you the canvas on which you can “paint” your data:\n\nggplot(penguins)"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#aesthetics",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#aesthetics",
    "title": "Grammar of graphics",
    "section": "Aesthetics",
    "text": "Aesthetics\nCharacteristics of plotting characters that can be mapped to a specific variable in the data, e.g.:\n\ncolor\nshape\nsize\nalpha (transparency)\n…"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#color",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#color",
    "title": "Grammar of graphics",
    "section": "Color",
    "text": "Color\nThe color aesthetic mapped to species:\n\n\nggplot(\n  penguins,\n  aes(\n    x = bill_depth_mm, \n    y = bill_length_mm,\n    color = species\n    )\n  ) +\n  geom_point()"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#shape",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#shape",
    "title": "Grammar of graphics",
    "section": "Shape",
    "text": "Shape\nThe shape aesthetic mapped to island:\n\n\nggplot(\n  penguins,\n  aes(\n    x = bill_depth_mm, \n    y = bill_length_mm,\n    color = species,\n    shape = island\n    )\n  ) +\n  geom_point()"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#color-and-shape",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#color-and-shape",
    "title": "Grammar of graphics",
    "section": "Color and shape",
    "text": "Color and shape\nThe color and shape aesthetics mapped to species:\n\n\nggplot(\n  penguins,\n  aes(\n    x = bill_depth_mm, \n    y = bill_length_mm,\n    color = species,\n    shape = species\n    )\n  ) +\n  geom_point()"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#size",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#size",
    "title": "Grammar of graphics",
    "section": "Size",
    "text": "Size\nThe size aesthetic mapped to body_mass_g:\n\n\nggplot(\n  penguins,\n  aes(\n    x = bill_depth_mm, \n    y = bill_length_mm,\n    color = species,\n    shape = species,\n    size = body_mass_g\n    )\n  ) +\n  geom_point()"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#alpha",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#alpha",
    "title": "Grammar of graphics",
    "section": "Alpha",
    "text": "Alpha\nThe alpha aesthetic mapped to flipper_length_mm:\n\n\nggplot(\n  penguins,\n  aes(\n    x = bill_depth_mm, \n    y = bill_length_mm,\n    color = species,\n    shape = species,\n    size = body_mass_g,\n    alpha = flipper_length_mm\n    )\n  ) +\n  geom_point()"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#mapping-vs.-setting",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#mapping-vs.-setting",
    "title": "Grammar of graphics",
    "section": "Mapping vs. setting",
    "text": "Mapping vs. setting\n\n\nMapping:\n\nggplot(\n  penguins,\n  aes(\n    x = bill_depth_mm, y = bill_length_mm,\n    color = species,\n    size = body_mass_g\n    )\n  ) + \n  geom_point()\n\n\n\n\n\n\n\n\n\nSetting:\n\nggplot(\n  penguins,\n  aes(\n    x = bill_depth_mm, y = bill_length_mm\n    )\n  ) + \n  geom_point(\n    color = \"red\",\n    size = 3\n  )"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#mapping-vs.-setting-1",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#mapping-vs.-setting-1",
    "title": "Grammar of graphics",
    "section": "Mapping vs. setting",
    "text": "Mapping vs. setting\n\n\nMapping:\nDetermine the size, alpha, etc. of points based on the values of a variable in the data – goes into aes():\n\n\n\n\n\n\n\n\n\n\n\nSetting:\nDetermine the size, alpha, etc. of points not based on the values of a variable in the data – goes into geom_*():"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#geoms",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#geoms",
    "title": "Grammar of graphics",
    "section": "Geoms",
    "text": "Geoms\nVisual representations of data points:\n\n\nShort for geometric objects\ngeom_*() functions are used to add geoms to a plot\nEach geom adds a layer to the plot"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#geom_point",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#geom_point",
    "title": "Grammar of graphics",
    "section": "geom_point()",
    "text": "geom_point()\n\nggplot(\n  penguins, \n  aes(x = bill_depth_mm, y = bill_length_mm)\n  ) + \n  geom_point()"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#geom_smooth",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#geom_smooth",
    "title": "Grammar of graphics",
    "section": "geom_smooth()",
    "text": "geom_smooth()\n\nggplot(\n  penguins,\n  aes(x = bill_depth_mm, y = bill_length_mm)\n  ) + \n  geom_point() +\n  geom_smooth()\n\n\n\n\n\n\n\n\n\n\nand many more soon…"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#faceting---what-and-why",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#faceting---what-and-why",
    "title": "Grammar of graphics",
    "section": "Faceting - what and why",
    "text": "Faceting - what and why\n\n\nSmaller plots that each display different subsets of the data\nAlso referred to as small multiples\nUseful for exploring conditional relationships and large data"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#faceting---how",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#faceting---how",
    "title": "Grammar of graphics",
    "section": "Faceting - how",
    "text": "Faceting - how\n\n\nggplot(\n  penguins, \n  aes(\n    x = bill_depth_mm, \n    y = bill_length_mm)\n  ) + \n  geom_point()"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#faceting---how-1",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#faceting---how-1",
    "title": "Grammar of graphics",
    "section": "Faceting - how",
    "text": "Faceting - how\n\n\nggplot(\n  penguins, \n  aes(\n    x = bill_depth_mm, \n    y = bill_length_mm)\n  ) + \n  geom_point() +\n  facet_grid(species ~ island)"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#faceting-by-two-variables",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#faceting-by-two-variables",
    "title": "Grammar of graphics",
    "section": "Faceting by two variables",
    "text": "Faceting by two variables\n\n\nspecies on rows, island on columns:\n\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + \n  geom_point() +\n  facet_grid(species ~ island)\n\n\n\n\n\n\n\n\n\nisland on rows, species on columns:\n\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + \n  geom_point() +\n  facet_grid(island ~ species)"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#faceting-by-one-variable",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#faceting-by-one-variable",
    "title": "Grammar of graphics",
    "section": "Faceting by one variable",
    "text": "Faceting by one variable\n\n\n\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + \n  geom_point() +\n  facet_wrap(~ species)\n\n\n\n\n\n\n\n\n\n\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + \n  geom_point() +\n  facet_wrap(~ species, ncol = 1)"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#themes",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#themes",
    "title": "Grammar of graphics",
    "section": "Themes",
    "text": "Themes\nControl the non-data elements of the plot:\n\n\nSelect from pre-defined themes with theme_*() functions\nTake control of individual theme elements in the theme() function"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#theme_dark",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#theme_dark",
    "title": "Grammar of graphics",
    "section": "theme_dark()",
    "text": "theme_dark()\n\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + \n  geom_point() +\n  theme_dark()"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#theme",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#theme",
    "title": "Grammar of graphics",
    "section": "theme()",
    "text": "theme()\n\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm, color = species)) + \n  geom_point() +\n  theme(legend.position = \"bottom\")\n\n\n\n\n\n\n\n\n\n\nand many more throughout the course…"
  },
  {
    "objectID": "code-alongs/3-3-diving-deeper-palmer-penguins/3-3-diving-deeper-palmer-penguins-eov.html",
    "href": "code-alongs/3-3-diving-deeper-palmer-penguins/3-3-diving-deeper-palmer-penguins-eov.html",
    "title": "Diving deeper with Palmer Penguins  End of video",
    "section": "",
    "text": "How do sizes of penguins vary across species, islands, and sexes? What about other characteristics?\n\n\nWe will use the tidyverse and ggbeeswarm packages for data wrangling and visualization and the palmerpenguins package for the data.\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\nlibrary(ggbeeswarm)\n\n\n\n\nThe dataset we will visualize is called penguins. Let’s glimpse() at it.\n\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male…\n$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…"
  },
  {
    "objectID": "code-alongs/3-3-diving-deeper-palmer-penguins/3-3-diving-deeper-palmer-penguins-eov.html#packages",
    "href": "code-alongs/3-3-diving-deeper-palmer-penguins/3-3-diving-deeper-palmer-penguins-eov.html#packages",
    "title": "Diving deeper with Palmer Penguins  End of video",
    "section": "",
    "text": "We will use the tidyverse and ggbeeswarm packages for data wrangling and visualization and the palmerpenguins package for the data.\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\nlibrary(ggbeeswarm)"
  },
  {
    "objectID": "code-alongs/3-3-diving-deeper-palmer-penguins/3-3-diving-deeper-palmer-penguins-eov.html#data",
    "href": "code-alongs/3-3-diving-deeper-palmer-penguins/3-3-diving-deeper-palmer-penguins-eov.html#data",
    "title": "Diving deeper with Palmer Penguins  End of video",
    "section": "",
    "text": "The dataset we will visualize is called penguins. Let’s glimpse() at it.\n\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male…\n$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…"
  },
  {
    "objectID": "code-alongs/3-3-diving-deeper-palmer-penguins/3-3-diving-deeper-palmer-penguins-eov.html#single-variable",
    "href": "code-alongs/3-3-diving-deeper-palmer-penguins/3-3-diving-deeper-palmer-penguins-eov.html#single-variable",
    "title": "Diving deeper with Palmer Penguins  End of video",
    "section": "Single variable",
    "text": "Single variable\n\n\n\n\n\n\nNote\n\n\n\nAnalyzing the a single variable is called univariate analysis.\n\n\nCreate visualizations of the distribution of weights of penguins.\n\nExercise 1\nMake a histogram. Set an appropriate binwidth.\n\nggplot(penguins, aes(x = body_mass_g)) +\n  geom_histogram(binwidth = 250)\n\n\n\n\n\n\n\n\n\n\nExercise 2\nMake a boxplot.\n\nggplot(penguins, aes(x = body_mass_g)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\n\n\nExercise 3\nBased on these, determine if each of the following statements about the shape of the distribution is true or false.\n\nThe distribution of penguin weights in this sample is left skewed. FALSE\nThe distribution of penguin weights in this sample is unimodal. Difficult to determine, FALSE\n\n\nggplot(penguins, aes(x = body_mass_g)) +\n  geom_density()"
  },
  {
    "objectID": "code-alongs/3-3-diving-deeper-palmer-penguins/3-3-diving-deeper-palmer-penguins-eov.html#two-variables",
    "href": "code-alongs/3-3-diving-deeper-palmer-penguins/3-3-diving-deeper-palmer-penguins-eov.html#two-variables",
    "title": "Diving deeper with Palmer Penguins  End of video",
    "section": "Two variables",
    "text": "Two variables\n\n\n\n\n\n\nNote\n\n\n\nAnalyzing the relationship between two variables is called bivariate analysis.\n\n\nCreate visualizations of the distribution of weights of penguins by species.\n\nExercise 4\nMake a single histogram. Set an appropriate binwidth.\n\nggplot(penguins, aes(x = body_mass_g, fill = species)) +\n  geom_histogram(binwidth = 250)\n\n\n\n\n\n\n\n\n\n\nExercise 5\nUse multiple histograms via faceting, one for each species. Set an appropriate binwidth, add color as you see fit, and turn off legends if not needed.\n\nggplot(penguins, aes(x = body_mass_g, fill = species)) +\n  geom_histogram(binwidth = 250) +\n  facet_wrap(~species, ncol = 1)\n\n\n\n\n\n\n\n\n\n\nExercise 6\nUse side-by-side box plots. Add color as you see fit and turn off legends if not needed.\n\nggplot(penguins, aes(x = body_mass_g, y = species, fill = species)) +\n  geom_boxplot(show.legend = FALSE)\n\n\n\n\n\n\n\n\n\n\nExercise 7\nUse density plots. Add color as you see fit.\n\nggplot(penguins, aes(x = body_mass_g, fill = species, color = species)) +\n  geom_density(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\nExercise 8\nUse violin plots. Add color as you see fit and turn off legends if not needed.\n\nggplot(penguins, aes(x = body_mass_g, y = species, color = species, fill = species)) +\n  geom_violin(alpha = 0.2, show.legend = FALSE)\n\n\n\n\n\n\n\n\n\n\nExercise 9\nMake a jittered scatter plot. Add color as you see fit and turn off legends if not needed.\n\nset.seed(1234)\nggplot(penguins, aes(x = species, y = body_mass_g)) +\n  geom_jitter(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\nExercise 10\nUse beeswarm plots. Add color as you see fit and turn off legends if not needed.\n\nggplot(penguins, aes(x = species, y = body_mass_g, color = species, shape = species)) +\n  geom_beeswarm(show.legend = FALSE)\n\n\n\n\n\n\n\n\n\n\nExercise 11\nUse multiple geoms on a single plot. Be deliberate about the order of plotting. Change the theme and the color scale of the plot. Finally, add informative labels.\n\nggplot(penguins, aes(x = body_mass_g, y = species, color = species)) +\n  geom_boxplot() +\n  geom_beeswarm()"
  },
  {
    "objectID": "code-alongs/3-3-diving-deeper-palmer-penguins/3-3-diving-deeper-palmer-penguins-eov.html#multiple-variables",
    "href": "code-alongs/3-3-diving-deeper-palmer-penguins/3-3-diving-deeper-palmer-penguins-eov.html#multiple-variables",
    "title": "Diving deeper with Palmer Penguins  End of video",
    "section": "Multiple variables",
    "text": "Multiple variables\n\n\n\n\n\n\nNote\n\n\n\nAnalyzing the relationship between three or more variables is called multivariate analysis.\n\n\n\nExercise 12\nFacet the plot you created in the previous exercise by island. Adjust labels accordingly.\n\nggplot(penguins, aes(x = body_mass_g, y = species, color = species)) +\n  geom_boxplot(show.legend = FALSE) +\n  geom_beeswarm(show.legend = FALSE) +\n  facet_wrap(~island, ncol = 1) +\n  labs(\n    x = \"Weight (grams)\",\n    y = \"Species\",\n    title = \"Weights of penguins across species and islands\"\n  )\n\n\n\n\n\n\n\n\nBefore you continue, let’s turn off all warnings the code chunks generate and resize all figures. We’ll do this by editing the YAML."
  },
  {
    "objectID": "code-alongs/2-1-first-look-palmer-penguins/2-1-first-look-palmer-penguins.html",
    "href": "code-alongs/2-1-first-look-palmer-penguins/2-1-first-look-palmer-penguins.html",
    "title": "First look at Palmer Penguins",
    "section": "",
    "text": "How do bill sizes of penguins vary across species? And what happens if we don’t take species into consideration?\n\n\nWe will use the tidyverse packages for data wrangling and visualization and the palmerpenguins package for the data.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(palmerpenguins)\n\n\n\n\nThe dataset we will visualize is called penguins. Let’s glimpse() at it.\n\n# add code here"
  },
  {
    "objectID": "code-alongs/2-1-first-look-palmer-penguins/2-1-first-look-palmer-penguins.html#packages",
    "href": "code-alongs/2-1-first-look-palmer-penguins/2-1-first-look-palmer-penguins.html#packages",
    "title": "First look at Palmer Penguins",
    "section": "",
    "text": "We will use the tidyverse packages for data wrangling and visualization and the palmerpenguins package for the data.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(palmerpenguins)"
  },
  {
    "objectID": "code-alongs/2-1-first-look-palmer-penguins/2-1-first-look-palmer-penguins.html#data",
    "href": "code-alongs/2-1-first-look-palmer-penguins/2-1-first-look-palmer-penguins.html#data",
    "title": "First look at Palmer Penguins",
    "section": "",
    "text": "The dataset we will visualize is called penguins. Let’s glimpse() at it.\n\n# add code here"
  },
  {
    "objectID": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes.html",
    "href": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes.html",
    "title": "Flights and pipes",
    "section": "",
    "text": "Have you ever had a flight delayed? How common is that? Which airlines are delayed more than others?\n\n\nWe will use the tidyverse packages for data wrangling and visualization and the nycflights13 package for the data.\n\nlibrary(tidyverse)\nlibrary(nycflights13)\n\n\n\n\nThe dataset we will explore is called flights. Let’s glimpse() at it.\n\nglimpse(flights)\n\nRows: 336,776\nColumns: 19\n$ year           &lt;int&gt; 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2…\n$ month          &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ day            &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ dep_time       &lt;int&gt; 517, 533, 542, 544, 554, 554, 555, 557, 557, 558, 558, …\n$ sched_dep_time &lt;int&gt; 515, 529, 540, 545, 600, 558, 600, 600, 600, 600, 600, …\n$ dep_delay      &lt;dbl&gt; 2, 4, 2, -1, -6, -4, -5, -3, -3, -2, -2, -2, -2, -2, -1…\n$ arr_time       &lt;int&gt; 830, 850, 923, 1004, 812, 740, 913, 709, 838, 753, 849,…\n$ sched_arr_time &lt;int&gt; 819, 830, 850, 1022, 837, 728, 854, 723, 846, 745, 851,…\n$ arr_delay      &lt;dbl&gt; 11, 20, 33, -18, -25, 12, 19, -14, -8, 8, -2, -3, 7, -1…\n$ carrier        &lt;chr&gt; \"UA\", \"UA\", \"AA\", \"B6\", \"DL\", \"UA\", \"B6\", \"EV\", \"B6\", \"…\n$ flight         &lt;int&gt; 1545, 1714, 1141, 725, 461, 1696, 507, 5708, 79, 301, 4…\n$ tailnum        &lt;chr&gt; \"N14228\", \"N24211\", \"N619AA\", \"N804JB\", \"N668DN\", \"N394…\n$ origin         &lt;chr&gt; \"EWR\", \"LGA\", \"JFK\", \"JFK\", \"LGA\", \"EWR\", \"EWR\", \"LGA\",…\n$ dest           &lt;chr&gt; \"IAH\", \"IAH\", \"MIA\", \"BQN\", \"ATL\", \"ORD\", \"FLL\", \"IAD\",…\n$ air_time       &lt;dbl&gt; 227, 227, 160, 183, 116, 150, 158, 53, 140, 138, 149, 1…\n$ distance       &lt;dbl&gt; 1400, 1416, 1089, 1576, 762, 719, 1065, 229, 944, 733, …\n$ hour           &lt;dbl&gt; 5, 5, 5, 5, 6, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 6, 6, 6…\n$ minute         &lt;dbl&gt; 15, 29, 40, 45, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 0…\n$ time_hour      &lt;dttm&gt; 2013-01-01 05:00:00, 2013-01-01 05:00:00, 2013-01-01 0…"
  },
  {
    "objectID": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes.html#packages",
    "href": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes.html#packages",
    "title": "Flights and pipes",
    "section": "",
    "text": "We will use the tidyverse packages for data wrangling and visualization and the nycflights13 package for the data.\n\nlibrary(tidyverse)\nlibrary(nycflights13)"
  },
  {
    "objectID": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes.html#data",
    "href": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes.html#data",
    "title": "Flights and pipes",
    "section": "",
    "text": "The dataset we will explore is called flights. Let’s glimpse() at it.\n\nglimpse(flights)\n\nRows: 336,776\nColumns: 19\n$ year           &lt;int&gt; 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2…\n$ month          &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ day            &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ dep_time       &lt;int&gt; 517, 533, 542, 544, 554, 554, 555, 557, 557, 558, 558, …\n$ sched_dep_time &lt;int&gt; 515, 529, 540, 545, 600, 558, 600, 600, 600, 600, 600, …\n$ dep_delay      &lt;dbl&gt; 2, 4, 2, -1, -6, -4, -5, -3, -3, -2, -2, -2, -2, -2, -1…\n$ arr_time       &lt;int&gt; 830, 850, 923, 1004, 812, 740, 913, 709, 838, 753, 849,…\n$ sched_arr_time &lt;int&gt; 819, 830, 850, 1022, 837, 728, 854, 723, 846, 745, 851,…\n$ arr_delay      &lt;dbl&gt; 11, 20, 33, -18, -25, 12, 19, -14, -8, 8, -2, -3, 7, -1…\n$ carrier        &lt;chr&gt; \"UA\", \"UA\", \"AA\", \"B6\", \"DL\", \"UA\", \"B6\", \"EV\", \"B6\", \"…\n$ flight         &lt;int&gt; 1545, 1714, 1141, 725, 461, 1696, 507, 5708, 79, 301, 4…\n$ tailnum        &lt;chr&gt; \"N14228\", \"N24211\", \"N619AA\", \"N804JB\", \"N668DN\", \"N394…\n$ origin         &lt;chr&gt; \"EWR\", \"LGA\", \"JFK\", \"JFK\", \"LGA\", \"EWR\", \"EWR\", \"LGA\",…\n$ dest           &lt;chr&gt; \"IAH\", \"IAH\", \"MIA\", \"BQN\", \"ATL\", \"ORD\", \"FLL\", \"IAD\",…\n$ air_time       &lt;dbl&gt; 227, 227, 160, 183, 116, 150, 158, 53, 140, 138, 149, 1…\n$ distance       &lt;dbl&gt; 1400, 1416, 1089, 1576, 762, 719, 1065, 229, 944, 733, …\n$ hour           &lt;dbl&gt; 5, 5, 5, 5, 6, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 6, 6, 6…\n$ minute         &lt;dbl&gt; 15, 29, 40, 45, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 0…\n$ time_hour      &lt;dttm&gt; 2013-01-01 05:00:00, 2013-01-01 05:00:00, 2013-01-01 0…"
  },
  {
    "objectID": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes.html#exercise-1",
    "href": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes.html#exercise-1",
    "title": "Flights and pipes",
    "section": "Exercise 1",
    "text": "Exercise 1\nFill in the blanks:\nThe flights data frame has ___ rows. Each row represents a ___."
  },
  {
    "objectID": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes.html#exercise-2",
    "href": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes.html#exercise-2",
    "title": "Flights and pipes",
    "section": "Exercise 2",
    "text": "Exercise 2\nWhat are the names of the variables in flights.\n\n# add code here"
  },
  {
    "objectID": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes.html#exercise-3---select",
    "href": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes.html#exercise-3---select",
    "title": "Flights and pipes",
    "section": "Exercise 3 - select()",
    "text": "Exercise 3 - select()\n\nMake a data frame that only contains the variables dep_delay and arr_delay.\n\n\n# add code here\n\n\nMake a data frame that keeps every variable except dep_delay.\n\n\n# add code here\n\n\nMake a data frame that includes all variables between year through dep_delay (inclusive). These are all variables that provide information about the departure of each flight.\n\n\n# add code here\n\n\nUse the select helper contains() to make a data frame that includes the variables associated with the arrival, i.e., contains the string \"arr_\" in the name.\n\n\n# add code here"
  },
  {
    "objectID": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes.html#exercise-4---slice",
    "href": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes.html#exercise-4---slice",
    "title": "Flights and pipes",
    "section": "Exercise 4 - slice()",
    "text": "Exercise 4 - slice()\n\nDisplay the first five rows of the flights data frame.\n\n\n# add code here\n\n\nDisplay the last two rows of the flights data frame.\n\n\n# add code here"
  },
  {
    "objectID": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes.html#exercise-5---arrange",
    "href": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes.html#exercise-5---arrange",
    "title": "Flights and pipes",
    "section": "Exercise 5 - arrange()",
    "text": "Exercise 5 - arrange()\n\nLet’s arrange the data by departure delay, so the flights with the shortest departure delays will be at the top of the data frame.\n\n\n# add code here\n\n\nWhat does it mean for the dep_delay to have a negative value?\n\nAdd your response here.\n\nArrange the data by descending departure delay, so the flights with the longest departure delays will be at the top.\n\n\n# add code here\n\n\nCreate a data frame that only includes the plane tail number (tailnum), carrier (carrier), and departure delay for the flight with the longest departure delay. What is the plane tail number (tailnum) for this flight?\n\n\n# add code here"
  },
  {
    "objectID": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes.html#exercise-6---filter",
    "href": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes.html#exercise-6---filter",
    "title": "Flights and pipes",
    "section": "Exercise 6 - filter()",
    "text": "Exercise 6 - filter()\n\nFilter for all rows where the destination airport is RDU.\n\n\n# add code here\n\n\nFilter for all rows where the destination airport is RDU and the arrival delay is less than 0.\n\n\n# add code here\n\n\nDescribe what the code is doing in words.\n\nAdd response here.\n\nflights |&gt;\n  filter(\n    dest %in% c(\"RDU\", \"GSO\"),\n    arr_delay &lt; 0 | dep_delay &lt; 0\n  )\n\n# A tibble: 6,203 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      800            810       -10      949            955\n 2  2013     1     1      832            840        -8     1006           1030\n 3  2013     1     1      851            851         0     1032           1036\n 4  2013     1     1      917            920        -3     1052           1108\n 5  2013     1     1     1024           1030        -6     1204           1215\n 6  2013     1     1     1127           1129        -2     1303           1309\n 7  2013     1     1     1157           1205        -8     1342           1345\n 8  2013     1     1     1317           1325        -8     1454           1505\n 9  2013     1     1     1449           1450        -1     1651           1640\n10  2013     1     1     1505           1510        -5     1654           1655\n# ℹ 6,193 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\nHint: Logical operators in R:\n\n\n\n\n\n\n\noperator\ndefinition\n\n\n\n\n&lt;\nis less than?\n\n\n&lt;=\nis less than or equal to?\n\n\n&gt;\nis greater than?\n\n\n&gt;=\nis greater than or equal to?\n\n\n==\nis exactly equal to?\n\n\n!=\nis not equal to?\n\n\nx & y\nis x AND y?\n\n\nx | y\nis x OR y?\n\n\nis.na(x)\nis x NA?\n\n\n!is.na(x)\nis x not NA?\n\n\nx %in% y\nis x in y?\n\n\n!(x %in% y)\nis x not in y?\n\n\n!x\nis not x? (only makes sense if x is TRUE or FALSE)"
  },
  {
    "objectID": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes.html#exercise-7---count",
    "href": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes.html#exercise-7---count",
    "title": "Flights and pipes",
    "section": "Exercise 7 - count()",
    "text": "Exercise 7 - count()\n\nCreate a frequency table of the destination locations for flights from New York.\n\n\n# add code here\n\n\nIn which month was there the fewest number of flights? How many flights were there in that month?\n\n\n# add code here\n\n\nOn which date (month + day) was there the largest number of flights? How many flights were there on that day?\n\n\n# add code here"
  },
  {
    "objectID": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes.html#exercise-8---mutate",
    "href": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes.html#exercise-8---mutate",
    "title": "Flights and pipes",
    "section": "Exercise 8 - mutate()",
    "text": "Exercise 8 - mutate()\n\nConvert air_time (minutes in the air) to hours and then create a new variable, mph, the miles per hour of the flight.\n\n\n# add code here\n\n\nFirst, count the number of flights each month, and then calculate the proportion of flights in each month. What proportion of flights take place in July?\n\n\n# add code here"
  },
  {
    "objectID": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes.html#exercise-9---summarize",
    "href": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes.html#exercise-9---summarize",
    "title": "Flights and pipes",
    "section": "Exercise 9 - summarize()",
    "text": "Exercise 9 - summarize()\n\nFind mean arrival delay for all flights.\n\n\n# add code here"
  },
  {
    "objectID": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes.html#exercise-10---group_by",
    "href": "code-alongs/3-1-flights-and-pipes/3-1-flights-and-pipes.html#exercise-10---group_by",
    "title": "Flights and pipes",
    "section": "Exercise 10 - group_by()",
    "text": "Exercise 10 - group_by()\n\nFind mean arrival delay for for each month.\n\n\n# add code here\n\n\nWhat is the median departure delay for each airports around NYC (origin)? Which airport has the shortest median departure delay?\n\n\n# add code here"
  },
  {
    "objectID": "code-alongs/3-2-starwars-characters/3-2-starwars-characters-eov.html",
    "href": "code-alongs/3-2-starwars-characters/3-2-starwars-characters-eov.html",
    "title": "Starwars characters  End of video",
    "section": "",
    "text": "You might not be a Star Wars fan, but you’ve probably heard of the movie franchise!\n\n\nWe will use the tidyverse packages for data wrangling and for the data.\n\n\n\nThe dataset we will explore is called starwars."
  },
  {
    "objectID": "code-alongs/3-2-starwars-characters/3-2-starwars-characters-eov.html#packages",
    "href": "code-alongs/3-2-starwars-characters/3-2-starwars-characters-eov.html#packages",
    "title": "Starwars characters  End of video",
    "section": "",
    "text": "We will use the tidyverse packages for data wrangling and for the data."
  },
  {
    "objectID": "code-alongs/3-2-starwars-characters/3-2-starwars-characters-eov.html#data",
    "href": "code-alongs/3-2-starwars-characters/3-2-starwars-characters-eov.html#data",
    "title": "Starwars characters  End of video",
    "section": "",
    "text": "The dataset we will explore is called starwars."
  },
  {
    "objectID": "code-alongs/3-2-starwars-characters/3-2-starwars-characters-eov.html#exercise-1",
    "href": "code-alongs/3-2-starwars-characters/3-2-starwars-characters-eov.html#exercise-1",
    "title": "Starwars characters  End of video",
    "section": "Exercise 1",
    "text": "Exercise 1\nGlimpse at the starwars data frame.\n\nglimpse(starwars)\n\nRows: 87\nColumns: 14\n$ name       &lt;chr&gt; \"Luke Skywalker\", \"C-3PO\", \"R2-D2\", \"Darth Vader\", \"Leia Or…\n$ height     &lt;int&gt; 172, 167, 96, 202, 150, 178, 165, 97, 183, 182, 188, 180, 2…\n$ mass       &lt;dbl&gt; 77.0, 75.0, 32.0, 136.0, 49.0, 120.0, 75.0, 32.0, 84.0, 77.…\n$ hair_color &lt;chr&gt; \"blond\", NA, NA, \"none\", \"brown\", \"brown, grey\", \"brown\", N…\n$ skin_color &lt;chr&gt; \"fair\", \"gold\", \"white, blue\", \"white\", \"light\", \"light\", \"…\n$ eye_color  &lt;chr&gt; \"blue\", \"yellow\", \"red\", \"yellow\", \"brown\", \"blue\", \"blue\",…\n$ birth_year &lt;dbl&gt; 19.0, 112.0, 33.0, 41.9, 19.0, 52.0, 47.0, NA, 24.0, 57.0, …\n$ sex        &lt;chr&gt; \"male\", \"none\", \"none\", \"male\", \"female\", \"male\", \"female\",…\n$ gender     &lt;chr&gt; \"masculine\", \"masculine\", \"masculine\", \"masculine\", \"femini…\n$ homeworld  &lt;chr&gt; \"Tatooine\", \"Tatooine\", \"Naboo\", \"Tatooine\", \"Alderaan\", \"T…\n$ species    &lt;chr&gt; \"Human\", \"Droid\", \"Droid\", \"Human\", \"Human\", \"Human\", \"Huma…\n$ films      &lt;list&gt; &lt;\"A New Hope\", \"The Empire Strikes Back\", \"Return of the J…\n$ vehicles   &lt;list&gt; &lt;\"Snowspeeder\", \"Imperial Speeder Bike\"&gt;, &lt;&gt;, &lt;&gt;, &lt;&gt;, \"Imp…\n$ starships  &lt;list&gt; &lt;\"X-wing\", \"Imperial shuttle\"&gt;, &lt;&gt;, &lt;&gt;, \"TIE Advanced x1\",…"
  },
  {
    "objectID": "code-alongs/3-2-starwars-characters/3-2-starwars-characters-eov.html#exercise-2",
    "href": "code-alongs/3-2-starwars-characters/3-2-starwars-characters-eov.html#exercise-2",
    "title": "Starwars characters  End of video",
    "section": "Exercise 2",
    "text": "Exercise 2\nModify the following plot to change the color of the points by gender.\n\nggplot(starwars, aes(x = height, y = mass, color = gender)) +\n  geom_point()\n\nWarning: Removed 28 rows containing missing values or values outside the scale range\n(`geom_point()`)."
  },
  {
    "objectID": "code-alongs/3-2-starwars-characters/3-2-starwars-characters-eov.html#exercise-3",
    "href": "code-alongs/3-2-starwars-characters/3-2-starwars-characters-eov.html#exercise-3",
    "title": "Starwars characters  End of video",
    "section": "Exercise 3",
    "text": "Exercise 3\nModify the following plot to change the color of all points to \"pink\".\n\nggplot(starwars, aes(x = height, y = mass)) +\n  geom_point(color = \"pink\")\n\nWarning: Removed 28 rows containing missing values or values outside the scale range\n(`geom_point()`)."
  },
  {
    "objectID": "code-alongs/3-2-starwars-characters/3-2-starwars-characters-eov.html#exercise-4",
    "href": "code-alongs/3-2-starwars-characters/3-2-starwars-characters-eov.html#exercise-4",
    "title": "Starwars characters  End of video",
    "section": "Exercise 4",
    "text": "Exercise 4\nAdd labels for title, x and y axes, and color of points.\n\nggplot(starwars, aes(x = height, y = mass, color = gender, shape = gender)) +\n  geom_point() +\n  labs(\n    title = \"Weights and heights of Star Wars characters\",\n    x = \"Height (cm)\",\n    y = \"Weight (kg)\",\n    color = \"Gender\",\n    shape = \"Gender\"\n  )\n\nWarning: Removed 31 rows containing missing values or values outside the scale range\n(`geom_point()`)."
  },
  {
    "objectID": "code-alongs/3-2-starwars-characters/3-2-starwars-characters-eov.html#exercise-5",
    "href": "code-alongs/3-2-starwars-characters/3-2-starwars-characters-eov.html#exercise-5",
    "title": "Starwars characters  End of video",
    "section": "Exercise 5",
    "text": "Exercise 5\nPick a single categorical variable from the data set and make a bar plot of its distribution. Describe what you see in the plot.\nAdd description here.\n\nggplot(starwars, aes(y = hair_color)) +\n  geom_bar()"
  },
  {
    "objectID": "code-alongs/3-2-starwars-characters/3-2-starwars-characters-eov.html#exercise-6",
    "href": "code-alongs/3-2-starwars-characters/3-2-starwars-characters-eov.html#exercise-6",
    "title": "Starwars characters  End of video",
    "section": "Exercise 6",
    "text": "Exercise 6\nPick two categorical variables and make a visualization to visualize the relationship between the these variables. Along with your code and output, provide an interpretation of the visualization.\nAdd interpretation here.\n\nggplot(starwars, aes(x = sex, fill = gender)) +\n  geom_bar()\n\n\n\n\n\n\n\nggplot(starwars, aes(x = gender, fill = sex)) +\n  geom_bar()"
  },
  {
    "objectID": "code-alongs/3-2-starwars-characters/3-2-starwars-characters-eov.html#exercise-7",
    "href": "code-alongs/3-2-starwars-characters/3-2-starwars-characters-eov.html#exercise-7",
    "title": "Starwars characters  End of video",
    "section": "Exercise 7",
    "text": "Exercise 7\nPick three categorical variables and make a visualization to visualize the relationship between the these variables. Along with your code and output, provide an interpretation of the visualization.\nAdd interpretation here.\n\nggplot(starwars, aes(x = gender, fill = sex)) +\n  geom_bar() +\n  facet_wrap(~hair_color)"
  },
  {
    "objectID": "code-alongs/1-1-unvotes/1-1-unvotes.html",
    "href": "code-alongs/1-1-unvotes/1-1-unvotes.html",
    "title": "UN Votes",
    "section": "",
    "text": "How do various countries vote in the United Nations General Assembly, how have their voting patterns evolved throughout time, and how similarly or differently do they view certain issues? Answering these questions (at a high level) is the focus of this analysis.\n\n\nWe will use the tidyverse and scales packages for data wrangling and visualization, and the DT package for interactive display of tabular output, and the unvotes package for the data.\n\nlibrary(tidyverse)\nlibrary(scales)\nlibrary(DT)\nlibrary(unvotes)\n\n\n\n\nThe data we’re using originally come from the unvotes package. In the chunk below we modify the data by joining the various data frames provided in the package to help you get started with the analysis.\n\nunvotes &lt;- un_votes |&gt;\n  inner_join(un_roll_calls, by = \"rcid\") |&gt;\n  inner_join(un_roll_call_issues, by = \"rcid\", relationship =\n  \"many-to-many\")"
  },
  {
    "objectID": "code-alongs/1-1-unvotes/1-1-unvotes.html#packages",
    "href": "code-alongs/1-1-unvotes/1-1-unvotes.html#packages",
    "title": "UN Votes",
    "section": "",
    "text": "We will use the tidyverse and scales packages for data wrangling and visualization, and the DT package for interactive display of tabular output, and the unvotes package for the data.\n\nlibrary(tidyverse)\nlibrary(scales)\nlibrary(DT)\nlibrary(unvotes)"
  },
  {
    "objectID": "code-alongs/1-1-unvotes/1-1-unvotes.html#data",
    "href": "code-alongs/1-1-unvotes/1-1-unvotes.html#data",
    "title": "UN Votes",
    "section": "",
    "text": "The data we’re using originally come from the unvotes package. In the chunk below we modify the data by joining the various data frames provided in the package to help you get started with the analysis.\n\nunvotes &lt;- un_votes |&gt;\n  inner_join(un_roll_calls, by = \"rcid\") |&gt;\n  inner_join(un_roll_call_issues, by = \"rcid\", relationship =\n  \"many-to-many\")"
  },
  {
    "objectID": "exercises/mario-data-visualization.html",
    "href": "exercises/mario-data-visualization.html",
    "title": "Data visualization and transformation",
    "section": "",
    "text": "Important\n\n\n\nPlease reference the webR-intro programming exercise for information and instructions on how to interact with the programming exercise below."
  },
  {
    "objectID": "exercises/mario-data-visualization.html#getting-started",
    "href": "exercises/mario-data-visualization.html#getting-started",
    "title": "Data visualization and transformation",
    "section": "Getting started",
    "text": "Getting started\nPlease run the following code by clicking the green arrow just above the code chunk. When reading in the data, nothing will appear after you click the button. However, clicking the arrow ensures that your data are read in and can be used for the following programming exercise.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nIn this mini analysis we work with the data from the openintro package in R. These data are auction data from Ebay for the game Mario Kart for the Nintendo Wii, collected in October 2009. A key to these data can be found below:\n\n\n\n\n\n\n\nvariable name\ndescription\n\n\nid\nAuction ID assigned by Ebay.\n\n\nduration\nAuction length, in days\n\n\nn_bids\nNumber of bids\n\n\ncond\nGame condition, either new or used\n\n\nstart_pr\nStart price of the auction\n\n\nship_pr\nShipping price\n\n\ntotal_pr\nTotal price, which equals the auction price plus the shipping price\n\n\nship_sp\nShipping speed or method\n\n\nseller_rate\nThe seller’s rating on Ebay. This is the number of positive ratings minus the number of negative ratings for the seller\n\n\nstock_photo\nWhether the auction feature photo was a stock photo or not, either yes or no\n\n\nwheels\nNumber of Wii wheels included in the auction. These are steering wheel attachments to make it seem as though you are actually driving in the game.\n\n\ntitle\nThe title of the auctions\n\n\n\n\nPackages\nWe’ll use tidyverse for majority of the analysis and scales for pretty plot labels later on. ggridges allows us to make ridge plots, and gridExtra allows to arrange plots next to each other. These are ready to use for you in this programming exercise!\n\nlibrary(tidyverse)\nlibrary(scales)\nlibrary(ggridges)\nlibrary(gridExtra)\n\n\n\nGet to know the data\nWe can use glimpse() to get an overview (or “glimpse”) of the data. Write the following code below to accomplish this task.\nWith your output, confirm that:\n\nThere are 143 rows\nThere are 12 variables (columns) in the dataset\n\n\n\n\n\n\n\nWarning\n\n\n\nIf you receive the error Error: object ‘mario’ not found, go back and read in your data above.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nglimpse(mario)\n\nRows: 143\nColumns: 12\n$ id          &lt;dbl&gt; 150377422259, 260483376854, 320432342985, 280405224677, 17…\n$ duration    &lt;int&gt; 3, 7, 3, 3, 1, 3, 1, 1, 3, 7, 1, 1, 1, 1, 7, 7, 3, 3, 1, 7…\n$ n_bids      &lt;int&gt; 20, 13, 16, 18, 20, 19, 13, 15, 29, 8, 15, 15, 13, 16, 6, …\n$ cond        &lt;chr&gt; \"new\", \"used\", \"new\", \"new\", \"new\", \"new\", \"used\", \"new\", …\n$ start_pr    &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.01, 0.99, 0.01, 1.00, 0.99, 19.9…\n$ ship_pr     &lt;dbl&gt; 4.00, 3.99, 3.50, 0.00, 0.00, 4.00, 0.00, 2.99, 4.00, 4.00…\n$ total_pr    &lt;dbl&gt; 51.55, 37.04, 45.50, 44.00, 71.00, 45.00, 37.02, 53.99, 47…\n$ ship_sp     &lt;chr&gt; \"standard\", \"firstClass\", \"firstClass\", \"standard\", \"media…\n$ seller_rate &lt;int&gt; 1580, 365, 998, 7, 820, 270144, 7284, 4858, 27, 201, 4858,…\n$ stock_photo &lt;chr&gt; \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"ye…\n$ wheels      &lt;int&gt; 1, 1, 1, 1, 2, 0, 0, 2, 1, 1, 2, 2, 2, 2, 1, 0, 1, 1, 2, 2…\n$ title       &lt;chr&gt; \"~~ Wii MARIO KART &amp; WHEEL ~ NINTENDO Wii ~ BRAND NEW …"
  },
  {
    "objectID": "exercises/mario-data-visualization.html#variables-of-interest",
    "href": "exercises/mario-data-visualization.html#variables-of-interest",
    "title": "Data visualization and transformation",
    "section": "Variables of interest",
    "text": "Variables of interest\nThe variables we’ll focus on are the following:\n\ntotal_pr: total price of game sold plus shipping in usd\nship_sp: Shipping speed or method\n\nfirstClass\nmedia\nother\nparcel\npriority\nstandard\nups3Day\nupsGround\n\ncond: Binary variable representing the condition of the video game\n\nnew\nused"
  },
  {
    "objectID": "exercises/mario-data-visualization.html#visualizing-categorical-data-with-ggplot2",
    "href": "exercises/mario-data-visualization.html#visualizing-categorical-data-with-ggplot2",
    "title": "Data visualization and transformation",
    "section": "Visualizing categorical data with ggplot2",
    "text": "Visualizing categorical data with ggplot2\nFirst, let’s explore the variable cond. Specifically, let’s investigate how many new games were sold versus how many used games were sold by creating a barplot. Add the following correct geom_xx() to make a barplot of cond below.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nmario |&gt;\n  ggplot(\n    aes(x = cond)) + \n   geom_bar()\n\n\n\n\n\n\n\n\n\n\n\nNext, let’s fill in the bars by the shipping method each game was shipped with (ship_sp).\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nmario |&gt;\n  ggplot(\n    aes(x = cond , fill = ship_sp)) + \n   geom_bar()\n\n\n\n\n\n\n\n\n\n\n\nThe code above uses fill to color the segments of the boxplot by another categorical variable. Below, we change fill to color. What happens? Why?\n\nmario |&gt;\n  ggplot(\n    aes(x = cond , color = ship_sp)) + \n   geom_bar()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nfill defines the color in which the geom is filled in with, while color defines the color in which the geom is outlined. A special exception to this is with scatterplots, where the dots are not treated as shapes to be filled in, and instead are filled in by color."
  },
  {
    "objectID": "exercises/mario-data-visualization.html#count-vs-proportion",
    "href": "exercises/mario-data-visualization.html#count-vs-proportion",
    "title": "Data visualization and transformation",
    "section": "Count vs Proportion",
    "text": "Count vs Proportion\nUp to this point, our bar plot has counted up the number of observations for each condition of game, and has been segmented by the count of shipping method. Perhaps it is easier to compare shipping method across condition of game if we looked at the proportion of shipping method within each game. This can be achieved using position = \"fill\" in the geom_xx() statement. Alter the code below so that it includes position = fill, and comment on the relationship between condition and shipping method.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nmario |&gt;\n  ggplot(\n    aes(x = cond , fill = ship_sp)) + \n   geom_bar(position = \"fill\")\n\n\n\n\n\n\n\n\nIt appears that new Mario games were mainly shipped using upsGround, while used Mario games were shipped using standard shipping."
  },
  {
    "objectID": "exercises/mario-data-visualization.html#relationships-between-numerical-and-categorical-variables",
    "href": "exercises/mario-data-visualization.html#relationships-between-numerical-and-categorical-variables",
    "title": "Data visualization and transformation",
    "section": "Relationships between numerical and categorical variables",
    "text": "Relationships between numerical and categorical variables\nUp to this point, we have been visualizing the relationship between categorical variables. What if we wanted to look at the relationships between different types of variables?\n\nBoxplots\nOne way we can investigate the relationship between different types of variables is to create a boxplot. Below, we are going to create a boxplot using geom_boxplot() between the variables cond and total_pr. What information can we gather from the boxplots?\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nmario |&gt;\n  ggplot(\n    aes(x = cond , y = total_pr)) + \n   geom_boxplot()\n\n\n\n\n\n\n\n\nWe can infer that the median total price for new Mario games is higher for the new condition versus the used condition. There appears to be one outlier in new condition, and four outliers in the used condition. The IQR of the new condition is slightly larger than the used condition.\n\n\n\n\n\nViolin plot\nA violin plot is a lot like a box plot, but also shows us information about the density of the quantitative variable. Below, we have a violin plot that again shows the relationship between the condition (cond) of the Mario game, and the total price (total_pr) of the game (cost + shipping). Describe the relationship below.\n\nmario |&gt;\n  ggplot(\n    aes(x = cond , y = total_pr)) + \n  geom_violin()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nIt appears that there is a higher density of new games at a higher price than used games. Used games appear to have two potential outliers higher than any new game.\n\n\n\n\n\nRidge plots\nRidge plots, similar to violin plots, shows the distribution of a numeric variable across the levels of a categorical variable. In order to make this plot, we will use geom_density_ridges(). Add this geom to the following code below to make the ridge plots. Within this geom, set alpha equal to 0.5.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nmario |&gt;\n  ggplot(\n    aes(x = total_pr , y = cond, fill = cond, color = cond)) + \n   geom_density_ridges(alpha = 0.5)\n\nPicking joint bandwidth of 2.68"
  },
  {
    "objectID": "exercises/mario-data-visualization.html#reflection-questions",
    "href": "exercises/mario-data-visualization.html#reflection-questions",
    "title": "Data visualization and transformation",
    "section": "Reflection questions",
    "text": "Reflection questions\n\nWhy do you believe we are studying the content above?\n\n\n\n\n\nList three topics that you feel very confident about from the content above.\n\n\n\n\n\nList three topics that you feel could use more practice (or you are more curious about) from the content above."
  }
]