[
  {
    "objectID": "code-alongs/1-1-unvotes/1-1-unvotes.html",
    "href": "code-alongs/1-1-unvotes/1-1-unvotes.html",
    "title": "UN Votes",
    "section": "",
    "text": "How do various countries vote in the United Nations General Assembly, how have their voting patterns evolved throughout time, and how similarly or differently do they view certain issues? Answering these questions (at a high level) is the focus of this analysis.\n\n\nWe will use the tidyverse and scales packages for data wrangling and visualization, and the DT package for interactive display of tabular output, and the unvotes package for the data.\n\nlibrary(tidyverse)\nlibrary(scales)\nlibrary(DT)\nlibrary(unvotes)\n\n\n\n\nThe data we’re using originally come from the unvotes package. In the chunk below we modify the data by joining the various data frames provided in the package to help you get started with the analysis.\n\nunvotes &lt;- un_votes |&gt;\n  inner_join(un_roll_calls, by = \"rcid\") |&gt;\n  inner_join(un_roll_call_issues, by = \"rcid\", relationship =\n  \"many-to-many\")"
  },
  {
    "objectID": "code-alongs/1-1-unvotes/1-1-unvotes.html#introduction",
    "href": "code-alongs/1-1-unvotes/1-1-unvotes.html#introduction",
    "title": "UN Votes",
    "section": "",
    "text": "How do various countries vote in the United Nations General Assembly, how have their voting patterns evolved throughout time, and how similarly or differently do they view certain issues? Answering these questions (at a high level) is the focus of this analysis.\n\n\nWe will use the tidyverse and scales packages for data wrangling and visualization, and the DT package for interactive display of tabular output, and the unvotes package for the data.\n\nlibrary(tidyverse)\nlibrary(scales)\nlibrary(DT)\nlibrary(unvotes)\n\n\n\n\nThe data we’re using originally come from the unvotes package. In the chunk below we modify the data by joining the various data frames provided in the package to help you get started with the analysis.\n\nunvotes &lt;- un_votes |&gt;\n  inner_join(un_roll_calls, by = \"rcid\") |&gt;\n  inner_join(un_roll_call_issues, by = \"rcid\", relationship =\n  \"many-to-many\")"
  },
  {
    "objectID": "code-alongs/1-1-unvotes/1-1-unvotes.html#un-voting-patterns",
    "href": "code-alongs/1-1-unvotes/1-1-unvotes.html#un-voting-patterns",
    "title": "UN Votes",
    "section": "UN voting patterns",
    "text": "UN voting patterns\nLet’s create a data visualisation that displays how the voting record of the UK & NI changed over time on a variety of issues, and compares it to two other countries: US and Turkey.\nWe can easily change which countries are being plotted by changing which countries the code above filters for. Note that the country name should be spelled and capitalized exactly the same way as it appears in the data. See the Appendix for a list of the countries in the data.\n\nunvotes |&gt;\n  filter(country %in% c(\"United Kingdom\", \"United States\", \"Turkey\")) |&gt;\n  mutate(year = year(date)) |&gt;\n  group_by(country, year, issue) |&gt;\n  summarize(percent_yes = mean(vote == \"yes\")) |&gt;\n  ggplot(mapping = aes(x = year, y = percent_yes, color = country)) +\n  geom_point(alpha = 0.4) +\n  geom_smooth(method = \"loess\", se = FALSE) +\n  facet_wrap(~issue) +\n  scale_y_continuous(labels = percent) +\n  labs(\n    title = \"Percentage of 'Yes' votes in the UN General Assembly\",\n    subtitle = \"1946 to 2019\",\n    y = \"% Yes\",\n    x = \"Year\",\n    color = \"Country\"\n  )"
  },
  {
    "objectID": "code-alongs/1-1-unvotes/1-1-unvotes.html#references",
    "href": "code-alongs/1-1-unvotes/1-1-unvotes.html#references",
    "title": "UN Votes",
    "section": "References",
    "text": "References\n\nDavid Robinson (2017). unvotes: United Nations General Assembly Voting Data. R package version 0.2.0.\nErik Voeten “Data and Analyses of Voting in the UN General Assembly” Routledge Handbook of International Organization, edited by Bob Reinalda (published May 27, 2013).\nMuch of the analysis has been modeled on the examples presented in the unvotes package vignette."
  },
  {
    "objectID": "code-alongs/1-1-unvotes/1-1-unvotes.html#appendix",
    "href": "code-alongs/1-1-unvotes/1-1-unvotes.html#appendix",
    "title": "UN Votes",
    "section": "Appendix",
    "text": "Appendix\nBelow is a list of countries in the dataset:"
  },
  {
    "objectID": "exercises/meet-programming-exercises.html",
    "href": "exercises/meet-programming-exercises.html",
    "title": "Meet the toolkit: Programming exercises",
    "section": "",
    "text": "Programming exercises are designed to provide an opportunity for you to put what you learn in the videos and readings. These exercises feature interactive code chunks using a tool called WebR, which allow you to write, edit, and run R code without leaving your browser."
  },
  {
    "objectID": "exercises/meet-programming-exercises.html#code-chunks",
    "href": "exercises/meet-programming-exercises.html#code-chunks",
    "title": "Meet the toolkit: Programming exercises",
    "section": "Code chunks",
    "text": "Code chunks\nInteractive code chunks look like the following:\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nMajority of the code chunks in these documents will be interactive, like the one shown above. However, some code chunks will be static and include code that you can’t edit and you are just meant to read and review the output of. These will look like the following:\n\n1 + 1\n\n[1] 2\n\n\nFor example, we’ll use the tidyverse package in every programming exercise. Therefore, each exercise will start with a static code chunk that loads this package.\n\nlibrary(tidyverse)"
  },
  {
    "objectID": "exercises/meet-programming-exercises.html#questions",
    "href": "exercises/meet-programming-exercises.html#questions",
    "title": "Meet the toolkit: Programming exercises",
    "section": "Questions",
    "text": "Questions\nMany of the questions in the programming exercises require you to actively do something – edit existing code, write code from scratch, write a narrative, etc. Code goes in interactive code chunks that have a Run Code button, narrative goes in text boxes.\nHowever, some questions come with complete code that you don’t need to edit, but still need to run to view the output. These questions will also often invite you to make modifications to explore alternatives.\n\n\n\n\n\n\nSaving Your Work\n\n\n\nYour work does not automatically save.\nFor most browsers, the most efficient way to save your work is by using the Print feature. This may be useful if you want to come back and reference your work after you’ve completed it.\n\nRight click anywhere on this html page.\nSelect Print….\nUnder Destination drop-down menu, select Save as PDF.\nClick on Save and navigate to where you wish to save your work."
  },
  {
    "objectID": "exercises/meet-programming-exercises.html#calculator",
    "href": "exercises/meet-programming-exercises.html#calculator",
    "title": "Meet the toolkit: Programming exercises",
    "section": "Calculator",
    "text": "Calculator\nFirst, let’s get started by using R as a calculator.\nIn the interactive code chunk below, perform the following calculations by typing the code and then clicking Run Code.\n\nRun code: Run the code below as is.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nModify code: Modify the code below to multiply 3 by 6 instead of 3 by 5.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nWrite code: Use the code chunk below to calculate 10 divided by 2 (10 / 2):\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\n2 + 2 \n\n[1] 4\n\n3 * 6\n\n[1] 18\n\n10 / 2\n\n[1] 5"
  },
  {
    "objectID": "exercises/meet-programming-exercises.html#functions",
    "href": "exercises/meet-programming-exercises.html#functions",
    "title": "Meet the toolkit: Programming exercises",
    "section": "Functions",
    "text": "Functions\nR is a functional language. Functions act as the name of algorithmic details that are used to accomplish a specific task. For example, if I wanted to round the value 3.23, I could accomplish this with the function round() in R. The number 3.23 is an argument to the function round(). An argument is an input to a function. A value is produced as a result.\nex.\n\nround(3.22)\n\n[1] 3\n\n\nOften times, functions can take on multiple arguments. Previously, we saw round(3.225) produce the value 3. This is because round defaults to producing a value to the nearest whole number. However, we can override the default inputing a second argument. You are not expected to memorize all arguments of every function you learn during this course. If you have R locally installed, you can run a ? in front of the function name in your console to pull up a help file that will define the arguments of a function for you. These help files can also be found on line. For example, here is the help file for round here\nFrom the documentation, you can see the second argument of the function round is digits.\nYour Turn Change the 0 to another number, and take note on how this changes the corresponding output when you click Run Code.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nround(3.22, digits = 1)\n\n[1] 3.2\n\n\n\n\n\nAs you may notice, the first argument and second argument are separated by a ,. This is consistent across all functions in R.\n\n\n\n\n\n\nTip\n\n\n\nIf you provide the arguments in the exact same order as they are defined in the help file, you do not have to include the name of the argument\n\n\n\nround(3.225, 1)\n\n[1] 3.2"
  },
  {
    "objectID": "exercises/meet-programming-exercises.html#exploring-mtcars",
    "href": "exercises/meet-programming-exercises.html#exploring-mtcars",
    "title": "Meet the toolkit: Programming exercises",
    "section": "Exploring mtcars",
    "text": "Exploring mtcars\nFor the remainder of this activity, we are going to practice using functions on the mtcars data set. These data were extracted from the 1974 Motor Trend US magazine, and comprises fuel consumption and 10 aspects of automobile design and performance for 32 automobiles (1973–74 models).\nDemo Run the following code to see the first six lines of data below\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nWhat is the name of the function used in the above code? What is the input?\nAnswer: \n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nThe function is named head\nThe argument is the dataset mtcars\n\n\n\nWe can also get a better sense of the data we are working with by using the glimpse() function. This allows us to see how many rows and columns we have in our data set, the type of data we are working with, and the data inputs. For now, we just want to practice writing the function to initially explore these data.\nYour Turn Use the glimpse() function on the mtcars data set below.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nHow many rows are in the mtcars data set? How many columns?\nAnswer: \n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nglimpse(mtcars)\n\nRows: 32\nColumns: 11\n$ mpg  &lt;dbl&gt; 21.0, 21.0, 22.8, 21.4, 18.7, 18.1, 14.3, 24.4, 22.8, 19.2, 17.8,…\n$ cyl  &lt;dbl&gt; 6, 6, 4, 6, 8, 6, 8, 4, 4, 6, 6, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4, 8,…\n$ disp &lt;dbl&gt; 160.0, 160.0, 108.0, 258.0, 360.0, 225.0, 360.0, 146.7, 140.8, 16…\n$ hp   &lt;dbl&gt; 110, 110, 93, 110, 175, 105, 245, 62, 95, 123, 123, 180, 180, 180…\n$ drat &lt;dbl&gt; 3.90, 3.90, 3.85, 3.08, 3.15, 2.76, 3.21, 3.69, 3.92, 3.92, 3.92,…\n$ wt   &lt;dbl&gt; 2.620, 2.875, 2.320, 3.215, 3.440, 3.460, 3.570, 3.190, 3.150, 3.…\n$ qsec &lt;dbl&gt; 16.46, 17.02, 18.61, 19.44, 17.02, 20.22, 15.84, 20.00, 22.90, 18…\n$ vs   &lt;dbl&gt; 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0,…\n$ am   &lt;dbl&gt; 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0,…\n$ gear &lt;dbl&gt; 4, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3,…\n$ carb &lt;dbl&gt; 4, 4, 1, 1, 2, 1, 4, 2, 2, 4, 4, 3, 3, 3, 4, 4, 4, 1, 2, 1, 1, 2,…\n\n\nThere are 32 rows in the mtcars data set\nThere are 11 columns in the mtcars data set\n\n\n\nYour Turn: There are many other functions we can use on data to explore it prior to making data visualizations. You are encouraged to explore the help files of the following:\n\ntail()\nslice()\n\nAfter doing so, try to answer answer the following questions!\nUse tail() to produce the last six lines of the mtcars data set.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\ntail(mtcars)\n\n                mpg cyl  disp  hp drat    wt qsec vs am gear carb\nPorsche 914-2  26.0   4 120.3  91 4.43 2.140 16.7  0  1    5    2\nLotus Europa   30.4   4  95.1 113 3.77 1.513 16.9  1  1    5    2\nFord Pantera L 15.8   8 351.0 264 4.22 3.170 14.5  0  1    5    4\nFerrari Dino   19.7   6 145.0 175 3.62 2.770 15.5  0  1    5    6\nMaserati Bora  15.0   8 301.0 335 3.54 3.570 14.6  0  1    5    8\nVolvo 142E     21.4   4 121.0 109 4.11 2.780 18.6  1  1    4    2\n\n\n\n\n\nNow, use slice to produce the first three lines of the mtcars data set.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nslice(mtcars, 1:3)\n\n               mpg cyl disp  hp drat    wt  qsec vs am gear carb\nMazda RX4     21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag 21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710    22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\n\n\n\n\n\nIn the subsequent lessons, we are going to learn how to manipulate, work with, and plot data using a variety of functions in R."
  },
  {
    "objectID": "exercises/mario-data-visualization.html",
    "href": "exercises/mario-data-visualization.html",
    "title": "Mario games + data visualization",
    "section": "",
    "text": "Programming Activity Guide\n\n\n\nPlease reference the webR-intro activity for information on the different types of code chunks, questions, and how to save your work to reference later."
  },
  {
    "objectID": "exercises/mario-data-visualization.html#getting-started",
    "href": "exercises/mario-data-visualization.html#getting-started",
    "title": "Mario games + data visualization",
    "section": "Getting started",
    "text": "Getting started\nPlease run the following code by clicking the green arrow just above the code chunk. When reading in the data, nothing will appear after you click the button. However, clicking the arrow ensures that your data are read in and can be used for the following activity.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nIn this mini analysis we work with the data from the openintro package in R. These data are auction data from Ebay for the game Mario Kart for the Nintendo Wii, collected in October 2009. A key to these data can be found below:\n\n\n\n\n\n\n\nvariable name\ndescription\n\n\nid\nAuction ID assigned by Ebay.\n\n\nduration\nAuction length, in days\n\n\nn_bids\nNumber of bids\n\n\ncond\nGame condition, either new or used\n\n\nstart_pr\nStart price of the auction\n\n\nship_pr\nShipping price\n\n\ntotal_pr\nTotal price, which equals the auction price plus the shipping price\n\n\nship_sp\nShipping speed or method\n\n\nseller_rate\nThe seller’s rating on Ebay. This is the number of positive ratings minus the number of negative ratings for the seller\n\n\nstock_photo\nWhether the auction feature photo was a stock photo or not, either yes or no\n\n\nwheels\nNumber of Wii wheels included in the auction. These are steering wheel attachments to make it seem as though you are actually driving in the game.\n\n\ntitle\nThe title of the auctions\n\n\n\n\nPackages\nWe’ll use: tidyverse for majority of the analysis and scales for pretty plot labels later on. ggridges allows us to make ridge plots, and gridExtra allows to arrange plots next to eachother. These are ready to use for you in this activity!\n\nlibrary(tidyverse)\nlibrary(scales)\nlibrary(ggridges)\nlibrary(gridExtra)\n\n\n\nGet to know the data\nYour Turn: We can use the glimpse function to get an overview (or “glimpse”) of the data. Write the following code below to accomplish this task.\nWith your output, confirm that:\n\nThere are 143 rows\nThere are 12 variables (columns) in the dataset\n\n\n\n\n\n\n\nWarning\n\n\n\nIf you receive the error Error: object ‘mario’ not found, go back and read in your data above.\n\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nglimpse(mario)\n\nRows: 143\nColumns: 12\n$ id          &lt;dbl&gt; 150377422259, 260483376854, 320432342985, 280405224677, 17…\n$ duration    &lt;int&gt; 3, 7, 3, 3, 1, 3, 1, 1, 3, 7, 1, 1, 1, 1, 7, 7, 3, 3, 1, 7…\n$ n_bids      &lt;int&gt; 20, 13, 16, 18, 20, 19, 13, 15, 29, 8, 15, 15, 13, 16, 6, …\n$ cond        &lt;chr&gt; \"new\", \"used\", \"new\", \"new\", \"new\", \"new\", \"used\", \"new\", …\n$ start_pr    &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.01, 0.99, 0.01, 1.00, 0.99, 19.9…\n$ ship_pr     &lt;dbl&gt; 4.00, 3.99, 3.50, 0.00, 0.00, 4.00, 0.00, 2.99, 4.00, 4.00…\n$ total_pr    &lt;dbl&gt; 51.55, 37.04, 45.50, 44.00, 71.00, 45.00, 37.02, 53.99, 47…\n$ ship_sp     &lt;chr&gt; \"standard\", \"firstClass\", \"firstClass\", \"standard\", \"media…\n$ seller_rate &lt;int&gt; 1580, 365, 998, 7, 820, 270144, 7284, 4858, 27, 201, 4858,…\n$ stock_photo &lt;chr&gt; \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"ye…\n$ wheels      &lt;int&gt; 1, 1, 1, 1, 2, 0, 0, 2, 1, 1, 2, 2, 2, 2, 1, 0, 1, 1, 2, 2…\n$ title       &lt;chr&gt; \"~~ Wii MARIO KART &amp; WHEEL ~ NINTENDO Wii ~ BRAND NEW …"
  },
  {
    "objectID": "exercises/mario-data-visualization.html#variables-of-interest-update",
    "href": "exercises/mario-data-visualization.html#variables-of-interest-update",
    "title": "Mario games + data visualization",
    "section": "Variables of Interest (update)",
    "text": "Variables of Interest (update)\nThe variables we’ll focus on are the following:\n\nn_bids: number of bids throughout the auction\ntotal_pr: total price of game sold plus shipping in usd\nseller_rate: The seller’s rating on Ebay\ncond: Binary variable representing the condition of the video game"
  },
  {
    "objectID": "exercises/mario-data-visualization.html#visualizing-categorical-data-with-ggplot2",
    "href": "exercises/mario-data-visualization.html#visualizing-categorical-data-with-ggplot2",
    "title": "Mario games + data visualization",
    "section": "Visualizing categorical data with ggplot2",
    "text": "Visualizing categorical data with ggplot2\nYour Turn: First, let’s explore the variable cond. Specifically, let’s investigate how many new games were sold versus how many used games were sold by creating a barplot. Add the following correct geom to make a barplot of cond.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nmario |&gt;\n  ggplot(\n    aes(x = cond)) + \n   geom_bar()\n\n\n\n\n\n\n\n\n\n\n\nNext, let’s fill in the bars by the shipping method each game was shipped with (ship_sp).\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nExpected Result\n\n\n\n\n\n\nmario |&gt;\n  ggplot(\n    aes(x = cond , fill = ship_sp)) + \n   geom_bar()\n\n\n\n\n\n\n\n\n\n\n\nDemo: The code above uses fill to color the segments of the boxplot by another categorical variable. Below, we change fill to color. What happens? Why?\n\nmario |&gt;\n  ggplot(\n    aes(x = cond , color = ship_sp)) + \n   geom_bar()\n\n\n\n\n\n\n\n\nAnswer: \n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nfill defines the color in which the geom is filled in with, while color defines the color in which the geom is outlined. A special exception to this is with scatterplots, where the dots are not treated as shapes to be filled in, and instead are filled in by color."
  },
  {
    "objectID": "exercises/mario-data-visualization.html#count-vs-proportion",
    "href": "exercises/mario-data-visualization.html#count-vs-proportion",
    "title": "Mario games + data visualization",
    "section": "Count vs Proportion",
    "text": "Count vs Proportion\nYour Turn: Up to this point, our bar plot has counted up the number of observations for each condition of game, and has been segmented by the count of shipping method. Perhaps it is easier to compare shipping method across condition of game if we looked at the proportion of shipping method within each game. This can be achieved using position = \"fill\" in the geom statement. Alter the code below so that it includes position = fill, and comment on the relationship between condition and shipping method.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nAnswer: \n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nmario |&gt;\n  ggplot(\n    aes(x = cond , fill = ship_sp)) + \n   geom_bar(position = \"fill\")\n\n\n\n\n\n\n\n\nIt appears that new Mario games were mainly shipped using upsGround, while used Mario games were shipped using standard shipping."
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#nyc-flights",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#nyc-flights",
    "title": "Grammar of data transformation",
    "section": "NYC Flights",
    "text": "NYC Flights\n\nTo demonstrate data transformation we will use flights, a tibble in the nycflights13 R package.\nThe data set includes characteristics of all flights departing from New York City (JFK, LGA, EWR) in 2013.\n\n\nlibrary(tidyverse)\nlibrary(nycflights13)"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#flights-dimensions",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#flights-dimensions",
    "title": "Grammar of data transformation",
    "section": "flights – dimensions",
    "text": "flights – dimensions\n\nNumber of rows:\n\n\nnrow(flights)\n\n[1] 336776\n\n\n\n\nNumber of columns:\n\n\nncol(flights)\n\n[1] 19"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#flights-first-look-with-glimpse",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#flights-first-look-with-glimpse",
    "title": "Grammar of data transformation",
    "section": "flights – first look with glimpse()",
    "text": "flights – first look with glimpse()\n\nglimpse(flights)\n\nRows: 336,776\nColumns: 19\n$ year           &lt;int&gt; 2013, 2013, 2013, 2013, 2013, 2013,…\n$ month          &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ day            &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ dep_time       &lt;int&gt; 517, 533, 542, 544, 554, 554, 555, …\n$ sched_dep_time &lt;int&gt; 515, 529, 540, 545, 600, 558, 600, …\n$ dep_delay      &lt;dbl&gt; 2, 4, 2, -1, -6, -4, -5, -3, -3, -2…\n$ arr_time       &lt;int&gt; 830, 850, 923, 1004, 812, 740, 913,…\n$ sched_arr_time &lt;int&gt; 819, 830, 850, 1022, 837, 728, 854,…\n$ arr_delay      &lt;dbl&gt; 11, 20, 33, -18, -25, 12, 19, -14, …\n$ carrier        &lt;chr&gt; \"UA\", \"UA\", \"AA\", \"B6\", \"DL\", \"UA\",…\n$ flight         &lt;int&gt; 1545, 1714, 1141, 725, 461, 1696, 5…\n$ tailnum        &lt;chr&gt; \"N14228\", \"N24211\", \"N619AA\", \"N804…\n$ origin         &lt;chr&gt; \"EWR\", \"LGA\", \"JFK\", \"JFK\", \"LGA\", …\n$ dest           &lt;chr&gt; \"IAH\", \"IAH\", \"MIA\", \"BQN\", \"ATL\", …\n$ air_time       &lt;dbl&gt; 227, 227, 160, 183, 116, 150, 158, …\n$ distance       &lt;dbl&gt; 1400, 1416, 1089, 1576, 762, 719, 1…\n$ hour           &lt;dbl&gt; 5, 5, 5, 5, 6, 5, 6, 6, 6, 6, 6, 6,…\n$ minute         &lt;dbl&gt; 15, 29, 40, 45, 0, 58, 0, 0, 0, 0, …\n$ time_hour      &lt;dttm&gt; 2013-01-01 05:00:00, 2013-01-01 05…"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#flights-first-look-with-names",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#flights-first-look-with-names",
    "title": "Grammar of data transformation",
    "section": "flights – first look with names()",
    "text": "flights – first look with names()\n\nnames(flights)\n\n [1] \"year\"           \"month\"          \"day\"           \n [4] \"dep_time\"       \"sched_dep_time\" \"dep_delay\"     \n [7] \"arr_time\"       \"sched_arr_time\" \"arr_delay\"     \n[10] \"carrier\"        \"flight\"         \"tailnum\"       \n[13] \"origin\"         \"dest\"           \"air_time\"      \n[16] \"distance\"       \"hour\"           \"minute\"        \n[19] \"time_hour\""
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#flights-first-look-with-head",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#flights-first-look-with-head",
    "title": "Grammar of data transformation",
    "section": "flights – first look with head()",
    "text": "flights – first look with head()\n\nhead(flights)\n\n# A tibble: 6 × 19\n   year month   day dep_time sched_dep_time dep_delay\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n1  2013     1     1      517            515         2\n2  2013     1     1      533            529         4\n3  2013     1     1      542            540         2\n4  2013     1     1      544            545        -1\n5  2013     1     1      554            600        -6\n6  2013     1     1      554            558        -4\n# ℹ 13 more variables: arr_time &lt;int&gt;,\n#   sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;,\n#   air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;,\n#   minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#tibble-vs.-data-frame",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#tibble-vs.-data-frame",
    "title": "Grammar of data transformation",
    "section": "tibble vs. data frame",
    "text": "tibble vs. data frame\n\n\ntibble: an opinionated version of the R data frame\nAll tibbles are data frames, but not all data frames are tibbles!\nTwo main differences between a tibble and a data frame:\n\nPrinting\nStricter subsetting"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#printing---tibbles",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#printing---tibbles",
    "title": "Grammar of data transformation",
    "section": "Printing - tibbles",
    "text": "Printing - tibbles\nDisplay first 10 rows and all of the columns that fit on the screen will display, along with the type of each column.\n\nflights\n\n# A tibble: 336,776 × 19\n    year month   day dep_time sched_dep_time dep_delay\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n 1  2013     1     1      517            515         2\n 2  2013     1     1      533            529         4\n 3  2013     1     1      542            540         2\n 4  2013     1     1      544            545        -1\n 5  2013     1     1      554            600        -6\n 6  2013     1     1      554            558        -4\n 7  2013     1     1      555            600        -5\n 8  2013     1     1      557            600        -3\n 9  2013     1     1      557            600        -3\n10  2013     1     1      558            600        -2\n# ℹ 336,766 more rows\n# ℹ 13 more variables: arr_time &lt;int&gt;,\n#   sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;,\n#   air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;,\n#   minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#printing---data.frames",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#printing---data.frames",
    "title": "Grammar of data transformation",
    "section": "Printing - data.frames",
    "text": "Printing - data.frames\n(Attempt to) display all of the data, or die (crash) trying (if the dataset is too large)!\n\ncars\n\n   speed dist\n1      4    2\n2      4   10\n3      7    4\n4      7   22\n5      8   16\n6      9   10\n7     10   18\n8     10   26\n9     10   34\n10    11   17\n11    11   28\n12    12   14\n13    12   20\n14    12   24\n15    12   28\n16    13   26\n17    13   34\n18    13   34\n19    13   46\n20    14   26\n21    14   36\n22    14   60\n23    14   80\n24    15   20\n25    15   26\n26    15   54\n27    16   32\n28    16   40\n29    17   32\n30    17   40\n31    17   50\n32    18   42\n33    18   56\n34    18   76\n35    18   84\n36    19   36\n37    19   46\n38    19   68\n39    20   32\n40    20   48\n41    20   52\n42    20   56\n43    20   64\n44    22   66\n45    23   54\n46    24   70\n47    24   92\n48    24   93\n49    24  120\n50    25   85"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#stricter-subsetting-tibbles",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#stricter-subsetting-tibbles",
    "title": "Grammar of data transformation",
    "section": "Stricter subsetting – tibbles",
    "text": "Stricter subsetting – tibbles\nWarning + NULL if variable not found.\n\nflights$apple\n\nWarning: Unknown or uninitialised column: `apple`.\n\n\nNULL"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#stricter-subsetting-data.frames",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#stricter-subsetting-data.frames",
    "title": "Grammar of data transformation",
    "section": "Stricter subsetting – data.frames",
    "text": "Stricter subsetting – data.frames\nOnly NULL if variable not found.\n\ncars$apple\n\nNULL"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#dplyr-in-tidyverse",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#dplyr-in-tidyverse",
    "title": "Grammar of data transformation",
    "section": "dplyr \\(\\in\\) tidyverse",
    "text": "dplyr \\(\\in\\) tidyverse\n\n\n\n\ndplyr is tidyverse’s primary package for data transformation\nPackage website: dplyr.tidyverse.org"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#row-operations",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#row-operations",
    "title": "Grammar of data transformation",
    "section": "Row operations",
    "text": "Row operations\n\n\nslice(): chooses rows based on location\nfilter(): chooses rows based on column values\narrange(): changes the order of the rows\nsample_n(): take a random subset of the rows"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#slice",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#slice",
    "title": "Grammar of data transformation",
    "section": "slice()",
    "text": "slice()\nDisplay the first five rows of flights:\n\n1flights |&gt;\n2  slice(1:5)\n\n\n1\n\nTake the flights data frame, and then,\n\n2\n\nSlice its first five rows\n\n\n\n\n# A tibble: 5 × 19\n   year month   day dep_time sched_dep_time dep_delay\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n1  2013     1     1      517            515         2\n2  2013     1     1      533            529         4\n3  2013     1     1      542            540         2\n4  2013     1     1      544            545        -1\n5  2013     1     1      554            600        -6\n# ℹ 13 more variables: arr_time &lt;int&gt;,\n#   sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;,\n#   air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;,\n#   minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#filter",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#filter",
    "title": "Grammar of data transformation",
    "section": "filter()",
    "text": "filter()\nFilter for flights to RDU in flights:\n\n1flights |&gt;\n2  filter(dest == \"RDU\")\n\n\n1\n\nTake the flights data frame, and then,\n\n2\n\nFilter for rows where dest is equal to RDU\n\n\n\n\n# A tibble: 8,163 × 19\n    year month   day dep_time sched_dep_time dep_delay\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n 1  2013     1     1      800            810       -10\n 2  2013     1     1      832            840        -8\n 3  2013     1     1      851            851         0\n 4  2013     1     1      917            920        -3\n 5  2013     1     1     1024           1030        -6\n 6  2013     1     1     1127           1129        -2\n 7  2013     1     1     1157           1205        -8\n 8  2013     1     1     1240           1235         5\n 9  2013     1     1     1317           1325        -8\n10  2013     1     1     1449           1450        -1\n# ℹ 8,153 more rows\n# ℹ 13 more variables: arr_time &lt;int&gt;,\n#   sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;,\n#   air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;,\n#   minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#the-pipe-operator",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#the-pipe-operator",
    "title": "Grammar of data transformation",
    "section": "The pipe operator",
    "text": "The pipe operator\n\n\nThe pipe, |&gt;, is an operator (a tool) for passing information from one process to another.\nUse |&gt; mainly in data pipelines to pass the output of the previous line of code as the first input of the next line of code.\nWhen reading code “in English”, say “and then” whenever you see a pipe."
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#delayed-flights-to-rdu",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#delayed-flights-to-rdu",
    "title": "Grammar of data transformation",
    "section": "Delayed flights to RDU",
    "text": "Delayed flights to RDU\n\nWhich airline is the most delayed, on average, arriving in RDU from a New York City airport?\n\n\nGoal:\n\n\n# A tibble: 5 × 2\n  carrier mean_arr_delay\n  &lt;chr&gt;            &lt;dbl&gt;\n1 UA               56   \n2 B6               13.3 \n3 EV               12.2 \n4 9E                9.67\n5 MQ                8.82"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#the-pipe-in-action",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#the-pipe-in-action",
    "title": "Grammar of data transformation",
    "section": "The pipe, in action",
    "text": "The pipe, in action\n\n1flights\n\n\n1\n\nTake the flights data frame\n\n\n\n\n# A tibble: 336,776 × 19\n    year month   day dep_time sched_dep_time dep_delay\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n 1  2013     1     1      517            515         2\n 2  2013     1     1      533            529         4\n 3  2013     1     1      542            540         2\n 4  2013     1     1      544            545        -1\n 5  2013     1     1      554            600        -6\n 6  2013     1     1      554            558        -4\n 7  2013     1     1      555            600        -5\n 8  2013     1     1      557            600        -3\n 9  2013     1     1      557            600        -3\n10  2013     1     1      558            600        -2\n# ℹ 336,766 more rows\n# ℹ 13 more variables: arr_time &lt;int&gt;,\n#   sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;,\n#   air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;,\n#   minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#the-pipe-in-action-1",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#the-pipe-in-action-1",
    "title": "Grammar of data transformation",
    "section": "The pipe, in action",
    "text": "The pipe, in action\n\n1flights |&gt;\n2  filter(dest == \"RDU\")\n\n\n1\n\nTake the flights data frame,\n\n2\n\nand then filter for flights going to RDU\n\n\n\n\n# A tibble: 8,163 × 19\n    year month   day dep_time sched_dep_time dep_delay\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n 1  2013     1     1      800            810       -10\n 2  2013     1     1      832            840        -8\n 3  2013     1     1      851            851         0\n 4  2013     1     1      917            920        -3\n 5  2013     1     1     1024           1030        -6\n 6  2013     1     1     1127           1129        -2\n 7  2013     1     1     1157           1205        -8\n 8  2013     1     1     1240           1235         5\n 9  2013     1     1     1317           1325        -8\n10  2013     1     1     1449           1450        -1\n# ℹ 8,153 more rows\n# ℹ 13 more variables: arr_time &lt;int&gt;,\n#   sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;,\n#   air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;,\n#   minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#the-pipe-in-action-2",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#the-pipe-in-action-2",
    "title": "Grammar of data transformation",
    "section": "The pipe, in action",
    "text": "The pipe, in action\n\n1flights |&gt;\n2  filter(dest == \"RDU\") |&gt;\n3  group_by(carrier)\n\n\n1\n\nTake the flights data frame,\n\n2\n\nand then filter for flights going to RDU,\n\n3\n\nand then group by carrier\n\n\n\n\n# A tibble: 8,163 × 19\n# Groups:   carrier [5]\n    year month   day dep_time sched_dep_time dep_delay\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n 1  2013     1     1      800            810       -10\n 2  2013     1     1      832            840        -8\n 3  2013     1     1      851            851         0\n 4  2013     1     1      917            920        -3\n 5  2013     1     1     1024           1030        -6\n 6  2013     1     1     1127           1129        -2\n 7  2013     1     1     1157           1205        -8\n 8  2013     1     1     1240           1235         5\n 9  2013     1     1     1317           1325        -8\n10  2013     1     1     1449           1450        -1\n# ℹ 8,153 more rows\n# ℹ 13 more variables: arr_time &lt;int&gt;,\n#   sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;,\n#   air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;,\n#   minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#the-pipe-in-action-3",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#the-pipe-in-action-3",
    "title": "Grammar of data transformation",
    "section": "The pipe, in action",
    "text": "The pipe, in action\n\n1flights |&gt;\n2  filter(dest == \"RDU\") |&gt;\n3  group_by(carrier) |&gt;\n4  summarize(mean_arr_delay = mean(arr_delay, na.rm = TRUE))\n\n\n1\n\nTake the flights data frame,\n\n2\n\nand then filter for flights going to RDU,\n\n3\n\nand then group by carrier,\n\n4\n\nand then calculate the mean arrival delay for each carrier\n\n\n\n\n# A tibble: 5 × 2\n  carrier mean_arr_delay\n  &lt;chr&gt;            &lt;dbl&gt;\n1 9E                9.67\n2 B6               13.3 \n3 EV               12.2 \n4 MQ                8.82\n5 UA               56"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#the-pipe-in-action-4",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#the-pipe-in-action-4",
    "title": "Grammar of data transformation",
    "section": "The pipe, in action",
    "text": "The pipe, in action\n\n1flights |&gt;\n2  filter(dest == \"RDU\") |&gt;\n3  group_by(carrier) |&gt;\n4  summarize(mean_arr_delay = mean(arr_delay, na.rm = TRUE)) |&gt;\n5  arrange(desc(mean_arr_delay))\n\n\n1\n\nTake the flights data frame,\n\n2\n\nand then filter for flights going to RDU,\n\n3\n\nand then group by carrier,\n\n4\n\nand then calculate the mean arrival delay for each carrier,\n\n5\n\nand then arrange in descending order of mean arrival delay.\n\n\n\n\n# A tibble: 5 × 2\n  carrier mean_arr_delay\n  &lt;chr&gt;            &lt;dbl&gt;\n1 UA               56   \n2 B6               13.3 \n3 EV               12.2 \n4 9E                9.67\n5 MQ                8.82"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#column-operations",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#column-operations",
    "title": "Grammar of data transformation",
    "section": "Column operations",
    "text": "Column operations\n\n\nselect(): changes whether or not a column is included\nrename(): changes the names of columns\nmutate(): changes the values of columns or creates new columns"
  },
  {
    "objectID": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#groups-of-rows",
    "href": "slides/3-1-grammar-of-data-transformation/3-1-grammar-of-data-transformation.html#groups-of-rows",
    "title": "Grammar of data transformation",
    "section": "Groups of rows",
    "text": "Groups of rows\n\n\ngroup_by(): perform calculations separately for each value of a variable\nsummarize(): collapses a group into a single row\ncount(): count unique values of one or more variables"
  },
  {
    "objectID": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#packages",
    "href": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#packages",
    "title": "Visualizing and summarizing numerical data",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse) # for data wrangling and visualization\nlibrary(openintro) # for data\nlibrary(scales)    # for pretty axis labels"
  },
  {
    "objectID": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#data-lending-club",
    "href": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#data-lending-club",
    "title": "Visualizing and summarizing numerical data",
    "section": "Data: Lending Club",
    "text": "Data: Lending Club\n\nloans &lt;- loans_full_schema |&gt;\n  select(\n    loan_amount, interest_rate, term, grade, \n    state, annual_income, homeownership, debt_to_income\n  )\nglimpse(loans)\n\nRows: 10,000\nColumns: 8\n$ loan_amount    &lt;int&gt; 28000, 5000, 2000, 21600, 23000, 50…\n$ interest_rate  &lt;dbl&gt; 14.07, 12.61, 17.09, 6.72, 14.07, 6…\n$ term           &lt;dbl&gt; 60, 36, 36, 36, 36, 36, 60, 60, 36,…\n$ grade          &lt;fct&gt; C, C, D, A, C, A, C, B, C, A, C, B,…\n$ state          &lt;fct&gt; NJ, HI, WI, PA, CA, KY, MI, AZ, NV,…\n$ annual_income  &lt;dbl&gt; 90000, 40000, 40000, 30000, 35000, …\n$ homeownership  &lt;fct&gt; MORTGAGE, RENT, RENT, RENT, RENT, O…\n$ debt_to_income &lt;dbl&gt; 18.01, 5.04, 21.15, 10.16, 57.96, 6…"
  },
  {
    "objectID": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#loan-amount",
    "href": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#loan-amount",
    "title": "Visualizing and summarizing numerical data",
    "section": "Loan amount",
    "text": "Loan amount"
  },
  {
    "objectID": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#characteristics-of-a-distribution",
    "href": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#characteristics-of-a-distribution",
    "title": "Visualizing and summarizing numerical data",
    "section": "Characteristics of a distribution",
    "text": "Characteristics of a distribution\n\n\nShape: Modality and skewness\nCenter: Generally mean or median depending on whether the distribution is symmetric or skewed, respectively\nSpread: Generally standard deviation or inter-quartile range (IQR) depending on whether the distribution is symmetric or skewed, respectively\nOutliers: Whether there are any, where they are located, and if feasible to identify, which observations"
  },
  {
    "objectID": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#shape",
    "href": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#shape",
    "title": "Visualizing and summarizing numerical data",
    "section": "Shape",
    "text": "Shape\nThe distribution of loan amounts in this sample is unimodal and right-skewed distribution."
  },
  {
    "objectID": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#center",
    "href": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#center",
    "title": "Visualizing and summarizing numerical data",
    "section": "Center",
    "text": "Center\nMedian loan amount in this sample is $14,500."
  },
  {
    "objectID": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#spread",
    "href": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#spread",
    "title": "Visualizing and summarizing numerical data",
    "section": "Spread",
    "text": "Spread\nIn this sample, the middle 50% of the loan amounts are between $8,000 and $24,000."
  },
  {
    "objectID": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#outliers",
    "href": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#outliers",
    "title": "Visualizing and summarizing numerical data",
    "section": "Outliers",
    "text": "Outliers\nThere are no clear outliers in the loan amounts in this sample."
  },
  {
    "objectID": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#histogram",
    "href": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#histogram",
    "title": "Visualizing and summarizing numerical data",
    "section": "Histogram",
    "text": "Histogram\n\nHelpful for identifying shape (modality and skewness)\nRequires a careful selection of binwidth\n\n\nggplot(loans, aes(x = loan_amount)) +\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with\n`binwidth`."
  },
  {
    "objectID": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#histograms-and-binwidth",
    "href": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#histograms-and-binwidth",
    "title": "Visualizing and summarizing numerical data",
    "section": "Histograms and binwidth",
    "text": "Histograms and binwidth\n\np_loans &lt;- ggplot(loans, aes(x = loan_amount))\n\n\n\n\n\np_loans +\n  geom_histogram(\n    binwidth = 1000\n  )\n\n\n\n\n\n\n\n\n\n\np_loans +\n  geom_histogram(\n    binwidth = 5000\n  )\n\n\n\n\n\n\n\n\n\n\np_loans +\n  geom_histogram(\n    binwidth = 20000\n  )"
  },
  {
    "objectID": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#histogram-customization",
    "href": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#histogram-customization",
    "title": "Visualizing and summarizing numerical data",
    "section": "Histogram customization",
    "text": "Histogram customization\n\n\nggplot(loans, aes(x = loan_amount)) +\n  geom_histogram(binwidth = 5000) +\n  labs(\n    x = \"Loan amount ($)\",\n    y = \"Frequency\",\n    title = \"Amounts of Lending Club loans\"\n  ) +\n  scale_x_continuous(\n    labels = label_dollar()\n  ) +\n  scale_y_continuous(\n    labels = label_number(big.mark = \",\")\n  )"
  },
  {
    "objectID": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#density-plot",
    "href": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#density-plot",
    "title": "Visualizing and summarizing numerical data",
    "section": "Density plot",
    "text": "Density plot\n\nHelpful for identifying shape (modality and skewness)\nSmoothness can be adjusted\n\n\n\n\np_loans+\n  geom_density()\n\n\n\n\n\n\n\n\n\n\np_loans +\n  geom_density(adjust = 2)"
  },
  {
    "objectID": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#box-plot",
    "href": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#box-plot",
    "title": "Visualizing and summarizing numerical data",
    "section": "Box plot",
    "text": "Box plot\n\nHelpful for identifying min, max, 25th percentile, median (50th percentile), 75th percentile\nHelpful for identifying shape (skewness, but not modality)\nMakes outliers very clear (according to a strict definition of an outlier)\n\n\np_loans +\n  geom_boxplot()"
  },
  {
    "objectID": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#box-plot-and-outliers",
    "href": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#box-plot-and-outliers",
    "title": "Visualizing and summarizing numerical data",
    "section": "Box plot and outliers",
    "text": "Box plot and outliers\n\nggplot(loans, aes(x = interest_rate)) +\n  geom_boxplot()"
  },
  {
    "objectID": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#box-plot-customization",
    "href": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#box-plot-customization",
    "title": "Visualizing and summarizing numerical data",
    "section": "Box plot customization",
    "text": "Box plot customization\n\n\nggplot(loans, aes(x = interest_rate)) +\n  geom_boxplot() +\n  scale_x_continuous(\n    labels = label_percent()\n  ) +\n  labs(\n    x = \"Interest rate\", \n    y = NULL,\n    title = \"Interest rates of Lending Club loans\"\n  ) +\n  theme(\n    axis.ticks.y = element_blank(),\n    axis.text.y = element_blank()\n  )"
  },
  {
    "objectID": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#summarize",
    "href": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#summarize",
    "title": "Visualizing and summarizing numerical data",
    "section": "summarize()",
    "text": "summarize()\n\nsummarize() returns for a summary statistic for all observations in the data:\n\n\nloans |&gt;\n  summarize(mean_loan_amt = mean(loan_amount))\n\n# A tibble: 1 × 1\n  mean_loan_amt\n          &lt;dbl&gt;\n1        16362.\n\n\n\n\nsummarize() can be used to calculate multiple summary statistics as well:\n\n\nloans |&gt;\n  summarize(\n    q25 = quantile(loan_amount, 0.25),\n    q75 = quantile(loan_amount, 0.75)\n  )\n\n# A tibble: 1 × 2\n    q25   q75\n  &lt;dbl&gt; &lt;dbl&gt;\n1  8000 24000"
  },
  {
    "objectID": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#sloppy-summarize",
    "href": "slides/3-3-1-visualize-summarize-numerical/3-3-1-visualize-summarize-numerical.html#sloppy-summarize",
    "title": "Visualizing and summarizing numerical data",
    "section": "Sloppy summarize()",
    "text": "Sloppy summarize()\nsummarize() will work even if you don’t name your summary statistic, or give it a non-informative/bad name, but I don’t recommend it!\n\n\n\n# good\nloans |&gt;\n  summarize(\n    mean_loan_amt = mean(loan_amount)\n  )\n\n# A tibble: 1 × 1\n  mean_loan_amt\n          &lt;dbl&gt;\n1        16362.\n\n\n\n\n# bad\nloans |&gt;\n  summarize(\n    mean(loan_amount)\n  )\n\n# A tibble: 1 × 1\n  `mean(loan_amount)`\n                &lt;dbl&gt;\n1              16362.\n\n\n\n\n# bad\nloans |&gt;\n  summarize(\n    temp = mean(loan_amount)\n  )\n\n# A tibble: 1 × 1\n    temp\n   &lt;dbl&gt;\n1 16362."
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#packages",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#packages",
    "title": "Visualizing and summarizing relationships",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse) # for data wrangling and visualization\nlibrary(openintro) # for data\nlibrary(scales)    # for pretty axis labels"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#data-houses-in-duke-forest",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#data-houses-in-duke-forest",
    "title": "Visualizing and summarizing relationships",
    "section": "Data: Houses in Duke Forest",
    "text": "Data: Houses in Duke Forest\n\nglimpse(duke_forest)\n\nRows: 98\nColumns: 13\n$ address    &lt;chr&gt; \"1 Learned Pl, Durham, NC 27705\", \"1616…\n$ price      &lt;dbl&gt; 1520000, 1030000, 420000, 680000, 42850…\n$ bed        &lt;dbl&gt; 3, 5, 2, 4, 4, 3, 5, 4, 4, 3, 4, 4, 3, …\n$ bath       &lt;dbl&gt; 4.0, 4.0, 3.0, 3.0, 3.0, 3.0, 5.0, 3.0,…\n$ area       &lt;dbl&gt; 6040, 4475, 1745, 2091, 1772, 1950, 390…\n$ type       &lt;chr&gt; \"Single Family\", \"Single Family\", \"Sing…\n$ year_built &lt;dbl&gt; 1972, 1969, 1959, 1961, 2020, 2014, 196…\n$ heating    &lt;chr&gt; \"Other, Gas\", \"Forced air, Gas\", \"Force…\n$ cooling    &lt;fct&gt; central, central, central, central, cen…\n$ parking    &lt;chr&gt; \"0 spaces\", \"Carport, Covered\", \"Garage…\n$ lot        &lt;dbl&gt; 0.97, 1.38, 0.51, 0.84, 0.16, 0.45, 0.9…\n$ hoa        &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ url        &lt;chr&gt; \"https://www.zillow.com/homedetails/1-L…"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area",
    "title": "Visualizing and summarizing relationships",
    "section": "Price vs. area",
    "text": "Price vs. area"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#scatterplot",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#scatterplot",
    "title": "Visualizing and summarizing relationships",
    "section": "Scatterplot",
    "text": "Scatterplot\n\nggplot(duke_forest, aes(x = area, y = price)) +\n  geom_point()"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#correlation-coefficient",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#correlation-coefficient",
    "title": "Visualizing and summarizing relationships",
    "section": "Correlation coefficient",
    "text": "Correlation coefficient\n\nduke_forest |&gt;\n  summarize(r = cor(area, price))\n\n# A tibble: 1 × 1\n      r\n  &lt;dbl&gt;\n1 0.667"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#characteristics-of-a-relationship",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#characteristics-of-a-relationship",
    "title": "Visualizing and summarizing relationships",
    "section": "Characteristics of a relationship",
    "text": "Characteristics of a relationship\nbetween two numerical variables\n\n\n\n\nDirection: Positive\nForm: Linear\nStrength: Moderately strong"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#distribution-of-house-prices",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#distribution-of-house-prices",
    "title": "Visualizing and summarizing relationships",
    "section": "Distribution of house prices",
    "text": "Distribution of house prices\n\nggplot(duke_forest, aes(x = price)) +\n  geom_histogram(binwidth = 100000)"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#filled-histograms",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#filled-histograms",
    "title": "Visualizing and summarizing relationships",
    "section": "Filled histograms",
    "text": "Filled histograms\n\nggplot(duke_forest, aes(x = price, fill = cooling)) +\n  geom_histogram(binwidth = 100000)"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#side-by-side-box-plots",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#side-by-side-box-plots",
    "title": "Visualizing and summarizing relationships",
    "section": "Side-by-side box plots",
    "text": "Side-by-side box plots\n\nggplot(duke_forest, aes(x = price, y = cooling)) +\n  geom_boxplot()"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#filled-density-plots",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#filled-density-plots",
    "title": "Visualizing and summarizing relationships",
    "section": "Filled density plots",
    "text": "Filled density plots\n\nggplot(\n  duke_forest, \n  aes(x = price, color = cooling, fill = cooling)\n  ) +\n  geom_density(alpha = 0.5)"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#violin-plots",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#violin-plots",
    "title": "Visualizing and summarizing relationships",
    "section": "Violin plots",
    "text": "Violin plots\n\nggplot(duke_forest, aes(x = price, y = cooling)) +\n  geom_violin()"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#grouped-summaries",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#grouped-summaries",
    "title": "Visualizing and summarizing relationships",
    "section": "Grouped summaries",
    "text": "Grouped summaries\n\nduke_forest |&gt;\n  summarize(median_price = median(price))\n\n# A tibble: 1 × 1\n  median_price\n         &lt;dbl&gt;\n1       540000\n\n\n\n\nduke_forest |&gt;\n  group_by(cooling) |&gt;\n  summarize(\n    median_price = median(price), \n  )\n\n# A tibble: 2 × 2\n  cooling median_price\n  &lt;fct&gt;          &lt;dbl&gt;\n1 other         525000\n2 central       550000"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#multiple-summary-statistics",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#multiple-summary-statistics",
    "title": "Visualizing and summarizing relationships",
    "section": "Multiple summary statistics",
    "text": "Multiple summary statistics\n\nduke_forest |&gt;\n  group_by(cooling) |&gt;\n  summarize(\n    min_price = min(price),\n    median_price = median(price), \n    iqr_price = IQR(price),\n    max_price = max(price)\n  )\n\n# A tibble: 2 × 5\n  cooling min_price median_price iqr_price max_price\n  &lt;fct&gt;       &lt;dbl&gt;        &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n1 other       95000       525000    156500   1020000\n2 central    265000       550000    221500   1520000"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#year-built",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#year-built",
    "title": "Visualizing and summarizing relationships",
    "section": "Year built",
    "text": "Year built\n\nCreate a new variable called year_built_cat that takes on the value \"1970 or later\" if the house is built in 1970 or later, and \"1969 or earlier\" otherwise.\n\n\n\nduke_forest &lt;- duke_forest |&gt;\n  mutate(\n    year_built_cat = if_else(\n      year_built &gt;= 1970, \n      \"1970 or later\", \n      \"1969 or earlier\"\n    )\n   )"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#year-built-1",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#year-built-1",
    "title": "Visualizing and summarizing relationships",
    "section": "Year built",
    "text": "Year built\n\nduke_forest |&gt;\n  select(contains(\"year_built\"))\n\n# A tibble: 98 × 2\n   year_built year_built_cat \n        &lt;dbl&gt; &lt;chr&gt;          \n 1       1972 1970 or later  \n 2       1969 1969 or earlier\n 3       1959 1969 or earlier\n 4       1961 1969 or earlier\n 5       2020 1970 or later  \n 6       2014 1970 or later  \n 7       1968 1969 or earlier\n 8       1973 1970 or later  \n 9       1972 1970 or later  \n10       1964 1969 or earlier\n# ℹ 88 more rows"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#stacked-bar-plot-frequencites",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#stacked-bar-plot-frequencites",
    "title": "Visualizing and summarizing relationships",
    "section": "Stacked bar plot – frequencites",
    "text": "Stacked bar plot – frequencites\n\nggplot(duke_forest, aes(x = year_built_cat, fill = cooling)) +\n  geom_bar()"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#stacked-bar-plot-proportions",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#stacked-bar-plot-proportions",
    "title": "Visualizing and summarizing relationships",
    "section": "Stacked bar plot – proportions",
    "text": "Stacked bar plot – proportions\n\nggplot(duke_forest, aes(x = year_built_cat, fill = cooling)) +\n  geom_bar(position = \"fill\")"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#frequencies",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#frequencies",
    "title": "Visualizing and summarizing relationships",
    "section": "Frequencies",
    "text": "Frequencies\n\nduke_forest |&gt;\n  count(year_built_cat, cooling)\n\n# A tibble: 4 × 3\n  year_built_cat  cooling     n\n  &lt;chr&gt;           &lt;fct&gt;   &lt;int&gt;\n1 1969 or earlier other      39\n2 1969 or earlier central    27\n3 1970 or later   other      14\n4 1970 or later   central    18"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#proportions",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#proportions",
    "title": "Visualizing and summarizing relationships",
    "section": "Proportions",
    "text": "Proportions\n\nduke_forest |&gt;\n  count(year_built_cat, cooling) |&gt;\n  group_by(year_built_cat) |&gt;\n  mutate(prop = n / sum(n))\n\n# A tibble: 4 × 4\n# Groups:   year_built_cat [2]\n  year_built_cat  cooling     n  prop\n  &lt;chr&gt;           &lt;fct&gt;   &lt;int&gt; &lt;dbl&gt;\n1 1969 or earlier other      39 0.591\n2 1969 or earlier central    27 0.409\n3 1970 or later   other      14 0.438\n4 1970 or later   central    18 0.562"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling",
    "title": "Visualizing and summarizing relationships",
    "section": "Price vs. area and cooling",
    "text": "Price vs. area and cooling\n\n\nggplot(\n  duke_forest, \n  aes(x = area, y = price, color = cooling, shape = cooling)\n  ) +\n  geom_point()"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling-1",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling-1",
    "title": "Visualizing and summarizing relationships",
    "section": "Price vs. area and cooling",
    "text": "Price vs. area and cooling\n\n\nggplot(\n  duke_forest, \n  aes(x = area, y = price, color = cooling, shape = cooling)\n  ) +\n  geom_point(alpha = 0.7, size = 4)"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling-2",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling-2",
    "title": "Visualizing and summarizing relationships",
    "section": "Price vs. area and cooling",
    "text": "Price vs. area and cooling\n\n\nggplot(\n  duke_forest, \n  aes(x = area, y = price, color = cooling, shape = cooling)\n  ) +\n  geom_point(alpha = 0.7, size = 4) +\n  labs(\n    title = \"Houses in Duke Forest\",\n    subtitle = \"Durham, NC\",\n    color = \"Cooling\", shape = \"Cooling\",\n    x = \"Area (square feet)\",\n    y = \"Price (USD)\",\n    caption = \"Source: Zillow, November 2020\"\n  )"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling-3",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling-3",
    "title": "Visualizing and summarizing relationships",
    "section": "Price vs. area and cooling",
    "text": "Price vs. area and cooling\n\n\nggplot(\n  duke_forest, \n  aes(x = area, y = price, color = cooling, shape = cooling)\n  ) +\n  geom_point(alpha = 0.7, size = 4) +\n  scale_color_manual(values = c(\"central\" = \"darkblue\", \"other\" = \"lightsalmon3\")) +\n  labs(\n    title = \"Houses in Duke Forest\",\n    subtitle = \"Durham, NC\",\n    color = \"Cooling\", shape = \"Cooling\",\n    x = \"Area (square feet)\",\n    y = \"Price (USD)\",\n    caption = \"Source: Zillow, November 2020\"\n  )"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling-4",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling-4",
    "title": "Visualizing and summarizing relationships",
    "section": "Price vs. area and cooling",
    "text": "Price vs. area and cooling\n\n\nggplot(\n  duke_forest, \n  aes(x = area, y = price, color = cooling, shape = cooling)\n  ) +\n  geom_point(alpha = 0.7, size = 4) +\n  scale_x_continuous(labels = label_number(big.mark = \",\")) +\n  scale_color_manual(values = c(\"central\" = \"darkblue\", \"other\" = \"lightsalmon3\")) +\n  labs(\n    title = \"Houses in Duke Forest\",\n    subtitle = \"Durham, NC\",\n    color = \"Cooling\", shape = \"Cooling\",\n    x = \"Area (square feet)\",\n    y = \"Price (USD)\",\n    caption = \"Source: Zillow, November 2020\"\n  )"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling-5",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling-5",
    "title": "Visualizing and summarizing relationships",
    "section": "Price vs. area and cooling",
    "text": "Price vs. area and cooling\n\n\nggplot(\n  duke_forest, \n  aes(x = area, y = price, color = cooling, shape = cooling)\n  ) +\n  geom_point(alpha = 0.7, size = 4) +\n  scale_x_continuous(labels = label_number(big.mark = \",\")) +\n  scale_y_continuous(labels = label_dollar()) +\n  scale_color_manual(values = c(\"central\" = \"darkblue\", \"other\" = \"lightsalmon3\")) +\n  labs(\n    title = \"Houses in Duke Forest\",\n    subtitle = \"Durham, NC\",\n    color = \"Cooling\", shape = \"Cooling\",\n    x = \"Area (square feet)\",\n    y = \"Price (USD)\",\n    caption = \"Source: Zillow, November 2020\"\n  )"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling-6",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling-6",
    "title": "Visualizing and summarizing relationships",
    "section": "Price vs. area and cooling",
    "text": "Price vs. area and cooling\n\n\nggplot(\n  duke_forest, \n  aes(x = area, y = price, color = cooling, shape = cooling)\n  ) +\n  geom_point(alpha = 0.7, size = 4) +\n  scale_x_continuous(labels = label_number(big.mark = \",\")) +\n  scale_y_continuous(labels = label_dollar()) +\n  scale_color_manual(values = c(\"central\" = \"darkblue\", \"other\" = \"lightsalmon3\")) +\n  labs(\n    title = \"Houses in Duke Forest\",\n    subtitle = \"Durham, NC\",\n    color = \"Cooling\", shape = \"Cooling\",\n    x = \"Area (square feet)\",\n    y = \"Price (USD)\",\n    caption = \"Source: Zillow, November 2020\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling-7",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling-7",
    "title": "Visualizing and summarizing relationships",
    "section": "Price vs. area and cooling",
    "text": "Price vs. area and cooling\n\n\nggplot(\n  duke_forest, \n  aes(x = area, y = price, color = cooling, shape = cooling)\n  ) +\n  geom_point(alpha = 0.7, size = 4) +\n  scale_x_continuous(labels = label_number(big.mark = \",\")) +\n  scale_y_continuous(labels = label_dollar()) +\n  scale_color_manual(values = c(\"central\" = \"darkblue\", \"other\" = \"lightsalmon3\")) +\n  labs(\n    title = \"Houses in Duke Forest\",\n    subtitle = \"Durham, NC\",\n    color = \"Cooling\", shape = \"Cooling\",\n    x = \"Area (square feet)\",\n    y = \"Price (USD)\",\n    caption = \"Source: Zillow, November 2020\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = c(0.15, 0.8))"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling-8",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling-8",
    "title": "Visualizing and summarizing relationships",
    "section": "Price vs. area and cooling",
    "text": "Price vs. area and cooling\n\nduke_forest |&gt;\n  group_by(cooling) |&gt;\n  summarize(r = cor(price, area))\n\n# A tibble: 2 × 2\n  cooling     r\n  &lt;fct&gt;   &lt;dbl&gt;\n1 other   0.459\n2 central 0.854"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling-9",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling-9",
    "title": "Visualizing and summarizing relationships",
    "section": "Price vs. area and cooling",
    "text": "Price vs. area and cooling\n\n\nggplot(\n  duke_forest, \n  aes(x = area, y = price, color = cooling, shape = cooling)\n  ) +\n  geom_point(alpha = 0.7, size = 4) +\n  scale_x_continuous(labels = label_number(big.mark = \",\")) +\n  scale_y_continuous(labels = label_dollar()) +\n  scale_color_manual(values = c(\"central\" = \"darkblue\", \"other\" = \"lightsalmon3\")) +\n  labs(\n    title = \"Houses in Duke Forest\",\n    subtitle = \"Durham, NC\",\n    color = \"Cooling\", shape = \"Cooling\",\n    x = \"Area (square feet)\",\n    y = \"Price (USD)\",\n    caption = \"Source: Zillow, November 2020\"\n  ) +\n  theme_minimal() +\n  facet_wrap(~cooling, ncol = 1)"
  },
  {
    "objectID": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling-10",
    "href": "slides/3-3-2-visualize-summarize-relationships/3-3-2-visualize-summarize-relationships.html#price-vs.-area-and-cooling-10",
    "title": "Visualizing and summarizing relationships",
    "section": "Price vs. area and cooling",
    "text": "Price vs. area and cooling\n\n\nggplot(\n  duke_forest, \n  aes(x = area, y = price, color = cooling, shape = cooling)\n  ) +\n  geom_point(alpha = 0.7, size = 4, show.legend = FALSE) +\n  scale_x_continuous(labels = label_number(big.mark = \",\")) +\n  scale_y_continuous(labels = label_dollar()) +\n  scale_color_manual(values = c(\"central\" = \"darkblue\", \"other\" = \"lightsalmon3\")) +\n  labs(\n    title = \"Houses in Duke Forest, by cooling type\",\n    subtitle = \"Durham, NC\",\n    color = \"Cooling\", shape = \"Cooling\",\n    x = \"Area (square feet)\",\n    y = \"Price (USD)\",\n    caption = \"Source: Zillow, November 2020\"\n  ) +\n  theme_minimal() +\n  facet_wrap(~cooling, ncol = 1)"
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#number-of-variables-involved",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#number-of-variables-involved",
    "title": "Visualizing and summarizing categorical data",
    "section": "Number of variables involved",
    "text": "Number of variables involved\n\n\nUnivariate data analysis - distribution of single variable\nBivariate data analysis - relationship between two variables\nMultivariate data analysis - relationship between many variables at once, usually focusing on the relationship between two while conditioning for others"
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#types-of-variables",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#types-of-variables",
    "title": "Visualizing and summarizing categorical data",
    "section": "Types of variables",
    "text": "Types of variables\n\n\nNumerical variables can be classified as continuous or discrete based on whether or not the variable can take on an infinite number of values or only non-negative whole numbers, respectively.\nIf the variable is categorical, we can determine if it is ordinal based on whether or not the levels have a natural ordering."
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#data-lending-club",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#data-lending-club",
    "title": "Visualizing and summarizing categorical data",
    "section": "Data: Lending Club",
    "text": "Data: Lending Club\n\n\n\nThousands of loans made through the Lending Club, which is a platform that allows individuals to lend to other individuals\n\n\n\n\n\n\n\nNot all loans are created equal – ease of getting a loan depends on (apparent) ability to pay back the loan\nData includes loans made, these are not loan applications"
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#take-a-peek-at-data",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#take-a-peek-at-data",
    "title": "Visualizing and summarizing categorical data",
    "section": "Take a peek at data",
    "text": "Take a peek at data\n\nlibrary(openintro)\nglimpse(loans_full_schema)\n\nRows: 10,000\nColumns: 55\n$ emp_title                        &lt;chr&gt; \"global config en…\n$ emp_length                       &lt;dbl&gt; 3, 10, 3, 1, 10, …\n$ state                            &lt;fct&gt; NJ, HI, WI, PA, C…\n$ homeownership                    &lt;fct&gt; MORTGAGE, RENT, R…\n$ annual_income                    &lt;dbl&gt; 90000, 40000, 400…\n$ verified_income                  &lt;fct&gt; Verified, Not Ver…\n$ debt_to_income                   &lt;dbl&gt; 18.01, 5.04, 21.1…\n$ annual_income_joint              &lt;dbl&gt; NA, NA, NA, NA, 5…\n$ verification_income_joint        &lt;fct&gt; , , , , Verified,…\n$ debt_to_income_joint             &lt;dbl&gt; NA, NA, NA, NA, 3…\n$ delinq_2y                        &lt;int&gt; 0, 0, 0, 0, 0, 1,…\n$ months_since_last_delinq         &lt;int&gt; 38, NA, 28, NA, N…\n$ earliest_credit_line             &lt;dbl&gt; 2001, 1996, 2006,…\n$ inquiries_last_12m               &lt;int&gt; 6, 1, 4, 0, 7, 6,…\n$ total_credit_lines               &lt;int&gt; 28, 30, 31, 4, 22…\n$ open_credit_lines                &lt;int&gt; 10, 14, 10, 4, 16…\n$ total_credit_limit               &lt;int&gt; 70795, 28800, 241…\n$ total_credit_utilized            &lt;int&gt; 38767, 4321, 1600…\n$ num_collections_last_12m         &lt;int&gt; 0, 0, 0, 0, 0, 0,…\n$ num_historical_failed_to_pay     &lt;int&gt; 0, 1, 0, 1, 0, 0,…\n$ months_since_90d_late            &lt;int&gt; 38, NA, 28, NA, N…\n$ current_accounts_delinq          &lt;int&gt; 0, 0, 0, 0, 0, 0,…\n$ total_collection_amount_ever     &lt;int&gt; 1250, 0, 432, 0, …\n$ current_installment_accounts     &lt;int&gt; 2, 0, 1, 1, 1, 0,…\n$ accounts_opened_24m              &lt;int&gt; 5, 11, 13, 1, 6, …\n$ months_since_last_credit_inquiry &lt;int&gt; 5, 8, 7, 15, 4, 5…\n$ num_satisfactory_accounts        &lt;int&gt; 10, 14, 10, 4, 16…\n$ num_accounts_120d_past_due       &lt;int&gt; 0, 0, 0, 0, 0, 0,…\n$ num_accounts_30d_past_due        &lt;int&gt; 0, 0, 0, 0, 0, 0,…\n$ num_active_debit_accounts        &lt;int&gt; 2, 3, 3, 2, 10, 1…\n$ total_debit_limit                &lt;int&gt; 11100, 16500, 430…\n$ num_total_cc_accounts            &lt;int&gt; 14, 24, 14, 3, 20…\n$ num_open_cc_accounts             &lt;int&gt; 8, 14, 8, 3, 15, …\n$ num_cc_carrying_balance          &lt;int&gt; 6, 4, 6, 2, 13, 5…\n$ num_mort_accounts                &lt;int&gt; 1, 0, 0, 0, 0, 3,…\n$ account_never_delinq_percent     &lt;dbl&gt; 92.9, 100.0, 93.5…\n$ tax_liens                        &lt;int&gt; 0, 0, 0, 1, 0, 0,…\n$ public_record_bankrupt           &lt;int&gt; 0, 1, 0, 0, 0, 0,…\n$ loan_purpose                     &lt;fct&gt; moving, debt_cons…\n$ application_type                 &lt;fct&gt; individual, indiv…\n$ loan_amount                      &lt;int&gt; 28000, 5000, 2000…\n$ term                             &lt;dbl&gt; 60, 36, 36, 36, 3…\n$ interest_rate                    &lt;dbl&gt; 14.07, 12.61, 17.…\n$ installment                      &lt;dbl&gt; 652.53, 167.54, 7…\n$ grade                            &lt;fct&gt; C, C, D, A, C, A,…\n$ sub_grade                        &lt;fct&gt; C3, C1, D1, A3, C…\n$ issue_month                      &lt;fct&gt; Mar-2018, Feb-201…\n$ loan_status                      &lt;fct&gt; Current, Current,…\n$ initial_listing_status           &lt;fct&gt; whole, whole, fra…\n$ disbursement_method              &lt;fct&gt; Cash, Cash, Cash,…\n$ balance                          &lt;dbl&gt; 27015.86, 4651.37…\n$ paid_total                       &lt;dbl&gt; 1999.330, 499.120…\n$ paid_principal                   &lt;dbl&gt; 984.14, 348.63, 1…\n$ paid_interest                    &lt;dbl&gt; 1015.19, 150.49, …\n$ paid_late_fees                   &lt;dbl&gt; 0, 0, 0, 0, 0, 0,…"
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#selected-variables",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#selected-variables",
    "title": "Visualizing and summarizing categorical data",
    "section": "Selected variables",
    "text": "Selected variables\n\nloans &lt;- loans_full_schema |&gt;\n  select(\n    loan_amount, interest_rate, term, grade, \n    state, annual_income, homeownership, debt_to_income\n  )\nglimpse(loans)\n\nRows: 10,000\nColumns: 8\n$ loan_amount    &lt;int&gt; 28000, 5000, 2000, 21600, 23000, 50…\n$ interest_rate  &lt;dbl&gt; 14.07, 12.61, 17.09, 6.72, 14.07, 6…\n$ term           &lt;dbl&gt; 60, 36, 36, 36, 36, 36, 60, 60, 36,…\n$ grade          &lt;fct&gt; C, C, D, A, C, A, C, B, C, A, C, B,…\n$ state          &lt;fct&gt; NJ, HI, WI, PA, CA, KY, MI, AZ, NV,…\n$ annual_income  &lt;dbl&gt; 90000, 40000, 40000, 30000, 35000, …\n$ homeownership  &lt;fct&gt; MORTGAGE, RENT, RENT, RENT, RENT, O…\n$ debt_to_income &lt;dbl&gt; 18.01, 5.04, 21.15, 10.16, 57.96, 6…"
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#selected-variables-1",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#selected-variables-1",
    "title": "Visualizing and summarizing categorical data",
    "section": "Selected variables",
    "text": "Selected variables\n\n\n\n\n\n\n\nvariable\ndescription\n\n\n\n\nloan_amount\nAmount of the loan received, in US dollars\n\n\ninterest_rate\nInterest rate on the loan, in an annual percentage\n\n\nterm\nThe length of the loan, which is always set as a whole number of months\n\n\ngrade\nLoan grade, which takes a values A through G and represents the quality of the loan and its likelihood of being repaid\n\n\nstate\nUS state where the borrower resides\n\n\nannual_income\nBorrower’s annual income, including any second income, in US dollars\n\n\nhomeownership\nIndicates whether the person owns, owns but has a mortgage, or rents\n\n\ndebt_to_income\nDebt-to-income ratio"
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#variable-types",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#variable-types",
    "title": "Visualizing and summarizing categorical data",
    "section": "Variable types",
    "text": "Variable types\n\n\n\nvariable\ntype\n\n\n\n\nloan_amount\nnumerical, continuous\n\n\ninterest_rate\nnumerical, continuous\n\n\nterm\nnumerical, discrete\n\n\ngrade\ncategorical, ordinal\n\n\nstate\ncategorical, not ordinal\n\n\nannual_income\nnumerical, continuous\n\n\nhomeownership\ncategorical, not ordinal\n\n\ndebt_to_income\nnumerical, continuous"
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#bar-plot",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#bar-plot",
    "title": "Visualizing and summarizing categorical data",
    "section": "Bar plot",
    "text": "Bar plot\n\nggplot(loans, aes(x = homeownership)) +\n  geom_bar()"
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#segmented-bar-plot",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#segmented-bar-plot",
    "title": "Visualizing and summarizing categorical data",
    "section": "Segmented bar plot",
    "text": "Segmented bar plot\n\nggplot(loans, aes(x = homeownership, fill = grade)) +\n  geom_bar()"
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#segmented-bar-plot-1",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#segmented-bar-plot-1",
    "title": "Visualizing and summarizing categorical data",
    "section": "Segmented bar plot",
    "text": "Segmented bar plot\n\nggplot(loans, aes(x = homeownership, fill = term)) +\n  geom_bar()\n\n\n\nWarning: The following aesthetics were dropped during statistical\ntransformation: fill\nℹ This can happen when ggplot fails to infer the correct\n  grouping structure in the data.\nℹ Did you forget to specify a `group` aesthetic or to\n  convert a numerical variable into a factor?"
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#numerical-to-categorical",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#numerical-to-categorical",
    "title": "Visualizing and summarizing categorical data",
    "section": "Numerical to categorical",
    "text": "Numerical to categorical\n\nloans |&gt;\n  mutate(term = as.factor(term)) |&gt;\n  ggplot(aes(x = homeownership, fill = term)) +\n  geom_bar()"
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#segmented-bar-plot---proportions",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#segmented-bar-plot---proportions",
    "title": "Visualizing and summarizing categorical data",
    "section": "Segmented bar plot - proportions",
    "text": "Segmented bar plot - proportions\n\nloans |&gt;\n  mutate(term = as.factor(term)) |&gt;\n  ggplot(aes(x = homeownership, fill = term)) +\n  geom_bar(position = \"fill\")"
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#frequencies-vs.-proportions",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#frequencies-vs.-proportions",
    "title": "Visualizing and summarizing categorical data",
    "section": "Frequencies vs. proportions",
    "text": "Frequencies vs. proportions\n\nWhich bar plot is a more useful representation for visualizing the relationship between homeownership and term?"
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#customizing-bar-plots",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#customizing-bar-plots",
    "title": "Visualizing and summarizing categorical data",
    "section": "Customizing bar plots",
    "text": "Customizing bar plots\n\nloans |&gt;\n  mutate(term = as.factor(term)) |&gt;\n  ggplot(aes(y = homeownership, fill = term)) +\n  geom_bar(position = \"fill\") +\n  labs(\n    x = \"Proportion\", y = \"Homeownership\", fill = \"Term\",\n    title = \"Terms of Lending Club loans\",\n    subtitle = \"and homeownership of borrowers\"\n  ) +\n  scale_fill_manual(values = c(\"lightblue\", \"darkgreen\"))"
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#frequency-table",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#frequency-table",
    "title": "Visualizing and summarizing categorical data",
    "section": "Frequency table",
    "text": "Frequency table\n\nloans |&gt;\n  count(homeownership)\n\n# A tibble: 3 × 2\n  homeownership     n\n  &lt;fct&gt;         &lt;int&gt;\n1 MORTGAGE       4789\n2 OWN            1353\n3 RENT           3858"
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#relative-frequency-table",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#relative-frequency-table",
    "title": "Visualizing and summarizing categorical data",
    "section": "Relative frequency table",
    "text": "Relative frequency table\n\nloans |&gt;\n  count(homeownership) |&gt;\n  mutate(proportion = n / sum(n))\n\n# A tibble: 3 × 3\n  homeownership     n proportion\n  &lt;fct&gt;         &lt;int&gt;      &lt;dbl&gt;\n1 MORTGAGE       4789      0.479\n2 OWN            1353      0.135\n3 RENT           3858      0.386"
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#frequency-table-with-multiple-variables",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#frequency-table-with-multiple-variables",
    "title": "Visualizing and summarizing categorical data",
    "section": "Frequency table with multiple variables",
    "text": "Frequency table with multiple variables\n\nloans |&gt;\n  count(homeownership, term)\n\n# A tibble: 6 × 3\n  homeownership  term     n\n  &lt;fct&gt;         &lt;dbl&gt; &lt;int&gt;\n1 MORTGAGE         36  3071\n2 MORTGAGE         60  1718\n3 OWN              36   998\n4 OWN              60   355\n5 RENT             36  2901\n6 RENT             60   957"
  },
  {
    "objectID": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#relative-frequency-table-with-multiple-variables",
    "href": "slides/3-2-visualize-summarize-categorical/3-2-visualize-summarize-categorical.html#relative-frequency-table-with-multiple-variables",
    "title": "Visualizing and summarizing categorical data",
    "section": "Relative frequency table with multiple variables",
    "text": "Relative frequency table with multiple variables\n\nloans |&gt;\n  count(homeownership, term) |&gt;\n  group_by(homeownership) |&gt;\n  mutate(proportion = n / sum(n))\n\n# A tibble: 6 × 4\n# Groups:   homeownership [3]\n  homeownership  term     n proportion\n  &lt;fct&gt;         &lt;dbl&gt; &lt;int&gt;      &lt;dbl&gt;\n1 MORTGAGE         36  3071      0.641\n2 MORTGAGE         60  1718      0.359\n3 OWN              36   998      0.738\n4 OWN              60   355      0.262\n5 RENT             36  2901      0.752\n6 RENT             60   957      0.248"
  },
  {
    "objectID": "sample-videos/sample-ggplot2-slides/ggplot2.html#ggplot2-in-tidyverse",
    "href": "sample-videos/sample-ggplot2-slides/ggplot2.html#ggplot2-in-tidyverse",
    "title": "Visualising data with ggplot2",
    "section": "ggplot2 \\(\\in\\) tidyverse",
    "text": "ggplot2 \\(\\in\\) tidyverse\n\n\n\n\n\n\nggplot2 is tidyverse’s data visualization package\nStructure of the code for plots can be summarized as\n\n\n\nggplot(\n  data = [data], \n  mapping = aes(x = [x-variable], y = [y-variable])\n  ) +\n  geom_xxx() +\n  other options"
  },
  {
    "objectID": "sample-videos/sample-ggplot2-slides/ggplot2.html#data-palmer-penguins",
    "href": "sample-videos/sample-ggplot2-slides/ggplot2.html#data-palmer-penguins",
    "title": "Visualising data with ggplot2",
    "section": "Data: Palmer Penguins",
    "text": "Data: Palmer Penguins\nMeasurements for penguin species, island in Palmer Archipelago, size (flipper length, body mass, bill dimensions), and sex.\n\n\n\n\n\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\nglimpse(penguins)\n\n\n\nRows: 344\nColumns: 8\n$ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male…\n$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…"
  },
  {
    "objectID": "sample-videos/sample-ggplot2-slides/ggplot2.html#goal",
    "href": "sample-videos/sample-ggplot2-slides/ggplot2.html#goal",
    "title": "Visualising data with ggplot2",
    "section": "Goal",
    "text": "Goal\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(\n  data = penguins, \n  mapping = aes(x = bill_depth_mm, y = bill_length_mm, color = species)\n  ) +\n  geom_point() +\n  labs(\n    title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", y = \"Bill length (mm)\",\n    color = \"Species\",\n    caption = \"Source: Palmer Station LTER / palmerpenguins package\"\n  ) +\n  scale_color_viridis_d()"
  },
  {
    "objectID": "sample-videos/sample-ggplot2-slides/ggplot2.html#section",
    "href": "sample-videos/sample-ggplot2-slides/ggplot2.html#section",
    "title": "Visualising data with ggplot2",
    "section": "",
    "text": "Start with the penguins data frame\n\n\n\n\n\nggplot(data = penguins)"
  },
  {
    "objectID": "sample-videos/sample-ggplot2-slides/ggplot2.html#section-1",
    "href": "sample-videos/sample-ggplot2-slides/ggplot2.html#section-1",
    "title": "Visualising data with ggplot2",
    "section": "",
    "text": "Start with the penguins data frame, map bill depth to the x-axis\n\n\n\n\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_depth_mm\n    )\n  )"
  },
  {
    "objectID": "sample-videos/sample-ggplot2-slides/ggplot2.html#section-2",
    "href": "sample-videos/sample-ggplot2-slides/ggplot2.html#section-2",
    "title": "Visualising data with ggplot2",
    "section": "",
    "text": "Start with the penguins data frame, map bill depth to the x-axis and map bill length to the y-axis.\n\n\n\n\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_depth_mm,\n    y = bill_length_mm\n    )\n  )"
  },
  {
    "objectID": "sample-videos/sample-ggplot2-slides/ggplot2.html#section-3",
    "href": "sample-videos/sample-ggplot2-slides/ggplot2.html#section-3",
    "title": "Visualising data with ggplot2",
    "section": "",
    "text": "Start with the penguins data frame, map bill depth to the x-axis and map bill length to the y-axis. Represent each observation with a point\n\n\n\n\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_depth_mm,\n    y = bill_length_mm\n    )\n  ) +\n  geom_point()"
  },
  {
    "objectID": "sample-videos/sample-ggplot2-slides/ggplot2.html#section-4",
    "href": "sample-videos/sample-ggplot2-slides/ggplot2.html#section-4",
    "title": "Visualising data with ggplot2",
    "section": "",
    "text": "Start with the penguins data frame, map bill depth to the x-axis and map bill length to the y-axis. Represent each observation with a point and map species to the color of each point.\n\n\n\n\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_depth_mm,\n    y = bill_length_mm,\n    color = species\n    )\n  ) +\n  geom_point()"
  },
  {
    "objectID": "sample-videos/sample-ggplot2-slides/ggplot2.html#section-5",
    "href": "sample-videos/sample-ggplot2-slides/ggplot2.html#section-5",
    "title": "Visualising data with ggplot2",
    "section": "",
    "text": "Start with the penguins data frame, map bill depth to the x-axis and map bill length to the y-axis. Represent each observation with a point and map species to the color of each point. Title the plot “Bill depth and length”\n\n\n\n\n\nggplot(\n  data = penguins,\n  mapping = aes(x = bill_depth_mm, y = bill_length_mm,color = species)\n  ) +\n  geom_point() +\n  labs(title = \"Bill depth and length\")"
  },
  {
    "objectID": "sample-videos/sample-ggplot2-slides/ggplot2.html#section-6",
    "href": "sample-videos/sample-ggplot2-slides/ggplot2.html#section-6",
    "title": "Visualising data with ggplot2",
    "section": "",
    "text": "Start with the penguins data frame, map bill depth to the x-axis and map bill length to the y-axis. Represent each observation with a point and map species to the color of each point. Title the plot “Bill depth and length”, add the subtitle “Dimensions for Adelie, Chinstrap, and Gentoo Penguins”\n\n\n\n\n\nggplot(\n  data = penguins,\n  mapping = aes(x = bill_depth_mm, y = bill_length_mm,color = species)\n  ) +\n  geom_point()  +\n  labs(\n    title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\"\n  )"
  },
  {
    "objectID": "sample-videos/sample-ggplot2-slides/ggplot2.html#section-7",
    "href": "sample-videos/sample-ggplot2-slides/ggplot2.html#section-7",
    "title": "Visualising data with ggplot2",
    "section": "",
    "text": "Start with the penguins data frame, map bill depth to the x-axis and map bill length to the y-axis. Represent each observation with a point and map species to the color of each point. Title the plot “Bill depth and length”, add the subtitle “Dimensions for Adelie, Chinstrap, and Gentoo Penguins”, label the x and y axes as “Bill depth (mm)” and “Bill length (mm)”, respectively\n\n\n\n\n\nggplot(\n  data = penguins,\n  mapping = aes(x = bill_depth_mm, y = bill_length_mm,color = species)\n  ) +\n  geom_point()  +\n  labs(\n    title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", y = \"Bill length (mm)\"\n  )"
  },
  {
    "objectID": "sample-videos/sample-ggplot2-slides/ggplot2.html#section-8",
    "href": "sample-videos/sample-ggplot2-slides/ggplot2.html#section-8",
    "title": "Visualising data with ggplot2",
    "section": "",
    "text": "Start with the penguins data frame, map bill depth to the x-axis and map bill length to the y-axis. Represent each observation with a point and map species to the color of each point. Title the plot “Bill depth and length”, add the subtitle “Dimensions for Adelie, Chinstrap, and Gentoo Penguins”, label the x and y axes as “Bill depth (mm)” and “Bill length (mm)”, respectively, label the legend “Species”\n\n\n\n\n\nggplot(\n  data = penguins,\n  mapping = aes(x = bill_depth_mm, y = bill_length_mm,color = species)\n  ) +\n  geom_point() +\n  labs(\n    title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n     x = \"Bill depth (mm)\", y = \"Bill length (mm)\", \n    color = \"Species\"\n  )"
  },
  {
    "objectID": "sample-videos/sample-ggplot2-slides/ggplot2.html#section-9",
    "href": "sample-videos/sample-ggplot2-slides/ggplot2.html#section-9",
    "title": "Visualising data with ggplot2",
    "section": "",
    "text": "Start with the penguins data frame, map bill depth to the x-axis and map bill length to the y-axis. Represent each observation with a point and map species to the color of each point. Title the plot “Bill depth and length”, add the subtitle “Dimensions for Adelie, Chinstrap, and Gentoo Penguins”, label the x and y axes as “Bill depth (mm)” and “Bill length (mm)”, respectively, label the legend “Species”, and add a caption for the data source.\n\n\n\n\n\nggplot(\n  data = penguins,\n  mapping = aes(x = bill_depth_mm, y = bill_length_mm,color = species)\n  ) +\n  geom_point() +\n  labs(\n    title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", y = \"Bill length (mm)\", \n    color = \"Species\",\n    caption = \"Source: Palmer Station LTER / palmerpenguins package\"\n  )"
  },
  {
    "objectID": "sample-videos/sample-ggplot2-slides/ggplot2.html#section-10",
    "href": "sample-videos/sample-ggplot2-slides/ggplot2.html#section-10",
    "title": "Visualising data with ggplot2",
    "section": "",
    "text": "Start with the penguins data frame, map bill depth to the x-axis and map bill length to the y-axis. Represent each observation with a point and map species to the color of each point. Title the plot “Bill depth and length”, add the subtitle “Dimensions for Adelie, Chinstrap, and Gentoo Penguins”, label the x and y axes as “Bill depth (mm)” and “Bill length (mm)”, respectively, label the legend “Species”, and add a caption for the data source. Finally, use a discrete color scale that is designed to be perceived by viewers with common forms of color blindness.\n\n\n\n\n\nggplot(\n  data = penguins,\n  mapping = aes(x = bill_depth_mm, y = bill_length_mm,color = species)\n  ) +\n  geom_point() +\n  labs(\n    title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", y = \"Bill length (mm)\", \n    color = \"Species\",\n    caption = \"Source: Palmer Station LTER / palmerpenguins package\"\n  ) +\n  scale_color_viridis_d()"
  },
  {
    "objectID": "sample-videos/sample-ggplot2-slides/ggplot2.html#section-11",
    "href": "sample-videos/sample-ggplot2-slides/ggplot2.html#section-11",
    "title": "Visualising data with ggplot2",
    "section": "",
    "text": "CodePlotNarrative\n\n\n\nggplot(\n  data = penguins, \n  mapping = aes(x = bill_depth_mm, y = bill_length_mm, color = species)\n  ) +\n  geom_point() +\n  labs(\n    title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", y = \"Bill length (mm)\",\n    color = \"Species\",\n    caption = \"Source: Palmer Station LTER / palmerpenguins package\"\n  ) +\n  scale_color_viridis_d()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStart with the penguins data frame, map bill depth to the x-axis and map bill length to the y-axis.\nRepresent each observation with a point and map species to the color of each point.\nTitle the plot “Bill depth and length”, add the subtitle “Dimensions for Adelie, Chinstrap, and Gentoo Penguins”, label the x and y axes as “Bill depth (mm)” and “Bill length (mm)”, respectively, label the legend “Species”, and add a caption for the data source.\nFinally, use a discrete color scale that is designed to be perceived by viewers with common forms of color blindness."
  },
  {
    "objectID": "sample-videos/sample-ggplot2-slides/ggplot2.html#argument-names",
    "href": "sample-videos/sample-ggplot2-slides/ggplot2.html#argument-names",
    "title": "Visualising data with ggplot2",
    "section": "Argument names",
    "text": "Argument names\n\n\n\n\n\n\nTip\n\n\nYou can omit the names of first two arguments when building plots with ggplot().\n\n\n\n\n\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_depth_mm,\n    y = bill_length_mm,\n    color = species\n    )\n  ) +\n  geom_point() +\n  scale_color_viridis_d()\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = bill_depth_mm,\n    y = bill_length_mm,\n    color = species\n    )\n  ) +\n  geom_point() +\n  scale_color_viridis_d()"
  },
  {
    "objectID": "sample-videos/sample-ggplot2-code-along/ggplot2.html",
    "href": "sample-videos/sample-ggplot2-code-along/ggplot2.html",
    "title": "Visualizing Starwars characters",
    "section": "",
    "text": "Load packages.\n\nGlimpse at the starwars data frame.\n\n\nglimpse(starwars)\n\nRows: 87\nColumns: 14\n$ name       &lt;chr&gt; \"Luke Skywalker\", \"C-3PO\", \"R2-D2\", \"Darth Vader\", \"Leia Or…\n$ height     &lt;int&gt; 172, 167, 96, 202, 150, 178, 165, 97, 183, 182, 188, 180, 2…\n$ mass       &lt;dbl&gt; 77.0, 75.0, 32.0, 136.0, 49.0, 120.0, 75.0, 32.0, 84.0, 77.…\n$ hair_color &lt;chr&gt; \"blond\", NA, NA, \"none\", \"brown\", \"brown, grey\", \"brown\", N…\n$ skin_color &lt;chr&gt; \"fair\", \"gold\", \"white, blue\", \"white\", \"light\", \"light\", \"…\n$ eye_color  &lt;chr&gt; \"blue\", \"yellow\", \"red\", \"yellow\", \"brown\", \"blue\", \"blue\",…\n$ birth_year &lt;dbl&gt; 19.0, 112.0, 33.0, 41.9, 19.0, 52.0, 47.0, NA, 24.0, 57.0, …\n$ sex        &lt;chr&gt; \"male\", \"none\", \"none\", \"male\", \"female\", \"male\", \"female\",…\n$ gender     &lt;chr&gt; \"masculine\", \"masculine\", \"masculine\", \"masculine\", \"femini…\n$ homeworld  &lt;chr&gt; \"Tatooine\", \"Tatooine\", \"Naboo\", \"Tatooine\", \"Alderaan\", \"T…\n$ species    &lt;chr&gt; \"Human\", \"Droid\", \"Droid\", \"Human\", \"Human\", \"Human\", \"Huma…\n$ films      &lt;list&gt; &lt;\"A New Hope\", \"The Empire Strikes Back\", \"Return of the J…\n$ vehicles   &lt;list&gt; &lt;\"Snowspeeder\", \"Imperial Speeder Bike\"&gt;, &lt;&gt;, &lt;&gt;, &lt;&gt;, \"Imp…\n$ starships  &lt;list&gt; &lt;\"X-wing\", \"Imperial shuttle\"&gt;, &lt;&gt;, &lt;&gt;, \"TIE Advanced x1\",…\n\n\n\nModify the following plot to change the color of all points to \"pink\".\n\n\nggplot(\n  starwars, \n  aes(x = height, y = mass, color = gender, size = birth_year)\n  ) +\n  geom_point(color = \"pink\")\n\nWarning: Removed 51 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\n\nAdd labels for title, x and y axes, and size of points. Uncomment to see the effect.\n\n\nggplot(\n  starwars, \n  aes(x = height, y = mass, color = gender, size = birth_year)\n  ) +\n  geom_point(color = \"#30509C\") +\n  labs(\n    title = \"Mass vs. height of Starwars Characters\",\n    x = \"Height (cm)\", \n    y = \"Body mass (kg)\",\n    size = \"Birth year\"\n  )\n\nWarning: Removed 51 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\n\nPick a single numerical variable and make a histogram of it. Select a reasonable binwidth for it.\n\n(A bit of starter code is provided below, and the code chunk is set to not be evaluated with eval: false because the current code in there is not valid code and hence the document wouldn’t knit. Once you replace the code with valid code, set the chunk option to eval: true, or remove the eval option altogether since it’s set to true by default.)\n\nggplot(starwars, aes(x = height)) +\n  geom_histogram(binwidth = 10)\n\n\n\n\n\n\n\n\n\nPick a numerical variable and a categorical variable and make a visualization (you pick the type!) to visualization the relationship between the two variables. Along with your code and output, provide an interpretation of the visualization.\n\n\n# add code here\n\nInterpretation goes here…\n\nPick a single categorical variable from the data set and make a bar plot of its distribution.\n\n\n# add code here\n\n\nPick two categorical variables and make a visualization to visualize the relationship between the two variables. Along with your code and output, provide an interpretation of the visualization.\n\n\n# add code here\n\nInterpretation goes here…\n\nPick two numerical variables and two categorical variables and make a visualization that incorporates all of them and provide an interpretation with your answer.\n\n(This time no starter code is provided, you’re on your own!)\n\n# add code here\n\nAdd your interpretation here."
  },
  {
    "objectID": "sample-videos/sample-ggplot2-slides/script.html",
    "href": "sample-videos/sample-ggplot2-slides/script.html",
    "title": "Data visualization and transformation",
    "section": "",
    "text": "Hello, in this video we’re going to talk about the specifics and syntax of visualizing data with the ggplot2 package and we’re going to do so using data on penguins!\n\n\n\n\n\nA quick reminder that ggplot2 is tidyverse’s data visualization package\n\n\nThe structure of ggplot2 code looks almost always is the same: we start with the ggplot function where the first argument is the data that you want to plot and the second argument defines the aesthetic mappings using the aes function – in this template we have only defined the x and y aesthetics, for example. This one is somewhat unusual, you’re passing a function, aes, as the argument of another function, ggplot. You’ll see more of this as we progress through the course, though more often you’ll see data frame or variable names being passed to function arguments. and then we add on another layer – a geom layer – which defines the geometric shapes with which you want to represent your data and then optionally, though in many cases are recommendedly, we add further layers to the plot to make our plot a little bit easier to read, a little bit easier to glean information from.\n\n\n\n\n\n\n\nThe data that we’re working with is called penguins. It comes from the palmerpenguins package, and we also need the tidyverse package for our analyses.\n\n\nSo let’s load those packages first And then glimpse at the data. glimpse is a function that prints out the variables in the data frame, their types – which we’ll dig deeper into later in the course –, and the first few observations as comma separated values.\n\n\nThe data contains body measurements on three species of penguins, chinstrap, gentoo, and adelie. The bodu measurements include things like bill length and depth, flipper length, and body mass. We also know which island the penguin is on, their sec, and the year of data collection. There are a total of 8 columns, so 8 variables.\nThe output also shows that we have 344 rows, that is, we have data on 344 penguins.\n\n\n\n\n\nThe plot shown here is our final goal. We’ll plot bill length against bill depth, both measured in millimeters. We’ll represent each penguin with a point, colored by their species. The species mappings are summarized in the legend of the plot. The plot also has a title, a subtitle, and a caption.\n–&gt; [other tab] And the code for the plot is shown here. It looks like what we’ve seen before – ggplot function to start with, then the data, the aesthetic mappings, the geom, and some other layers for labels and color palette. This is a lot of code at once though, so let’s unpack it layer by layer.\n\n\n\n\n\nIn other words, let’s code out loud!\n\n\n\n\n\nWe start with the ggplot function and indicate that we want to plot the penguins data frame. As a result, we get an empty canvas that we can paint our data on.\n\n\n\n\n\nThem we map bill depth to the x-axis &gt;&gt; we can see the x-axis indicates the variable name, its range, and a reasonable breakpoint\n\n\n\n\n\nThen we map bill length to the y-axis &gt;&gt; we can see the y-axis mapped as well\n\n\n\n\n\nAnd finally &gt;&gt; we add a geom layer – a geom point, indicating that the data should be represented as points. There seems to be three clusters of points here, let’s see what happens if we also ask that the points be colored by species.\n\n\n\n\n\nSince this requires mapping another variable to a new aesthetic of the plot, we do this in the aesthetic mappings &gt;&gt; mapping color to species. Note that not only the points are colored, but we also gained a legend describing the mappings – red points represent Adelie penguins, green Chinstrap, blue Gentoo.\n\n\n\n\n\nNow that the data we want to see on our plot is there, let’s add some labels.\n\n\nLet’s set the title to Bill depth and length. Not a particularly informative title, but it’s a good starting point. We do this in the labs function, passing it to the title argument as a character string denoted with quotes. You can use double or single quotes in R, sticking to the tidyverse style guide we’ll use double quotes.\n\n\n\n\n\n\n\nLet’s also add a subtitle\n\n\nAgain in the labs function, passing it to the subtitle argument.\n\n\n\n\n\n\n\nAnd let’s fix up the x and y axis labels.\n\n\nBy default ggplot2 will use the variable names, but we can overwrite them by updating the x and y label of the plot, and using more human-friendly text like bill depth mm and bill length mm.\n\n\n\n\n\n\n\nAnd finally let’s relabel the legend as well\n\n\nWe do this also in the labs function, passing the desired label to the color argument. Note that the name of the argument matches the aesthetic mapping.\n\n\n\n\n\n\n\nAnd finally in the labels\n\n\nlet’s add a caption for the data source. This automatically gets placed below the plot.\n\n\n\n\n\n\n\nAnd before we finish up our plot we need to do one more thing – use a discrete color scale that is designed to be perceived by viewers with common forms of color blindness.\n\n\nWe do this in a new layer, a scale layer, using a pre-defined color palette called viridis. The underscore-d denotes we will use the discrete color scale in this palette. If you have red-green color vision deficiency up until this point some of the points on the plot may have been difficult to tell apart. The goal with this palette is to make sure all, or at least more, viewers can see the points as intended.\n\n\n\n\n\n\n\nPutting it altogether we have our code\n–&gt; The resulting plot –&gt; And the narrative we built with each layer of the plot\n\n\n\n\n\nBefore we wrap up this introduction to ggplot2, one quick note about argument names. It’s common in R to omit the names of the first two arguments. In the ggplot function\n\n\nthese are data and mapping So you’ll commonly see me and others write ggplot code in the second way, omitting these argument names from the code."
  },
  {
    "objectID": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#dataset-terminology",
    "href": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#dataset-terminology",
    "title": "Visualizing data",
    "section": "Dataset terminology",
    "text": "Dataset terminology\n\n\nEach row is an observation\nEach column is a variable\n\n\n\n\nstarwars\n\n# A tibble: 87 × 14\n   name         height  mass hair_color skin_color eye_color\n   &lt;chr&gt;         &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;    \n 1 Luke Skywal…    172    77 blond      fair       blue     \n 2 C-3PO           167    75 &lt;NA&gt;       gold       yellow   \n 3 R2-D2            96    32 &lt;NA&gt;       white, bl… red      \n 4 Darth Vader     202   136 none       white      yellow   \n 5 Leia Organa     150    49 brown      light      brown    \n 6 Owen Lars       178   120 brown, gr… light      blue     \n 7 Beru Whites…    165    75 brown      light      blue     \n 8 R5-D4            97    32 &lt;NA&gt;       white, red red      \n 9 Biggs Darkl…    183    84 black      light      brown    \n10 Obi-Wan Ken…    182    77 auburn, w… fair       blue-gray\n# ℹ 77 more rows\n# ℹ 8 more variables: birth_year &lt;dbl&gt;, sex &lt;chr&gt;,\n#   gender &lt;chr&gt;, homeworld &lt;chr&gt;, species &lt;chr&gt;,\n#   films &lt;list&gt;, vehicles &lt;list&gt;, starships &lt;list&gt;"
  },
  {
    "objectID": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#luke-skywalker",
    "href": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#luke-skywalker",
    "title": "Visualizing data",
    "section": "Luke Skywalker",
    "text": "Luke Skywalker"
  },
  {
    "objectID": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#whats-in-the-star-wars-data",
    "href": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#whats-in-the-star-wars-data",
    "title": "Visualizing data",
    "section": "What’s in the Star Wars data?",
    "text": "What’s in the Star Wars data?\nTake a glimpse() at the data:\n\nglimpse(starwars)\n\nRows: 87\nColumns: 14\n$ name       &lt;chr&gt; \"Luke Skywalker\", \"C-3PO\", \"R2-D2\", \"Da…\n$ height     &lt;int&gt; 172, 167, 96, 202, 150, 178, 165, 97, 1…\n$ mass       &lt;dbl&gt; 77, 75, 32, 136, 49, 120, 75, 32, 84, 7…\n$ hair_color &lt;chr&gt; \"blond\", NA, NA, \"none\", \"brown\", \"brow…\n$ skin_color &lt;chr&gt; \"fair\", \"gold\", \"white, blue\", \"white\",…\n$ eye_color  &lt;chr&gt; \"blue\", \"yellow\", \"red\", \"yellow\", \"bro…\n$ birth_year &lt;dbl&gt; 19.0, 112.0, 33.0, 41.9, 19.0, 52.0, 47…\n$ sex        &lt;chr&gt; \"male\", \"none\", \"none\", \"male\", \"female…\n$ gender     &lt;chr&gt; \"masculine\", \"masculine\", \"masculine\", …\n$ homeworld  &lt;chr&gt; \"Tatooine\", \"Tatooine\", \"Naboo\", \"Tatoo…\n$ species    &lt;chr&gt; \"Human\", \"Droid\", \"Droid\", \"Human\", \"Hu…\n$ films      &lt;list&gt; &lt;\"A New Hope\", \"The Empire Strikes Bac…\n$ vehicles   &lt;list&gt; &lt;\"Snowspeeder\", \"Imperial Speeder Bike…\n$ starships  &lt;list&gt; &lt;\"X-wing\", \"Imperial shuttle\"&gt;, &lt;&gt;, &lt;&gt;…"
  },
  {
    "objectID": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#get-to-know-the-data",
    "href": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#get-to-know-the-data",
    "title": "Visualizing data",
    "section": "Get to know the data",
    "text": "Get to know the data\n\nHow many rows and columns does this dataset have? What does each row represent? What does each column represent?\n\n\n\n?starwars"
  },
  {
    "objectID": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#dimensions-of-the-data",
    "href": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#dimensions-of-the-data",
    "title": "Visualizing data",
    "section": "Dimensions of the data",
    "text": "Dimensions of the data\n\nHow many rows and columns does this dataset have?\n\n\n\nnrow(starwars) # number of rows\n\n[1] 87\n\nncol(starwars) # number of columns\n\n[1] 14\n\ndim(starwars)  # dimensions (row column)\n\n[1] 87 14"
  },
  {
    "objectID": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#what-is-eda",
    "href": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#what-is-eda",
    "title": "Visualizing data",
    "section": "What is EDA?",
    "text": "What is EDA?\nExploratory data analysis (EDA) is an approach for analyzing data sets to summarize their main characteristics:\n\n\nVisualize – this is what we’ll focus on first\nSummarize - this is what we’ll focus on next\nBoth of these may require data wrangling, manipulation, transformation at (or before) this stage of the analysis"
  },
  {
    "objectID": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#mass-vs.-height",
    "href": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#mass-vs.-height",
    "title": "Visualizing data",
    "section": "Mass vs. height",
    "text": "Mass vs. height\n\nHow would you describe the relationship between mass and height of Star Wars characters? What other variables would help us understand data points that don’t follow the overall trend? Who is the not so tall but really chubby character?"
  },
  {
    "objectID": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#jabba",
    "href": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#jabba",
    "title": "Visualizing data",
    "section": "Jabba!",
    "text": "Jabba!"
  },
  {
    "objectID": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#data-visualization",
    "href": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#data-visualization",
    "title": "Visualizing data",
    "section": "Data visualization",
    "text": "Data visualization\n\n“The simple graph has brought more information to the data analyst’s mind than any other device.” — John Tukey\n\n\n\nData visualization, an important part of exploratory data analysis, is the creation and study of the visual representation of data\nMany tools for visualizing data – R is one of them\nMany approaches/systems within R for making data visualizations – ggplot2 is one of them, and that’s what we’re going to use"
  },
  {
    "objectID": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#anscombes-quartet",
    "href": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#anscombes-quartet",
    "title": "Visualizing data",
    "section": "Anscombe’s quartet",
    "text": "Anscombe’s quartet\n\nlibrary(Tmisc)\nquartet\n\n   set  x     y\n1    I 10  8.04\n2    I  8  6.95\n3    I 13  7.58\n4    I  9  8.81\n5    I 11  8.33\n6    I 14  9.96\n7    I  6  7.24\n8    I  4  4.26\n9    I 12 10.84\n10   I  7  4.82\n11   I  5  5.68\n12  II 10  9.14\n13  II  8  8.14\n14  II 13  8.74\n15  II  9  8.77\n16  II 11  9.26\n17  II 14  8.10\n18  II  6  6.13\n19  II  4  3.10\n20  II 12  9.13\n21  II  7  7.26\n22  II  5  4.74\n23 III 10  7.46\n24 III  8  6.77\n25 III 13 12.74\n26 III  9  7.11\n27 III 11  7.81\n28 III 14  8.84\n29 III  6  6.08\n30 III  4  5.39\n31 III 12  8.15\n32 III  7  6.42\n33 III  5  5.73\n34  IV  8  6.58\n35  IV  8  5.76\n36  IV  8  7.71\n37  IV  8  8.84\n38  IV  8  8.47\n39  IV  8  7.04\n40  IV  8  5.25\n41  IV 19 12.50\n42  IV  8  5.56\n43  IV  8  7.91\n44  IV  8  6.89"
  },
  {
    "objectID": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#summarizing-anscombes-quartet",
    "href": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#summarizing-anscombes-quartet",
    "title": "Visualizing data",
    "section": "Summarizing Anscombe’s quartet",
    "text": "Summarizing Anscombe’s quartet\n\nquartet |&gt;\n  group_by(set) |&gt;\n  summarise(\n    mean_x = mean(x), \n    mean_y = mean(y),\n    sd_x = sd(x),\n    sd_y = sd(y),\n    r = cor(x, y)\n  )\n\n# A tibble: 4 × 6\n  set   mean_x mean_y  sd_x  sd_y     r\n  &lt;fct&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 I          9   7.50  3.32  2.03 0.816\n2 II         9   7.50  3.32  2.03 0.816\n3 III        9   7.5   3.32  2.03 0.816\n4 IV         9   7.50  3.32  2.03 0.817"
  },
  {
    "objectID": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#visualizing-anscombes-quartet",
    "href": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#visualizing-anscombes-quartet",
    "title": "Visualizing data",
    "section": "Visualizing Anscombe’s quartet",
    "text": "Visualizing Anscombe’s quartet\n\nggplot(quartet, aes(x = x, y = y)) +\n  geom_point() +\n  facet_wrap(~ set, ncol = 4)"
  },
  {
    "objectID": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#age-at-first-kiss",
    "href": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#age-at-first-kiss",
    "title": "Visualizing data",
    "section": "Age at first kiss",
    "text": "Age at first kiss\n\nA group of college students were asked “How old were you when you had your first kiss?” on a survey. First, think about how you might expect the distribution of their responses to look.\nThen, examine the plot below. Do you see anything out of the ordinary?"
  },
  {
    "objectID": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#facebook-visits",
    "href": "slides/2-1-1-visualizing-data/2-1-1-visualizing-data.html#facebook-visits",
    "title": "Visualizing data",
    "section": "Facebook visits",
    "text": "Facebook visits\n\nSame group of college students were also asked “How many times do you go on Facebook per day?” First, think about how you might expect the distribution of their responses to look.\nThen, examine the plot below. How are people reporting lower vs. higher values of FB visits?"
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#ggplot2-in-tidyverse",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#ggplot2-in-tidyverse",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "ggplot2 \\(\\in\\) tidyverse",
    "text": "ggplot2 \\(\\in\\) tidyverse\n\n\n\n\nggplot2 is tidyverse’s data visualization package\n\nlibrary(tidyverse)\n\ngg in ggplot2 stands for Grammar of Graphics, inspired by the book Grammar of Graphics by Leland Wilkinson\n\n\n\n\n\n\n\n\n\n\n\n\nPackage website: ggplot2.tidyverse.org\nStructure of the code for plots can be summarized as\n\nggplot(\n  data = [dataset], \n  mapping = aes(x = [x-variable], y = [y-variable])\n  ) +\n  geom_xxx() +\n  other options"
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#mass-vs.-height",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#mass-vs.-height",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Mass vs. height",
    "text": "Mass vs. height\n\nggplot(starwars, aes(x = height, y = mass)) +\n  geom_point() +\n  labs(\n    title = \"Mass vs. height of Starwars characters\",\n    x = \"Height (cm)\", \n    y = \"Weight (kg)\"\n  )\n\nWarning: Removed 28 rows containing missing values\n(`geom_point()`)."
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#data-palmer-penguins",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#data-palmer-penguins",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Data: Palmer Penguins",
    "text": "Data: Palmer Penguins\nMeasurements for penguin species, island in Palmer Archipelago, size (flipper length, body mass, bill dimensions), and sex."
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#data",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#data",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Data",
    "text": "Data\n\nlibrary(palmerpenguins)\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, …\n$ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen,…\n$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3…\n$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6…\n$ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181…\n$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650…\n$ sex               &lt;fct&gt; male, female, female, NA, female…\n$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 20…"
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#plot",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#plot",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Plot",
    "text": "Plot"
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#code",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#code",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Code",
    "text": "Code\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_depth_mm, y = bill_length_mm,\n    color = species\n  )\n) +\n  geom_point() +\n  labs(\n    title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", \n    y = \"Bill length (mm)\",\n    color = \"Species\",\n    caption = \"Source: Palmer Station LTER / palmerpenguins package\"\n  )\n\nWarning: Removed 2 rows containing missing values\n(`geom_point()`)."
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-1",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-1",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Step 1",
    "text": "Step 1\nStart with the penguins data frame\n\n\nggplot(\n  data = penguins\n  )"
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-2",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-2",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Step 2",
    "text": "Step 2\nStart with the penguins data frame, map bill depth to the x-axis\n\n\nggplot(\n  data = penguins,\n  mapping = aes(x = bill_depth_mm)\n  )"
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-3",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-3",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Step 3",
    "text": "Step 3\nStart with the penguins data frame, map bill depth to the x-axis and map bill length to the y-axis.\n\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_depth_mm,\n    y = bill_length_mm\n    )\n  )"
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-4",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-4",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Step 4",
    "text": "Step 4\nStart with the penguins data frame, map bill depth to the x-axis and map bill length to the y-axis. Represent each observation with a point\n\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_depth_mm,\n    y = bill_length_mm\n    )\n  ) +\n  geom_point()"
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-5",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-5",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Step 5",
    "text": "Step 5\nStart with the penguins data frame, map bill depth to the x-axis and map bill length to the y-axis. Represent each observation with a point and map species to the color of each point.\n\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_depth_mm,\n    y = bill_length_mm,\n    color = species\n    )\n  ) +\n  geom_point()"
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-6",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-6",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Step 6",
    "text": "Step 6\nStart with the penguins data frame, map bill depth to the x-axis and map bill length to the y-axis. Represent each observation with a point and map species to the color of each point. Title the plot “Bill depth and length”\n\n\nggplot(\n  data = penguins,\n  mapping = aes(x = bill_depth_mm, y = bill_length_mm, color = species)\n  ) +\n  geom_point() +\n  labs(\n    title = \"Bill depth and length\"\n  )"
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-7",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-7",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Step 7",
    "text": "Step 7\nStart with the penguins data frame, map bill depth to the x-axis and map bill length to the y-axis. Represent each observation with a point and map species to the color of each point. Title the plot “Bill depth and length”, add the subtitle “Dimensions for Adelie, Chinstrap, and Gentoo Penguins”\n\n\nggplot(\n  data = penguins,\n  mapping = aes(x = bill_depth_mm, y = bill_length_mm, color = species)\n  ) +\n  geom_point() +\n  labs(\n    title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\"\n  )"
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-8",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-8",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Step 8",
    "text": "Step 8\nStart with the penguins data frame, map bill depth to the x-axis and map bill length to the y-axis. Represent each observation with a point and map species to the color of each point. Title the plot “Bill depth and length”, add the subtitle “Dimensions for Adelie, Chinstrap, and Gentoo Penguins”, label the x and y axes as “Bill depth (mm)” and “Bill length (mm)”, respectively\n\n\nggplot(\n  data = penguins,\n  mapping = aes(x = bill_depth_mm, y = bill_length_mm, color = species)\n  ) +\n  geom_point() +\n  labs(\n    title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", \n    y = \"Bill length (mm)\"\n  )"
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-9",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-9",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Step 9",
    "text": "Step 9\nStart with the penguins data frame, map bill depth to the x-axis and map bill length to the y-axis. Represent each observation with a point and map species to the color of each point. Title the plot “Bill depth and length”, add the subtitle “Dimensions for Adelie, Chinstrap, and Gentoo Penguins”, label the x and y axes as “Bill depth (mm)” and “Bill length (mm)”, respectively, label the legend “Species”\n\n\nggplot(\n  data = penguins,\n  mapping = aes(x = bill_depth_mm, y = bill_length_mm, color = species)\n  ) +\n  geom_point() +\n  labs(\n    title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", y = \"Bill length (mm)\",\n    color = \"Species\"\n  )"
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-10",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-10",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Step 10",
    "text": "Step 10\nStart with the penguins data frame, map bill depth to the x-axis and map bill length to the y-axis. Represent each observation with a point and map species to the color of each point. Title the plot “Bill depth and length”, add the subtitle “Dimensions for Adelie, Chinstrap, and Gentoo Penguins”, label the x and y axes as “Bill depth (mm)” and “Bill length (mm)”, respectively, label the legend “Species”, and add a caption for the data source.\n\n\nggplot(\n  data = penguins,\n  mapping = aes(x = bill_depth_mm, y = bill_length_mm, color = species)\n  ) +\n  geom_point() +\n  labs(\n    title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", y = \"Bill length (mm)\",\n    color = \"Species\",\n    caption = \"Source: Palmer Station LTER / palmerpenguins package\"\n  )"
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-11",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#step-11",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Step 11",
    "text": "Step 11\nStart with the penguins data frame, map bill depth to the x-axis and map bill length to the y-axis. Represent each observation with a point and map species to the color of each point. Title the plot “Bill depth and length”, add the subtitle “Dimensions for Adelie, Chinstrap, and Gentoo Penguins”, label the x and y axes as “Bill depth (mm)” and “Bill length (mm)”, respectively, label the legend “Species”, and add a caption for the data source. Finally, use a discrete color scale that is designed to be perceived by viewers with common forms of color blindness.\n\n\nggplot(\n  data = penguins,\n  mapping = aes(x = bill_depth_mm, y = bill_length_mm, color = species)\n  ) +\n  geom_point() +\n  labs(\n    title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", y = \"Bill length (mm)\",\n    color = \"Species\",\n    caption = \"Source: Palmer Station LTER / palmerpenguins package\"\n  ) +\n  scale_color_viridis_d()"
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#plot-1",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#plot-1",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Plot",
    "text": "Plot\n\n\nWarning: Removed 2 rows containing missing values\n(`geom_point()`)."
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#code-1",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#code-1",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Code",
    "text": "Code\n\nggplot(\n  data = penguins,\n  mapping = aes(x = bill_depth_mm, y = bill_length_mm, color = species)\n  ) +\n  geom_point() +\n  labs(\n    title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", y = \"Bill length (mm)\",\n    color = \"Species\",\n    caption = \"Source: Palmer Station LTER / palmerpenguins package\"\n  ) +\n  scale_color_viridis_d()"
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#narrative",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#narrative",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Narrative",
    "text": "Narrative\nStart with the penguins data frame, map bill depth to the x-axis and map bill length to the y-axis.\nRepresent each observation with a point and map species to the color of each point.\nTitle the plot “Bill depth and length”, add the subtitle “Dimensions for Adelie, Chinstrap, and Gentoo Penguins”, label the x and y axes as “Bill depth (mm)” and “Bill length (mm)”, respectively, label the legend “Species”, and add a caption for the data source.\nFinally, use a discrete color scale that is designed to be perceived by viewers with common forms of color blindness."
  },
  {
    "objectID": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#argument-names",
    "href": "slides/2-1-2-step-by-step-ggplot2/2-1-2-step-by-step-ggplot2.html#argument-names",
    "title": "Building a plotstep-by-step with ggplot2",
    "section": "Argument names",
    "text": "Argument names\nYou can omit the names of first two arguments when building plots with ggplot().\n\n\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_depth_mm,\n    y = bill_length_mm\n    )\n  ) +\n  geom_point()\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = bill_depth_mm,\n    y = bill_length_mm\n    )\n  ) +\n  geom_point()"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#grammar-of-graphics-1",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#grammar-of-graphics-1",
    "title": "Grammar of graphics",
    "section": "Grammar of Graphics",
    "text": "Grammar of Graphics\n\n\n\n\nThe grammar of graphics is a tool that enables us to concisely describe the components of a graphic\nThe ggplot2 package, which is part of tidyverse, implements the grammar of graphics in R"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#layers",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#layers",
    "title": "Grammar of graphics",
    "section": "Layers",
    "text": "Layers\nWith ggplot2, you can create a wide variety of plots layer-by-layer:"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#data",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#data",
    "title": "Grammar of graphics",
    "section": "Data",
    "text": "Data\nFoundation of the plot that gives you the canvas on which you can “paint” your data:\n\nggplot(penguins)"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#aesthetics",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#aesthetics",
    "title": "Grammar of graphics",
    "section": "Aesthetics",
    "text": "Aesthetics\nCharacteristics of plotting characters that can be mapped to a specific variable in the data, e.g.:\n\ncolor\nshape\nsize\nalpha (transparency)\n…"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#color",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#color",
    "title": "Grammar of graphics",
    "section": "Color",
    "text": "Color\nThe color aesthetic mapped to species:\n\n\nggplot(\n  penguins,\n  aes(\n    x = bill_depth_mm, \n    y = bill_length_mm,\n    color = species\n    )\n  ) +\n  geom_point()"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#shape",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#shape",
    "title": "Grammar of graphics",
    "section": "Shape",
    "text": "Shape\nThe shape aesthetic mapped to island:\n\n\nggplot(\n  penguins,\n  aes(\n    x = bill_depth_mm, \n    y = bill_length_mm,\n    color = species,\n    shape = island\n    )\n  ) +\n  geom_point()"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#color-and-shape",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#color-and-shape",
    "title": "Grammar of graphics",
    "section": "Color and shape",
    "text": "Color and shape\nThe color and shape aesthetics mapped to species:\n\n\nggplot(\n  penguins,\n  aes(\n    x = bill_depth_mm, \n    y = bill_length_mm,\n    color = species,\n    shape = species\n    )\n  ) +\n  geom_point()"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#size",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#size",
    "title": "Grammar of graphics",
    "section": "Size",
    "text": "Size\nThe size aesthetic mapped to body_mass_g:\n\n\nggplot(\n  penguins,\n  aes(\n    x = bill_depth_mm, \n    y = bill_length_mm,\n    color = species,\n    shape = species,\n    size = body_mass_g\n    )\n  ) +\n  geom_point()"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#alpha",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#alpha",
    "title": "Grammar of graphics",
    "section": "Alpha",
    "text": "Alpha\nThe alpha aesthetic mapped to flipper_length_mm:\n\n\nggplot(\n  penguins,\n  aes(\n    x = bill_depth_mm, \n    y = bill_length_mm,\n    color = species,\n    shape = species,\n    size = body_mass_g,\n    alpha = flipper_length_mm\n    )\n  ) +\n  geom_point()"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#mapping-vs.-setting",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#mapping-vs.-setting",
    "title": "Grammar of graphics",
    "section": "Mapping vs. setting",
    "text": "Mapping vs. setting\n\n\nMapping:\n\nggplot(\n  penguins,\n  aes(\n    x = bill_depth_mm, y = bill_length_mm,\n    color = species,\n    size = body_mass_g\n    )\n  ) + \n  geom_point()\n\n\n\n\n\n\n\n\n\nSetting:\n\nggplot(\n  penguins,\n  aes(\n    x = bill_depth_mm, y = bill_length_mm\n    )\n  ) + \n  geom_point(\n    color = \"red\",\n    size = 3\n  )"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#mapping-vs.-setting-1",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#mapping-vs.-setting-1",
    "title": "Grammar of graphics",
    "section": "Mapping vs. setting",
    "text": "Mapping vs. setting\n\n\nMapping:\nDetermine the size, alpha, etc. of points based on the values of a variable in the data – goes into aes():\n\n\n\n\n\n\n\n\n\n\n\nSetting:\nDetermine the size, alpha, etc. of points not based on the values of a variable in the data – goes into geom_*():"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#geoms",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#geoms",
    "title": "Grammar of graphics",
    "section": "Geoms",
    "text": "Geoms\nVisual representations of data points:\n\n\nShort for geometric objects\ngeom_*() functions are used to add geoms to a plot\nEach geom adds a layer to the plot"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#geom_point",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#geom_point",
    "title": "Grammar of graphics",
    "section": "geom_point()",
    "text": "geom_point()\n\nggplot(\n  penguins, \n  aes(x = bill_depth_mm, y = bill_length_mm)\n  ) + \n  geom_point()"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#geom_smooth",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#geom_smooth",
    "title": "Grammar of graphics",
    "section": "geom_smooth()",
    "text": "geom_smooth()\n\nggplot(\n  penguins,\n  aes(x = bill_depth_mm, y = bill_length_mm)\n  ) + \n  geom_point() +\n  geom_smooth()\n\n\n\n\n\n\n\n\n\n\nand many more soon…"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#faceting---what-and-why",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#faceting---what-and-why",
    "title": "Grammar of graphics",
    "section": "Faceting - what and why",
    "text": "Faceting - what and why\n\n\nSmaller plots that each display different subsets of the data\nAlso referred to as small multiples\nUseful for exploring conditional relationships and large data"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#faceting---how",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#faceting---how",
    "title": "Grammar of graphics",
    "section": "Faceting - how",
    "text": "Faceting - how\n\n\nggplot(\n  penguins, \n  aes(\n    x = bill_depth_mm, \n    y = bill_length_mm)\n  ) + \n  geom_point()"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#faceting---how-1",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#faceting---how-1",
    "title": "Grammar of graphics",
    "section": "Faceting - how",
    "text": "Faceting - how\n\n\nggplot(\n  penguins, \n  aes(\n    x = bill_depth_mm, \n    y = bill_length_mm)\n  ) + \n  geom_point() +\n  facet_grid(species ~ island)"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#faceting-by-two-variables",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#faceting-by-two-variables",
    "title": "Grammar of graphics",
    "section": "Faceting by two variables",
    "text": "Faceting by two variables\n\n\nspecies on rows, island on columns:\n\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + \n  geom_point() +\n  facet_grid(species ~ island)\n\n\n\n\n\n\n\n\n\nisland on rows, species on columns:\n\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + \n  geom_point() +\n  facet_grid(island ~ species)"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#faceting-by-one-variable",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#faceting-by-one-variable",
    "title": "Grammar of graphics",
    "section": "Faceting by one variable",
    "text": "Faceting by one variable\n\n\n\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + \n  geom_point() +\n  facet_wrap(~ species)\n\n\n\n\n\n\n\n\n\n\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + \n  geom_point() +\n  facet_wrap(~ species, ncol = 1)"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#themes",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#themes",
    "title": "Grammar of graphics",
    "section": "Themes",
    "text": "Themes\nControl the non-data elements of the plot:\n\n\nSelect from pre-defined themes with theme_*() functions\nTake control of individual theme elements in the theme() function"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#theme_dark",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#theme_dark",
    "title": "Grammar of graphics",
    "section": "theme_dark()",
    "text": "theme_dark()\n\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + \n  geom_point() +\n  theme_dark()"
  },
  {
    "objectID": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#theme",
    "href": "slides/2-2-grammar-of-graphics/2-2-grammar-of-graphics.html#theme",
    "title": "Grammar of graphics",
    "section": "theme()",
    "text": "theme()\n\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm, color = species)) + \n  geom_point() +\n  theme(legend.position = \"bottom\")\n\n\n\n\n\n\n\n\n\n\nand many more throughout the course…"
  },
  {
    "objectID": "slides/1-1-welcome/1-1-welcome.html#data-science",
    "href": "slides/1-1-welcome/1-1-welcome.html#data-science",
    "title": "Welcome",
    "section": "Data science",
    "text": "Data science\n\n\nData science is an exciting discipline that allows you to turn raw data into understanding, insight, and knowledge.\nYou’re going to learn to do this the tidy way – more on that later!\nThis is a course on introduction to data science, with an emphasis on statistical thinking."
  },
  {
    "objectID": "slides/1-1-welcome/1-1-welcome.html#course-faq",
    "href": "slides/1-1-welcome/1-1-welcome.html#course-faq",
    "title": "Welcome",
    "section": "Course FAQ",
    "text": "Course FAQ\nQ: What data science background does this course assume?\nA: None. But it does require a willingness to learn and a motivation to work with data.\n\nQ: Will we be doing computing?\nA: Yes.\n\n\nQ: What computing language will we learn?\nA: R.\n\n\nQ: Why not language X?\nA: A great discussion for the course forum!"
  },
  {
    "objectID": "slides/1-1-welcome/1-1-welcome.html#excel-not",
    "href": "slides/1-1-welcome/1-1-welcome.html#excel-not",
    "title": "Welcome",
    "section": "Excel, not…",
    "text": "Excel, not…"
  },
  {
    "objectID": "slides/1-1-welcome/1-1-welcome.html#r",
    "href": "slides/1-1-welcome/1-1-welcome.html#r",
    "title": "Welcome",
    "section": "R",
    "text": "R"
  },
  {
    "objectID": "slides/1-1-welcome/1-1-welcome.html#rstudio",
    "href": "slides/1-1-welcome/1-1-welcome.html#rstudio",
    "title": "Welcome",
    "section": "RStudio",
    "text": "RStudio"
  },
  {
    "objectID": "slides/1-1-welcome/1-1-welcome.html#data-science-life-cycle-1",
    "href": "slides/1-1-welcome/1-1-welcome.html#data-science-life-cycle-1",
    "title": "Welcome",
    "section": "Data science life cycle",
    "text": "Data science life cycle\n\n\n\n\n\n\n\nWickham, Hadley, Mine Çetinkaya-Rundel, and Garrett Grolemund. “R for Data Science.” O’Reilly Media, Inc.”, 2023."
  },
  {
    "objectID": "slides/1-1-welcome/1-1-welcome.html#import",
    "href": "slides/1-1-welcome/1-1-welcome.html#import",
    "title": "Welcome",
    "section": "Import",
    "text": "Import"
  },
  {
    "objectID": "slides/1-1-welcome/1-1-welcome.html#tidy---transform",
    "href": "slides/1-1-welcome/1-1-welcome.html#tidy---transform",
    "title": "Welcome",
    "section": "Tidy -> transform",
    "text": "Tidy -&gt; transform"
  },
  {
    "objectID": "slides/1-1-welcome/1-1-welcome.html#visualize",
    "href": "slides/1-1-welcome/1-1-welcome.html#visualize",
    "title": "Welcome",
    "section": "Visualize",
    "text": "Visualize"
  },
  {
    "objectID": "slides/1-1-welcome/1-1-welcome.html#model",
    "href": "slides/1-1-welcome/1-1-welcome.html#model",
    "title": "Welcome",
    "section": "Model",
    "text": "Model"
  },
  {
    "objectID": "slides/1-1-welcome/1-1-welcome.html#understand",
    "href": "slides/1-1-welcome/1-1-welcome.html#understand",
    "title": "Welcome",
    "section": "Understand",
    "text": "Understand"
  },
  {
    "objectID": "slides/1-1-welcome/1-1-welcome.html#communicate",
    "href": "slides/1-1-welcome/1-1-welcome.html#communicate",
    "title": "Welcome",
    "section": "Communicate",
    "text": "Communicate"
  },
  {
    "objectID": "slides/1-1-welcome/1-1-welcome.html#understand-1",
    "href": "slides/1-1-welcome/1-1-welcome.html#understand-1",
    "title": "Welcome",
    "section": "Understand",
    "text": "Understand\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# A tibble: 5 × 2\n  date             season\n  &lt;chr&gt;            &lt;chr&gt; \n1 23 January 2017  winter\n2 4 March 2017     spring\n3 14 June 2017     summer\n4 1 September 2017 fall  \n5 ...              ..."
  },
  {
    "objectID": "slides/1-1-welcome/1-1-welcome.html#understand-communicate",
    "href": "slides/1-1-welcome/1-1-welcome.html#understand-communicate",
    "title": "Welcome",
    "section": "Understand + communicate",
    "text": "Understand + communicate"
  },
  {
    "objectID": "slides/1-1-welcome/1-1-welcome.html#program",
    "href": "slides/1-1-welcome/1-1-welcome.html#program",
    "title": "Welcome",
    "section": "Program",
    "text": "Program"
  },
  {
    "objectID": "slides/1-1-welcome/1-1-welcome.html#data-visualization-and-transformation",
    "href": "slides/1-1-welcome/1-1-welcome.html#data-visualization-and-transformation",
    "title": "Welcome",
    "section": "Data visualization and transformation",
    "text": "Data visualization and transformation"
  },
  {
    "objectID": "exercises/bechdel-data-visualization.html",
    "href": "exercises/bechdel-data-visualization.html",
    "title": "Bechdel + data visualization",
    "section": "",
    "text": "Programming Activity Guide\n\n\n\nPlease reference the webR-intro activity for information on the different types of code chunks, questions, and how to save your work to reference later."
  },
  {
    "objectID": "exercises/bechdel-data-visualization.html#getting-started",
    "href": "exercises/bechdel-data-visualization.html#getting-started",
    "title": "Bechdel + data visualization",
    "section": "Getting started",
    "text": "Getting started\nPlease run the following code by clicking the green arrow just above the code chunk. When reading in the data, nothing will appear after you click the button. However, clicking the arrow ensures that your data can be used for the following activity.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nIn this mini analysis we work with the data used in the FiveThirtyEight story titled “The Dollar-And-Cents Case Against Hollywood’s Exclusion of Women”.\nThis analysis is about the Bechdel test, a measure of the representation of women in fiction.\n\nPackages\nWe’ll use: tidyverse for majority of the analysis and scales for pretty plot labels later on. These are ready to use for you in this activity!\n\nlibrary(tidyverse)\nlibrary(scales)\n\nFOR MINE Do we need this note below? I modified it from the original AE, but it may not feel necessary for Coursera.\nFOR MINE Are you going to introduce the pipe before the activity? If so, I can change the code. If not, I can change the code in the mario acitivty to not have the pipe + will have to update a quiz question.\n\n\n\n\n\n\nNote\n\n\n\nThis a modified version of the bechdel dataset. It’s been modified to include some new variables derived from existing variables as well as to limit the scope of the data to movies released between 1990 and 2013. A link to the original dataset can be found here\n\n\n\n\nGet to know the data\nYour Turn: We can use the glimpse function to get an overview (or “glimpse”) of the data. Write the following code below to accomplish this task.\nWith your output, confirm that:\n\nThere are 1615 rows\nThere are 7 variables (columns) in the dataset\n\n\n\n\n\n\n\nWarning\n\n\n\nIf you receive the error Error: object ‘bechdel’ not found, go back and read in your data above.\n\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nglimpse(bechdel)\n\nRows: 1,615\nColumns: 7\n$ title       &lt;chr&gt; \"21 & Over\", \"Dredd 3D\", \"12 Years a Slave\", \"2 Guns\", \"42…\n$ year        &lt;int&gt; 2013, 2012, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013…\n$ gross_2013  &lt;dbl&gt; 67878146, 55078343, 211714070, 208105475, 190040426, 18416…\n$ budget_2013 &lt;int&gt; 13000000, 45658735, 20000000, 61000000, 40000000, 22500000…\n$ roi         &lt;dbl&gt; 5.221396, 1.206305, 10.585703, 3.411565, 4.751011, 0.81851…\n$ binary      &lt;chr&gt; \"FAIL\", \"PASS\", \"FAIL\", \"FAIL\", \"FAIL\", \"FAIL\", \"FAIL\", \"P…\n$ clean_test  &lt;chr&gt; \"notalk\", \"ok\", \"notalk\", \"notalk\", \"men\", \"men\", \"notalk\"…\n\n\n\n\n\nDemo: We can use slice to look at rows of our data. Run the following code. Change the 5 to another number to print that many rows!\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nNotes: \n\n\nWhat does each observation (row) in the data set represent?\nAnswer: \n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nEach observation represents a movie."
  },
  {
    "objectID": "exercises/bechdel-data-visualization.html#variables-of-interest",
    "href": "exercises/bechdel-data-visualization.html#variables-of-interest",
    "title": "Bechdel + data visualization",
    "section": "Variables of Interest",
    "text": "Variables of Interest\nThe variables we’ll focus on are the following:\n\nbudget_2013: Budget in 2013 inflation adjusted dollars.\ngross_2013: Gross (US and international combined) in 2013 inflation adjusted dollars.\nroi: Return on investment, calculated as the ratio of the gross to budget.\nclean_test: Bechdel test result:\n\nok = passes test\ndubious\nmen = women only talk about men\nnotalk = women don’t talk to each other\nnowomen = fewer than two women\n\nbinary: Bechdel Test PASS vs FAIL binary\n\nWe will also use the year of release in data prep and title of movie to take a deeper look at some outliers.\nThere are a few other variables in the dataset, but we won’t be using them in this analysis."
  },
  {
    "objectID": "exercises/bechdel-data-visualization.html#visualizing-data-with-ggplot2",
    "href": "exercises/bechdel-data-visualization.html#visualizing-data-with-ggplot2",
    "title": "Bechdel + data visualization",
    "section": "Visualizing data with ggplot2",
    "text": "Visualizing data with ggplot2\nDemo: ggplot2 is the package and ggplot() is the function in this package that is used to create a plot. Interact with the code below by either running the code given, or adding code to achieve the expected solution when asked within the code chunk!\n\nggplot() creates the initial base coordinate system, and we will add layers to that base. We first specify the data set we will use with data = bechdel, and run the following to create our base.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nThe mapping argument is paired with an aesthetic (aes()), which tells us how the variables in our data set should be mapped to the visual properties of the graph.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nAs we previously mentioned, we often omit the names of the first two arguments in R functions. So you’ll often see this written as:\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nNote that the result is exactly the same.\nYour Turn: The geom_xx function specifies the type of plot we want to use to represent the data. In the code below, we want to use geom_point, which creates a plot where each observation is represented by a point.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\n\nWarning: Removed 15 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\n\nNote that this results in a warning as well.\nThis warning represents the number of observations that were removed because there were missing data!"
  },
  {
    "objectID": "exercises/bechdel-data-visualization.html#gross-revenue-vs.-budget",
    "href": "exercises/bechdel-data-visualization.html#gross-revenue-vs.-budget",
    "title": "Bechdel + data visualization",
    "section": "Gross revenue vs. budget",
    "text": "Gross revenue vs. budget\n\nStep 1\nDemo: The following code changes the color of all points to coral. Explore different colors by changing “coral” to different colors!\n\n\n\n\n\n\nTip\n\n\n\nSee http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf for many color options you can use by name in R or use the hex code for a color of your choice.\n\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nNotes: \n\n\n\n\nStep 2\nYour Turn: Add labels for the title and x and y axes using labs. Do this by modifying the existing code below.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nggplot(bechdel, \n       aes(x = budget_2013, y = gross_2013))+\n  geom_point(color = \"deepskyblue3\") + \n  labs(\n    x = \"Budget (in 2013 $)\", \n    y = \"Gross revenue (in 2013 $)\", \n    title = \"Gross revenue vs. budget\"\n    )\n\nWarning: Removed 15 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStep 3\nYour Turn: An aesthetic is a visual property of one of the objects in your plot. Commonly used aesthetic options are:\n\ncolor\nfill\nshape\nsize\nalpha (transparency)\n\nModify the plot below, so the color of the points is based on the variable binary, and make the size of your points based on roi.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nggplot(bechdel, \n       aes(x = budget_2013, y = gross_2013,\n           color = binary, size = roi)) +\n  geom_point() + \n  labs(\n    x = \"Budget (in 2013 $)\", \n    y = \"Gross revenue (in 2013 $)\", \n    title = \"Gross revenue vs. budget, by Bechdel test result\"\n    )\n\nWarning: Removed 15 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStep 4\nDemo: alpha is used within geom_point to change the transparency of the dots. alpha ranges between 0 and 1, with lower values equating to more transparent dots. Below, make the dots more transparent.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nNotes: \n\n\n\n\nStep 5\nYour Turn: Expand on your plot from the previous step by using facet_wrap to display the association between budget and gross for different values of clean_test.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nggplot(bechdel, \n  aes(x = budget_2013, y = gross_2013,\n    color = binary, size = roi)) +\n  geom_point(alpha = 0.5) + \n  facet_wrap(~ clean_test) +\n  labs(\n    x = \"Budget (in 2013 $)\", \n    y = \"Gross revenue (in 2013 $)\", \n    title = \"Gross revenue vs. budget, by Bechdel test result\"\n    )\n\nWarning: Removed 15 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStep 6\nDemo: Below is a demonstration on how to improve your plot from the previous step by making the x and y scales more legible.\n\n\n\n\n\n\nTip\n\n\n\nThis is done through the use of the scales package, specifically the scale_x_continuous() and scale_y_continuous() functions.\n\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nNotes: \n\n\n\n\nStep 7\nYour Turn: Expand on your plot from the previous step by using facet_grid to display the association between budget and gross for different combinations of clean_test and binary. Comment on whether this was a useful update.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nIs this type of facet useful? Why or why not?\nAnswer: \n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nggplot(bechdel, \n       aes(x = budget_2013, y = gross_2013,\n           color = binary, size = roi)) +\n  geom_point(alpha = 0.5) + \n  facet_grid(clean_test ~ binary) +\n  scale_x_continuous(labels = label_dollar(scale = 1/1000000)) +\n  scale_y_continuous(labels = label_dollar(scale = 1/1000000)) +\n  labs(\n    x = \"Budget (in 2013 $)\", \n    y = \"Gross revenue (in 2013 $)\", \n    title = \"Gross revenue vs. budget, by Bechdel test result\"\n    )\n\nWarning: Removed 15 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\nThis was not a useful update as one of the levels of clean_test maps directly to one of the levels of binary."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": " Data visualization and transformation",
    "section": "",
    "text": "Title\n\n\n\n\n\n\nWelcome\n\n\n\n\nVisualizing data\n\n\n\n\nBuilding a plotstep-by-step with ggplot2\n\n\n\n\nGrammar of graphics\n\n\n\n\nGrammar of data transformation\n\n\n\n\nVisualizing and summarizing categorical data\n\n\n\n\nVisualizing and summarizing numerical data\n\n\n\n\nVisualizing and summarizing relationships\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html#slides",
    "href": "index.html#slides",
    "title": " Data visualization and transformation",
    "section": "",
    "text": "Title\n\n\n\n\n\n\nWelcome\n\n\n\n\nVisualizing data\n\n\n\n\nBuilding a plotstep-by-step with ggplot2\n\n\n\n\nGrammar of graphics\n\n\n\n\nGrammar of data transformation\n\n\n\n\nVisualizing and summarizing categorical data\n\n\n\n\nVisualizing and summarizing numerical data\n\n\n\n\nVisualizing and summarizing relationships\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html#code-alongs",
    "href": "index.html#code-alongs",
    "title": " Data visualization and transformation",
    "section": "Code alongs",
    "text": "Code alongs\n\n\n\n\n\nTitle\n\n\n\n\n\n\nUN Votes\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html#exercises",
    "href": "index.html#exercises",
    "title": " Data visualization and transformation",
    "section": "Exercises",
    "text": "Exercises\n\n\n\n\n\nTitle\n\n\n\n\n\n\nMeet the toolkit: Programming exercises\n\n\n\n\nBechdel + data visualization\n\n\n\n\nMario games + data visualization\n\n\n\n\n\nNo matching items"
  }
]